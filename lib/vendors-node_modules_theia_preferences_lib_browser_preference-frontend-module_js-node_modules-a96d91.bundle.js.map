{"version":3,"sources":["webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/style/index.css","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/style/preference-array.css","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/style/preference-context-menu.css","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/style/preference-object.css","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/style/search-input.css","webpack://tauri-theia/./node_modules/@theia/core/shared/fuzzy.js","webpack://tauri-theia/./node_modules/@theia/core/shared/lodash.debounce.js","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/preference-frontend-module.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/preference-tree-model.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/preferences-contribution.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/preferences-json-schema-contribution.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/preferences-monaco-contribution.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/util/preference-scope-command-manager.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/util/preference-tree-generator.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/util/preference-tree-label-provider.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/util/preference-types.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/components/preference-array-input.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/components/preference-boolean-input.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/components/preference-json-input.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/components/preference-node-renderer.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/components/preference-number-input.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/components/preference-select-input.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/components/preference-string-input.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/preference-editor-widget.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/preference-scope-tabbar-widget.tsx","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/preference-searchbar-widget.tsx","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/preference-tree-widget.tsx","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/preference-widget-bindings.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/views/preference-widget.tsx","webpack://tauri-theia/./node_modules/@theia/userstorage/src/browser/index.ts","webpack://tauri-theia/./node_modules/@theia/workspace/src/browser/index.ts","webpack://tauri-theia/./node_modules/@theia/preferences/src/browser/style/index.css?79ec"],"names":[],"mappings":"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","file":"vendors-node_modules_theia_preferences_lib_browser_preference-frontend-module_js-node_modules-a96d91.bundle.js","sourcesContent":["exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../../css-loader/index.js!./preference-context-menu.css\"), \"\");\nexports.i(require(\"-!../../../../../css-loader/index.js!./preference-array.css\"), \"\");\nexports.i(require(\"-!../../../../../css-loader/index.js!./preference-object.css\"), \"\");\nexports.i(require(\"-!../../../../../css-loader/index.js!./search-input.css\"), \"\");\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2019 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n#preferences_container_widget .p-SplitPanel-handle {\\n    border-right: var(--theia-border-width) solid var(--theia-editorGroup-border);\\n}\\n\\n#preferences_container_widget .p-TabBar-tabIcon {\\n    align-items: center;\\n    display: flex;\\n    line-height: var(--theia-content-line-height) !important;\\n}\\n\\n/* UI View */\\n\\n.theia-settings-container {\\n    max-width: 1000px;\\n    padding-top: 11px;\\n    display: grid;\\n    grid-template-areas:\\n        \\\"header header\\\"\\n        \\\"tabbar tabbar\\\"\\n        \\\"navbar editor\\\";\\n    grid-template-columns: minmax(150px, 280px) 1fr;\\n    grid-template-rows: 45px 45px 1fr;\\n}\\n\\n.theia-settings-container .settings-main:not(.no-results) .settings-no-results-announcement {\\n    display: none;\\n}\\n\\n.theia-settings-container .settings-main .hidden {\\n    display: none;\\n}\\n\\n.theia-settings-container .settings-no-results-announcement {\\n    font-weight: bold;\\n    font-size: var(--theia-ui-font-size3);\\n    padding-left: var(--theia-ui-padding);\\n    margin: calc(2*var(--theia-ui-padding)) 0px;\\n}\\n\\n.theia-settings-container .preferences-searchbar-widget {\\n    grid-area: header;\\n    margin: 3px 24px 0px 24px;\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget {\\n    grid-area: tabbar;\\n    margin: 3px 24px 0px 24px;\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget.with-shadow {\\n    box-shadow: 0px 6px 5px -5px var(--theia-widget-shadow);\\n}\\n\\n.theia-settings-container .preferences-tabbar-widget .preferences-scope-tab .p-TabBar-tabIcon:not(.preferences-folder-dropdown-icon) {\\n    display: none;\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab {\\n    background: var(--theia-editor-background);\\n    border-right: unset;\\n    border-bottom: var(--theia-border-width) solid var(--theia-tab-unfocusedInactiveForeground);\\n}\\n\\n#theia-main-content-panel .theia-settings-container .tabbar-underline {\\n    width: 100%;\\n    position: absolute;\\n    top: calc(var(--theia-private-horizontal-tab-height) + var(--theia-private-horizontal-tab-scrollbar-rail-height) / 2 - 1px);\\n    border-top: 1px solid var(--theia-tab-unfocusedInactiveForeground);\\n    z-index: -1;\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.p-mod-current {\\n    color: var(--theia-panelTitle-activeForeground);\\n    border-bottom: var(--theia-border-width) solid var(--theia-panelTitle-activeBorder);\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.p-mod-current:not(.theia-mod-active) {\\n    border-top: unset;\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.preferences-folder-tab .p-TabBar-tabLabel::after {\\n    content: 'Folder';\\n    padding-left: 4px;\\n    font-size: 0.8em;\\n    color: var(--theia-tab-inactiveForeground);\\n}\\n\\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.preferences-folder-dropdown {\\n    position: relative;\\n    padding-right: 23px;\\n}\\n\\n.preferences-folder-dropdown-icon {\\n    background: var(--theia-icon-chevron-right) center center no-repeat;\\n    transform: rotate(90deg);\\n    width: 15px;\\n    height: 15px;\\n    position: absolute;\\n    right: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .preferences-editor-widget {\\n    grid-area: editor;\\n}\\n\\n.theia-settings-container .preferences-editor-widget.full-pane {\\n    grid-column-start: 1;\\n    grid-column-end: 3;\\n}\\n\\n.theia-settings-container .preferences-tree-widget {\\n    grid-area: navbar;\\n    padding-left: 31px;\\n}\\n\\n.theia-settings-container .preferences-tree-widget .theia-mod-selected {\\n    font-weight: bold;\\n}\\n\\n.theia-settings-container .preferences-tree-widget .theia-TreeNodeSegment {\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n    max-width: 90%;\\n}\\n\\n.theia-settings-container .settings-main {\\n    height: 100%;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.theia-settings-container .settings-main-scroll-container {\\n    position: relative;\\n    box-sizing: border-box;\\n    width: 100%;\\n    padding: 0 24px;\\n    flex: 1 1 auto;\\n}\\n\\n.theia-settings-container .settings-main-sticky-misc {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    flex: 0 1 50px;\\n}\\n\\n.theia-settings-container .settings-main-sticky-misc .json-button>i {\\n    display: inline-block;\\n    background: var(--theia-icon-open-json) no-repeat;\\n    background-position-y: 1px;\\n    -webkit-filter: invert(1);\\n    filter: invert(1);\\n    height: var(--theia-icon-size);\\n    width: var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .settings-scope>label {\\n    margin-right: 12px;\\n}\\n\\n.theia-settings-container .settings-section {\\n    padding-left: 0;\\n    padding-top: var(--theia-ui-padding);\\n    margin-top: calc(var(--theia-ui-padding) * -1);\\n}\\n\\n.theia-settings-container .settings-section a {\\n    border: none;\\n    color: var(--theia-foreground);\\n    font-weight: 500;\\n    outline: 0;\\n    text-decoration: none;\\n}\\n\\n.theia-settings-container .settings-section a:hover {\\n    text-decoration: underline;\\n}\\n\\n.theia-settings-container .settings-section-category-title {\\n    font-weight: bold;\\n    font-size: var(--theia-ui-font-size3);\\n    padding-left: calc(2 * var(--theia-ui-padding));\\n}\\n\\n.theia-settings-container .settings-section-subcategory-title {\\n    font-weight: bold;\\n    font-size: var(--theia-ui-font-size2);\\n    padding-left: calc(2 * var(--theia-ui-padding));\\n}\\n\\n.theia-settings-container .settings-section>li {\\n    list-style-type: none;\\n    margin: var(--theia-ui-padding) 0px;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: justify;\\n    -ms-flex-pack: justify;\\n    justify-content: space-between;\\n    -webkit-box-align: start;\\n    -ms-flex-align: start;\\n    align-items: start;\\n}\\n\\n.theia-settings-container li.single-pref {\\n    list-style-type: none;\\n    margin: 12px 0 18px 0;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    box-sizing: border-box;\\n    padding-left: calc(2 * var(--theia-ui-padding));\\n    position: relative;\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter {\\n    position: absolute;\\n    height: 100%;\\n    left: -16px;\\n    padding-right: 4px;\\n    border-right: 2px hidden;\\n}\\n\\n.theia-settings-container .settings-context-menu-btn {\\n    opacity: 0;\\n    transition: opacity .5s;\\n}\\n\\n.theia-settings-container .single-pref:focus-within .pref-context-gutter .settings-context-menu-btn,\\n.theia-settings-container .pref-name:hover+.pref-context-gutter .settings-context-menu-btn,\\n.theia-settings-container .pref-context-gutter:hover .settings-context-menu-btn,\\n.theia-settings-container .pref-context-gutter.show-cog .settings-context-menu-btn {\\n    opacity: 1;\\n}\\n\\n.theia-settings-container li.single-pref .pref-context-gutter.theia-mod-item-modified {\\n    border-right: 2px solid var(--theia-settings-modifiedItemIndicator);\\n}\\n\\n.theia-settings-container li.single-pref input[type=\\\"text\\\"] {\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n}\\n\\n.theia-settings-container .settings-main {\\n    margin: 0;\\n}\\n\\n.theia-settings-container .settings-main-sticky {\\n    top: 0;\\n    padding-top: calc(var(--theia-ui-padding));\\n    margin-top: calc(var(--theia-ui-padding) * -1);\\n    background-color: var(--theia-editor-background);\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n    z-index: 1000;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-around;\\n}\\n\\n.theia-settings-container .pref-name {\\n    padding: 0;\\n    font-weight: bold;\\n}\\n\\n.theia-settings-container .preference-leaf-headline-prefix {\\n    color: var(--theia-descriptionForeground);\\n}\\n\\n.preferences-tree-spacer {\\n    padding-left: calc(var(--theia-ui-padding)/2);\\n    padding-right: calc(var(--theia-ui-padding)/2);\\n    min-width: var(--theia-icon-size);\\n    min-height: var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .pref-description {\\n    padding: var(--theia-ui-padding) 0;\\n    color: var(--theia-descriptionForeground);\\n    line-height: 18px;\\n}\\n\\n.theia-settings-container .theia-select:focus {\\n    outline-width: 1px;\\n    outline-style: solid;\\n    outline-offset: -1px;\\n    opacity: 1 !important;\\n    outline-color: var(--theia-focusBorder);\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"text\\\"] {\\n    border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"checkbox\\\"]:focus,\\n.theia-settings-container .theia-input[type=\\\"number\\\"]:focus {\\n    outline-width: 2px;\\n}\\n\\n.theia-settings-container .theia-input[type=\\\"checkbox\\\"] {\\n    margin-left: 0;\\n}\\n\\n/* Remove the spinners from input[type = number] on Firefox. */\\n.theia-settings-container .theia-input[type=\\\"number\\\"] {\\n    -webkit-appearance: textfield;\\n    border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n/* Remove the webkit spinners from input[type = number] on all browsers except Firefox. */\\n.theia-settings-container input::-webkit-outer-spin-button,\\n.theia-settings-container input::-webkit-inner-spin-button {\\n    -webkit-appearance: none;\\n    margin: 0;\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input .pref-input-container .pref-error-notification {\\n    border-style: solid;\\n    border-color: var(--theia-inputValidation-errorBorder);\\n    background-color: var(--theia-inputValidation-errorBackground);\\n    width: 100%;\\n    box-sizing: border-box;\\n    padding: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input .pref-input-container {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.theia-settings-container .pref-content-container a.theia-json-input {\\n    text-decoration: underline;\\n    color: var(--theia-titleBar-activeForeground)\\n}\\n\\n.theia-settings-container .pref-content-container a.theia-json-input:hover {\\n    text-decoration: none;\\n    cursor: pointer;\\n}\\n\\n.theia-settings-container .pref-content-container {\\n    width: 100%;\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input {\\n    padding: var(--theia-ui-padding) 0;\\n    width: 100%;\\n    max-width: 320px;\\n}\\n\\n.theia-settings-container .pref-content-container .pref-input>select,\\n.theia-settings-container .pref-content-container .pref-input>input:not([type=\\\"checkbox\\\"]) {\\n    width: 100%;\\n}\\n\\n\\n/* These specifications for the boolean class ensure that the\\n    checkbox is rendered to the left of the description.\\n*/\\n.theia-settings-container .pref-content-container.boolean {\\n    display: grid;\\n    grid-template-columns: 20px 1fr;\\n}\\n\\n.theia-settings-container .pref-content-container.boolean .pref-description {\\n    grid-column-start: 2;\\n    grid-row-start: 1;\\n}\\n\\n.theia-settings-container .pref-content-container.boolean .pref-input {\\n    grid-column-start: 1;\\n    grid-row-start: 1;\\n    margin: 0;\\n}\\n\\n.theia-settings-container .settings-section>li:last-child {\\n    margin-bottom: 20px;\\n}\\n\\n.theia-settings-container .preference-leaf-headline-suffix {\\n    font-weight: normal;\\n    color: var(--theia-descriptionForeground);\\n}\\n\\n.theia-settings-container .preference-leaf-headline-suffix::before {\\n    content: ' (';\\n}\\n\\n.theia-settings-container .preference-leaf-headline-suffix::after {\\n    content: ')';\\n}\\n\\n.theia-settings-container .preference-scope-underlined {\\n    text-decoration: underline;\\n    cursor: pointer;\\n}\\n\\n.theia-settings-container .preference-modified-scope-wrapper:not(:last-child)::after {\\n    content: ', ';\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .preference-array {\\n  list-style: none;\\n  padding   : 0;\\n}\\n\\n.theia-settings-container .preference-array-element {\\n  display          : -webkit-box;\\n  display          : -ms-flexbox;\\n  display          : flex;\\n  -webkit-box-pack : justify;\\n  -ms-flex-pack    : justify;\\n  justify-content  : space-between;\\n  -webkit-box-align: center;\\n  -ms-flex-align   : center;\\n  align-items      : center;\\n  padding          : calc(var(--theia-ui-padding) / 2) var(--theia-ui-padding);\\n  border-bottom    : var(--theia-panel-border) 2px solid;\\n}\\n\\n.theia-settings-container .pref-input li:nth-last-child(2) {\\n  border-bottom: none;\\n}\\n\\n.theia-settings-container .pref-input li:last-child {\\n  display          : -webkit-box;\\n  display          : -ms-flexbox;\\n  display          : flex;\\n  -webkit-box-align: center;\\n  -ms-flex-align   : center;\\n  align-items      : center;\\n}\\n\\n.theia-settings-container .preference-array-element:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n}\\n\\n.theia-settings-container .preference-array-element-btn {\\n  width            : 1.5em;\\n  height           : 1.5em;\\n  display          : -webkit-box;\\n  display          : -ms-flexbox;\\n  display          : flex;\\n  -webkit-box-pack : center;\\n  -ms-flex-pack    : center;\\n  justify-content  : center;\\n  -webkit-box-align: center;\\n  -ms-flex-align   : center;\\n  align-items      : center;\\n}\\n\\n.theia-settings-container .preference-array-element .preference-array-element-btn {\\n  opacity: 0;\\n}\\n\\n.theia-settings-container .preference-array-element:hover .preference-array-element-btn {\\n  opacity: 1;\\n}\\n\\n.theia-settings-container .preference-array-element-btn:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n  cursor          : pointer;\\n}\\n\\n.theia-settings-container .preference-array .add-btn {\\n  margin-left : calc((var(--theia-icon-size) + 4px) * -1);\\n  margin-right: 4px;\\n  width       : var(--theia-icon-size);\\n  height      : var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .preference-array-clear-item {\\n  background: var(--theia-icon-close) no-repeat;\\n  width     : var(--theia-icon-size);\\n  height    : var(--theia-icon-size);\\n}\\n\\n.theia-settings-container .preference-array-input {\\n  padding-right: calc(var(--theia-icon-size) + var(--theia-ui-padding));\\n  width        : 100%;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .settings-context-menu-container {\\n  position: relative;\\n  padding-left: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .settings-context-menu-btn {\\n  cursor: pointer;\\n}\\n\\n.theia-settings-container .settings-context-menu {\\n  position: absolute;\\n  width: var(--theia-settingsSidebar-width);\\n  list-style: none;\\n  padding: var(--theia-ui-padding);\\n  bottom: calc(100% + 10px);\\n  left: -10px;\\n  z-index: 9999;\\n  background-color: var(--theia-menu-background);\\n}\\n\\n.theia-settings-container .settings-context-menu:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  left: 10px;\\n  bottom: -10px;\\n  width: 0;\\n  height: 0;\\n  border-left: 10px solid transparent;\\n  border-right: 10px solid transparent;\\n  border-top: 10px solid var(--theia-menu-background);\\n}\\n\\n.theia-settings-container .settings-context-menu li {\\n  padding: var(--theia-ui-padding);\\n}\\n\\n.theia-settings-container .settings-context-menu li:hover {\\n  background-color: var(--theia-menu-selectionBackground);\\n}\\n\\n.theia-settings-container .settings-context-menu i {\\n  padding-right: var(--theia-ui-padding);\\n  width: var(--theia-icon-size);\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n  -ms-flex-pack: center;\\n  justify-content: center;\\n}\\n\\n.theia-settings-container .pref-context-menu-btn {\\n  margin-left: 5px;\\n}\\n\\n.theia-settings-container .pref-context-menu-btn:hover {\\n  background-color: rgba(50%, 50%, 50%, 0.1);\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .object-preference-input-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n  -ms-flex-pack: justify;\\n  justify-content: space-between;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n}\\n\\n.theia-settings-container .object-preference-input {\\n  width: 100%;\\n  max-height: 250px;\\n  resize: none;\\n  color: var(--theia-settings-textInputForeground);\\n  background-color: var(--theia-settings-textInputBackground);\\n  border-color: var(--theia-panel-border);\\n  font-size: var(--theia-code-font-size);\\n  margin-bottom: 10px;\\n}\\n\\n.theia-settings-container .object-preference-input-btn-toggle {\\n  padding: 0 calc(var(--theia-ui-padding) / 2);\\n}\\n\\n.theia-settings-container .object-preference-input-btn-toggle-icon {\\n  display: inline-block;\\n  background: var(--theia-icon-open-json) no-repeat;\\n  background-position-y: 1px;\\n  height: var(--theia-icon-size);\\n  width: var(--theia-icon-size);\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2020 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-settings-container .settings-search-container {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.theia-settings-container .settings-search-container .settings-search-input {\\n  flex: 1;\\n  text-indent: 8px;\\n  padding: calc(var(--theia-ui-padding) / 2) 0;\\n  box-sizing: border-box;\\n  border: 1px solid var(--theia-dropdown-border);\\n}\\n\\n.theia-settings-container .settings-search-container .option-buttons {\\n  height: 23px;\\n  align-items: center;\\n  position: absolute;\\n  z-index: 999;\\n  right: 5px;\\n  display: flex;\\n}\\n\\n.theia-settings-container .settings-search-container .clear-all {\\n  background: var(--theia-icon-clear);\\n}\\n\\n.theia-settings-container .settings-search-container .results-found {\\n  background-color: var(--theia-badge-background);\\n  border-radius: 2px;\\n  color: var(--theia-badge-foreground);\\n  padding: calc(var(--theia-ui-padding) / 5) calc(var(--theia-ui-padding) / 2);\\n}\\n\\n.theia-settings-container .settings-search-container .option {\\n  width: 21px;\\n  height: 21px;\\n  margin: 0 1px;\\n  display: inline-block;\\n  box-sizing: border-box;\\n  user-select: none;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  border: var(--theia-border-width) solid transparent;\\n  opacity: 0.7;\\n  cursor: pointer;\\n}\\n\\n.theia-settings-container .settings-search-container .enabled {\\n  opacity: 1.0;\\n}\\n\", \"\"]);\n\n// exports\n","module.exports = require('fuzzy');\n","module.exports = require('lodash.debounce');\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/style/index.css';\nimport './preferences-monaco-contribution';\nimport { ContainerModule, interfaces } from '@theia/core/shared/inversify';\nimport { bindViewContribution } from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { PreferenceTreeGenerator } from './util/preference-tree-generator';\nimport { bindPreferenceProviders } from './preference-bindings';\nimport { bindPreferencesWidgets } from './views/preference-widget-bindings';\nimport { PreferencesContribution } from './preferences-contribution';\nimport { PreferenceScopeCommandManager } from './util/preference-scope-command-manager';\nimport { JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\nimport { PreferencesJsonSchemaContribution } from './preferences-json-schema-contribution';\n\nexport function bindPreferences(bind: interfaces.Bind, unbind: interfaces.Unbind): void {\n    bindPreferenceProviders(bind, unbind);\n    bindPreferencesWidgets(bind);\n\n    bind(PreferenceTreeGenerator).toSelf().inSingletonScope();\n\n    bindViewContribution(bind, PreferencesContribution);\n\n    bind(PreferenceScopeCommandManager).toSelf().inSingletonScope();\n    bind(TabBarToolbarContribution).toService(PreferencesContribution);\n\n    bind(PreferencesJsonSchemaContribution).toSelf().inSingletonScope();\n    bind(JsonSchemaContribution).toService(PreferencesJsonSchemaContribution);\n}\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bindPreferences(bind, unbind);\n});\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    TreeModelImpl,\n    TreeWidget,\n    CompositeTreeNode,\n    TopDownTreeIterator,\n    TreeNode,\n    PreferenceSchemaProvider,\n    PreferenceDataProperty,\n    NodeProps,\n    ExpandableTreeNode,\n    SelectableTreeNode,\n    PreferenceService,\n} from '@theia/core/lib/browser';\nimport { Emitter } from '@theia/core';\nimport { PreferencesSearchbarWidget } from './views/preference-searchbar-widget';\nimport { PreferenceTreeGenerator, COMMONLY_USED_SECTION_PREFIX } from './util/preference-tree-generator';\nimport * as fuzzy from '@theia/core/shared/fuzzy';\nimport { PreferencesScopeTabBar } from './views/preference-scope-tabbar-widget';\nimport { Preference } from './util/preference-types';\nimport { Event } from '@theia/core/lib/common';\n\nexport interface PreferenceTreeNodeProps extends NodeProps {\n    visibleChildren: number;\n    isExpansible?: boolean;\n}\n\nexport interface PreferenceTreeNodeRow extends Readonly<TreeWidget.NodeRow>, PreferenceTreeNodeProps {\n    node: Preference.TreeNode;\n}\nexport enum PreferenceFilterChangeSource {\n    Schema,\n    Search,\n    Scope,\n}\nexport interface PreferenceFilterChangeEvent {\n    source: PreferenceFilterChangeSource\n}\n\n@injectable()\nexport class PreferenceTreeModel extends TreeModelImpl {\n\n    @inject(PreferenceSchemaProvider) protected readonly schemaProvider: PreferenceSchemaProvider;\n    @inject(PreferencesSearchbarWidget) protected readonly filterInput: PreferencesSearchbarWidget;\n    @inject(PreferenceTreeGenerator) protected readonly treeGenerator: PreferenceTreeGenerator;\n    @inject(PreferencesScopeTabBar) protected readonly scopeTracker: PreferencesScopeTabBar;\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n\n    protected readonly onTreeFilterChangedEmitter = new Emitter<PreferenceFilterChangeEvent>();\n    readonly onFilterChanged = this.onTreeFilterChangedEmitter.event;\n\n    protected lastSearchedFuzzy: string = '';\n    protected lastSearchedLiteral: string = '';\n    protected _currentScope: number = Number(Preference.DEFAULT_SCOPE.scope);\n    protected _isFiltered: boolean = false;\n    protected _currentRows: Map<string, PreferenceTreeNodeRow> = new Map();\n    protected _totalVisibleLeaves = 0;\n\n    get currentRows(): Readonly<Map<string, PreferenceTreeNodeRow>> {\n        return this._currentRows;\n    }\n\n    get totalVisibleLeaves(): number {\n        return this._totalVisibleLeaves;\n    }\n\n    get isFiltered(): boolean {\n        return this._isFiltered;\n    }\n\n    get propertyList(): { [key: string]: PreferenceDataProperty; } {\n        return this.schemaProvider.getCombinedSchema().properties;\n    }\n\n    get currentScope(): Preference.SelectedScopeDetails {\n        return this.scopeTracker.currentScope;\n    }\n\n    get onSchemaChanged(): Event<CompositeTreeNode> {\n        return this.treeGenerator.onSchemaChanged;\n    }\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        super.init();\n        this.toDispose.pushAll([\n            this.treeGenerator.onSchemaChanged(newTree => this.handleNewSchema(newTree)),\n            this.scopeTracker.onScopeChanged(scopeDetails => {\n                this._currentScope = scopeDetails.scope;\n                this.updateFilteredRows(PreferenceFilterChangeSource.Scope);\n            }),\n            this.filterInput.onFilterChanged(newSearchTerm => {\n                this.lastSearchedLiteral = newSearchTerm;\n                this.lastSearchedFuzzy = newSearchTerm.replace(/\\s/g, '');\n                this._isFiltered = newSearchTerm.length > 2;\n                if (this.isFiltered) {\n                    this.expandAll();\n                } else if (CompositeTreeNode.is(this.root)) {\n                    this.collapseAll(this.root);\n                }\n                this.updateFilteredRows(PreferenceFilterChangeSource.Search);\n            }),\n            this.onFilterChanged(() => {\n                this.filterInput.updateResultsCount(this._totalVisibleLeaves);\n            }),\n            this.onTreeFilterChangedEmitter,\n        ]);\n        await this.preferenceService.ready;\n        this.handleNewSchema(this.treeGenerator.root);\n    }\n\n    private handleNewSchema(newRoot: CompositeTreeNode): void {\n        this.root = newRoot;\n        if (this.isFiltered) {\n            this.expandAll();\n        }\n        this.updateFilteredRows(PreferenceFilterChangeSource.Schema);\n    }\n\n    protected updateRows(): void {\n        const root = this.root;\n        this._currentRows = new Map();\n        if (root) {\n            this._totalVisibleLeaves = 0;\n            let index = 0;\n\n            for (const node of new TopDownTreeIterator(root, {\n                pruneCollapsed: false,\n                pruneSiblings: true\n            })) {\n                if (TreeNode.isVisible(node) && Preference.TreeNode.is(node)) {\n                    const { id } = Preference.TreeNode.getGroupAndIdFromNodeId(node.id);\n                    if (CompositeTreeNode.is(node) || this.passesCurrentFilters(node, id)) {\n                        this.updateVisibleChildren(node);\n\n                        this._currentRows.set(node.id, {\n                            index: index++,\n                            node,\n                            depth: node.depth,\n                            visibleChildren: 0,\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    protected updateFilteredRows(source: PreferenceFilterChangeSource): void {\n        this.updateRows();\n        this.onTreeFilterChangedEmitter.fire({ source });\n    }\n\n    protected passesCurrentFilters(node: Preference.LeafNode, prefID: string): boolean {\n        if (!this.schemaProvider.isValidInScope(prefID, this._currentScope)) {\n            return false;\n        }\n        if (!this._isFiltered) {\n            return true;\n        }\n        // When filtering, VSCode will render an item that is present in the commonly used section only once but render both its possible parents in the left-hand tree.\n        // E.g. searching for editor.renderWhitespace will show one item in the main panel, but both 'Commonly Used' and 'Text Editor' in the left tree.\n        // That seems counterintuitive and introduces a number of special cases, so I prefer to remove the commonly used section entirely when the user searches.\n        if (node.id.startsWith(COMMONLY_USED_SECTION_PREFIX)) {\n            return false;\n        }\n        return fuzzy.test(this.lastSearchedFuzzy, prefID) // search matches preference name.\n            // search matches description. Fuzzy isn't ideal here because the score depends on the order of discovery.\n            || (node.preference.data.description ?? '').includes(this.lastSearchedLiteral);\n    }\n\n    protected isVisibleSelectableNode(node: TreeNode): node is SelectableTreeNode {\n        return CompositeTreeNode.is(node) && !!this._currentRows.get(node.id)?.visibleChildren;\n    }\n\n    protected updateVisibleChildren(node: TreeNode): void {\n        if (!CompositeTreeNode.is(node)) {\n            this._totalVisibleLeaves++;\n            let nextParent = node.parent?.id && this._currentRows.get(node.parent?.id);\n            while (nextParent && nextParent.node !== this.root) {\n                if (nextParent) {\n                    nextParent.visibleChildren += 1;\n                }\n                nextParent = nextParent.node.parent?.id && this._currentRows.get(nextParent.node.parent?.id);\n                if (nextParent) {\n                    nextParent.isExpansible = true;\n                }\n            }\n        }\n    }\n\n    collapseAllExcept(openNode: TreeNode | undefined): void {\n        if (ExpandableTreeNode.is(openNode)) {\n            this.expandNode(openNode);\n        }\n        if (CompositeTreeNode.is(this.root)) {\n            this.root.children.forEach(child => {\n                if (child !== openNode && ExpandableTreeNode.is(child)) {\n                    this.collapseNode(child);\n                }\n            });\n        }\n    }\n\n    protected expandAll(): void {\n        if (CompositeTreeNode.is(this.root)) {\n            this.root.children.forEach(child => {\n                if (ExpandableTreeNode.is(child)) {\n                    this.expandNode(child);\n                }\n            });\n        }\n    }\n\n    /**\n     * @returns true if selection changed, false otherwise\n     */\n    selectIfNotSelected(node: SelectableTreeNode): boolean {\n        const currentlySelected = this.selectedNodes[0];\n        if (node !== currentlySelected) {\n            this.selectNode(node);\n            return true;\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named } from '@theia/core/shared/inversify';\nimport { MenuModelRegistry, CommandRegistry } from '@theia/core';\nimport {\n    CommonMenus,\n    AbstractViewContribution,\n    CommonCommands,\n    KeybindingRegistry,\n    Widget,\n    PreferenceScope,\n    PreferenceProvider,\n    PreferenceService,\n} from '@theia/core/lib/browser';\nimport { isFirefox } from '@theia/core/lib/browser';\nimport { isOSX } from '@theia/core/lib/common/os';\nimport { TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { EditorManager, EditorWidget } from '@theia/editor/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { PreferencesWidget } from './views/preference-widget';\nimport { WorkspacePreferenceProvider } from './workspace-preference-provider';\nimport { Preference, PreferencesCommands, PreferenceMenus } from './util/preference-types';\nimport { ClipboardService } from '@theia/core/lib/browser/clipboard-service';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\n\n@injectable()\nexport class PreferencesContribution extends AbstractViewContribution<PreferencesWidget> {\n\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(PreferenceProvider) @named(PreferenceScope.Workspace) protected readonly workspacePreferenceProvider: WorkspacePreferenceProvider;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n    @inject(ClipboardService) protected readonly clipboardService: ClipboardService;\n    @inject(PreferencesWidget) protected readonly scopeTracker: PreferencesWidget;\n\n    constructor() {\n        super({\n            widgetId: PreferencesWidget.ID,\n            widgetName: PreferencesWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'main',\n            },\n        });\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(CommonCommands.OPEN_PREFERENCES, {\n            execute: () => this.openView({ activate: true }),\n        });\n        commands.registerCommand(PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR, {\n            isEnabled: () => true,\n            isVisible: w => this.withWidget(w, () => true),\n            execute: (preferenceId: string) => {\n                this.openPreferencesJSON(preferenceId);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.COPY_JSON_NAME, {\n            isEnabled: Preference.EditorCommandArgs.is,\n            isVisible: Preference.EditorCommandArgs.is,\n            execute: ({ id, value }: Preference.EditorCommandArgs) => {\n                this.clipboardService.writeText(id);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.COPY_JSON_VALUE, {\n            isEnabled: Preference.EditorCommandArgs.is,\n            isVisible: Preference.EditorCommandArgs.is,\n            execute: ({ id, value }: { id: string, value: string; }) => {\n                const jsonString = `\"${id}\": ${JSON.stringify(value)}`;\n                this.clipboardService.writeText(jsonString);\n            }\n        });\n        commands.registerCommand(PreferencesCommands.RESET_PREFERENCE, {\n            isEnabled: Preference.EditorCommandArgs.is,\n            isVisible: Preference.EditorCommandArgs.is,\n            execute: ({ id }: Preference.EditorCommandArgs) => {\n                this.preferenceService.set(id, undefined, Number(this.scopeTracker.currentScope.scope), this.scopeTracker.currentScope.uri);\n            }\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(CommonMenus.FILE_SETTINGS_SUBMENU_OPEN, {\n            commandId: CommonCommands.OPEN_PREFERENCES.id,\n            label: CommonCommands.OPEN_PREFERENCES.label,\n            order: 'a10',\n        });\n        menus.registerMenuAction(CommonMenus.SETTINGS_OPEN, {\n            commandId: CommonCommands.OPEN_PREFERENCES.id,\n            label: CommonCommands.OPEN_PREFERENCES.label,\n            order: 'a10',\n        });\n        menus.registerMenuAction(PreferenceMenus.PREFERENCE_EDITOR_CONTEXT_MENU, {\n            commandId: PreferencesCommands.RESET_PREFERENCE.id,\n            label: PreferencesCommands.RESET_PREFERENCE.label,\n            order: 'a'\n        });\n        menus.registerMenuAction(PreferenceMenus.PREFERENCE_EDITOR_COPY_ACTIONS, {\n            commandId: PreferencesCommands.COPY_JSON_VALUE.id,\n            label: PreferencesCommands.COPY_JSON_VALUE.label,\n            order: 'b'\n        });\n        menus.registerMenuAction(PreferenceMenus.PREFERENCE_EDITOR_COPY_ACTIONS, {\n            commandId: PreferencesCommands.COPY_JSON_NAME.id,\n            label: PreferencesCommands.COPY_JSON_NAME.label,\n            order: 'c'\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: CommonCommands.OPEN_PREFERENCES.id,\n            keybinding: (isOSX && !isFirefox) ? 'cmd+,' : 'ctrl+,'\n        });\n    }\n\n    registerToolbarItems(toolbar: TabBarToolbarRegistry): void {\n        toolbar.registerItem({\n            id: PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id,\n            command: PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id,\n            tooltip: 'Open Preferences in JSON',\n            priority: 0,\n        });\n    }\n\n    protected async openPreferencesJSON(opener: string | PreferencesWidget): Promise<void> {\n        const { scope, activeScopeIsFolder, uri } = this.scopeTracker.currentScope;\n        const scopeID = Number(scope);\n        let preferenceId = '';\n        if (typeof opener === 'string') {\n            preferenceId = opener;\n            const currentPreferenceValue = this.preferenceService.inspect(preferenceId, uri);\n            const valueInCurrentScope = Preference.getValueInScope(currentPreferenceValue, scopeID) ?? currentPreferenceValue?.defaultValue;\n            this.preferenceService.set(preferenceId, valueInCurrentScope, scopeID, uri);\n        }\n\n        let jsonEditorWidget: EditorWidget;\n        const jsonUriToOpen = await this.obtainConfigUri(scopeID, activeScopeIsFolder, uri);\n        if (jsonUriToOpen) {\n            jsonEditorWidget = await this.editorManager.open(jsonUriToOpen);\n\n            if (preferenceId) {\n                const text = jsonEditorWidget.editor.document.getText();\n                if (preferenceId) {\n                    const { index } = text.match(preferenceId)!;\n                    const numReturns = text.slice(0, index).match(new RegExp('\\n', 'g'))!.length;\n                    jsonEditorWidget.editor.cursor = { line: numReturns, character: 4 + preferenceId.length + 4 };\n                }\n            }\n        }\n    }\n\n    private async obtainConfigUri(serializedScope: number, activeScopeIsFolder: boolean, resource?: string): Promise<URI | undefined> {\n        let scope: PreferenceScope = serializedScope;\n        if (activeScopeIsFolder) {\n            scope = PreferenceScope.Folder;\n        }\n        const resourceUri = !!resource ? resource : undefined;\n        const configUri = this.preferenceService.getConfigUri(scope, resourceUri);\n        if (!configUri) {\n            return undefined;\n        }\n        if (configUri && !await this.fileService.exists(configUri)) {\n            await this.fileService.create(configUri);\n        }\n        return configUri;\n    }\n\n    /**\n     * Determine if the current widget is the PreferencesWidget.\n     */\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), fn: (widget: PreferencesWidget) => T): T | false {\n        if (widget instanceof PreferencesWidget && widget.id === PreferencesWidget.ID) {\n            return fn(widget);\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { InMemoryResources } from '@theia/core';\nimport { JsonSchemaRegisterContext, JsonSchemaContribution } from '@theia/core/lib/browser/json-schema-store';\nimport { PreferenceSchemaProvider } from '@theia/core/lib/browser/preferences/preference-contribution';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { PreferenceScope } from '@theia/core/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\nconst PREFERENCE_URI_PREFIX = 'vscode://schemas/settings/';\nconst USER_STORAGE_PREFIX = 'user-storage:/';\n\n@injectable()\nexport class PreferencesJsonSchemaContribution implements JsonSchemaContribution {\n    private serializeSchema = (scope: PreferenceScope) => JSON.stringify(this.schemaProvider.getSchema(scope));\n\n    @inject(PreferenceSchemaProvider)\n    protected readonly schemaProvider: PreferenceSchemaProvider;\n\n    @inject(InMemoryResources)\n    protected readonly inmemoryResources: InMemoryResources;\n\n    @inject(PreferenceConfigurations)\n    protected readonly preferenceConfigurations: PreferenceConfigurations;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    registerSchemas(context: JsonSchemaRegisterContext): void {\n        this.registerSchema(PreferenceScope.Default, context);\n        this.registerSchema(PreferenceScope.User, context);\n        this.registerSchema(PreferenceScope.Workspace, context);\n        this.registerSchema(PreferenceScope.Folder, context);\n\n        this.workspaceService.updateSchema('settings', { $ref: this.getSchemaURIForScope(PreferenceScope.Workspace).toString() });\n        this.schemaProvider.onDidPreferenceSchemaChanged(() => this.updateInMemoryResources());\n    }\n\n    private registerSchema(scope: PreferenceScope, context: JsonSchemaRegisterContext): void {\n        const scopeStr = PreferenceScope[scope].toLowerCase();\n        const uri = new URI(PREFERENCE_URI_PREFIX + scopeStr);\n\n        this.inmemoryResources.add(uri, this.serializeSchema(scope));\n\n        context.registerSchema({\n            fileMatch: this.getFileMatch(scopeStr),\n            url: uri.toString()\n        });\n    }\n\n    private updateInMemoryResources(): void {\n        this.inmemoryResources.update(this.getSchemaURIForScope(PreferenceScope.Default),\n            this.serializeSchema(+PreferenceScope.Default));\n        this.inmemoryResources.update(this.getSchemaURIForScope(PreferenceScope.User),\n            this.serializeSchema(+PreferenceScope.User));\n        this.inmemoryResources.update(this.getSchemaURIForScope(PreferenceScope.Workspace),\n            this.serializeSchema(+PreferenceScope.Workspace));\n        this.inmemoryResources.update(this.getSchemaURIForScope(PreferenceScope.Folder),\n            this.serializeSchema(+PreferenceScope.Folder));\n    }\n\n    private getSchemaURIForScope(scope: PreferenceScope): URI {\n        return new URI(PREFERENCE_URI_PREFIX + PreferenceScope[scope].toLowerCase());\n    }\n\n    private getFileMatch(scope: string): string[] {\n        const baseName = this.preferenceConfigurations.getConfigName() + '.json';\n        return [baseName, new URI(USER_STORAGE_PREFIX + scope).resolve(baseName).toString()];\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nmonaco.languages.register({\n    id: 'jsonc',\n    'aliases': [\n        'JSON with Comments'\n    ],\n    'filenames': [\n        'settings.json'\n    ],\n    'extensions': [\n        '.theia-workspace'\n    ]\n});\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { PreferenceScope, LabelProvider } from '@theia/core/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { CommandRegistry, MenuModelRegistry, Command } from '@theia/core/lib/common';\nimport { Preference } from './preference-types';\n\nexport const FOLDER_SCOPE_MENU_PATH = ['preferences:scope.menu'];\n\n@injectable()\nexport class PreferenceScopeCommandManager {\n    @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry;\n    @inject(MenuModelRegistry) protected readonly menuModelRegistry: MenuModelRegistry;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    protected foldersAsCommands: Command[] = [];\n\n    createFolderWorkspacesMenu(\n        folderWorkspaces: FileStat[],\n        currentFolderURI?: string,\n    ): void {\n        this.foldersAsCommands.forEach(folderCommand => {\n            this.menuModelRegistry.unregisterMenuAction(folderCommand, FOLDER_SCOPE_MENU_PATH);\n            this.commandRegistry.unregisterCommand(folderCommand);\n        });\n        this.foldersAsCommands.length = 0;\n\n        folderWorkspaces.forEach(folderWorkspace => {\n            const folderLabel = this.labelProvider.getName(folderWorkspace.resource);\n\n            const iconClass = currentFolderURI === folderWorkspace.resource.toString() ? 'fa fa-check' : '';\n            const newFolderAsCommand = {\n                id: `preferenceScopeCommand:${folderWorkspace.resource.toString()}`,\n                label: folderLabel,\n                iconClass: iconClass\n            };\n\n            this.foldersAsCommands.push(newFolderAsCommand);\n\n            this.commandRegistry.registerCommand(newFolderAsCommand, {\n                isVisible: (callback, check) => check === 'from-tabbar',\n                isEnabled: (callback, check) => check === 'from-tabbar',\n                execute: (callback: (scopeDetails: Preference.SelectedScopeDetails) => void) => {\n                    callback({ scope: PreferenceScope.Folder, uri: folderWorkspace.resource.toString(), activeScopeIsFolder: true });\n                }\n            });\n\n            this.menuModelRegistry.registerMenuAction(FOLDER_SCOPE_MENU_PATH, {\n                commandId: newFolderAsCommand.id,\n                label: newFolderAsCommand.label\n            });\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { CompositeTreeNode, PreferenceSchemaProvider, OVERRIDE_PROPERTY_PATTERN, PreferenceDataProperty } from '@theia/core/lib/browser';\nimport { PreferenceConfigurations } from '@theia/core/lib/browser/preferences/preference-configurations';\nimport { Emitter } from '@theia/core';\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { Preference } from './preference-types';\n\nexport const COMMONLY_USED_SECTION_PREFIX = 'commonly-used';\n@injectable()\nexport class PreferenceTreeGenerator {\n\n    @inject(PreferenceSchemaProvider) protected readonly schemaProvider: PreferenceSchemaProvider;\n    @inject(PreferenceConfigurations) protected readonly preferenceConfigs: PreferenceConfigurations;\n\n    protected _root: CompositeTreeNode;\n\n    protected readonly onSchemaChangedEmitter = new Emitter<CompositeTreeNode>();\n    readonly onSchemaChanged = this.onSchemaChangedEmitter.event;\n    protected readonly commonlyUsedPreferences = [\n        'editor.autoSave', 'editor.autoSaveDelay', 'editor.fontSize',\n        'editor.fontFamily', 'editor.tabSize', 'editor.renderWhitespace',\n        'editor.cursorStyle', 'editor.multiCursorModifier', 'editor.insertSpaces',\n        'editor.wordWrap', 'files.exclude', 'files.associations'\n    ];\n    protected readonly topLevelCategories = new Map([\n        [COMMONLY_USED_SECTION_PREFIX, 'Commonly Used'],\n        ['editor', 'Text Editor'],\n        ['workbench', 'Workbench'],\n        ['window', 'Window'],\n        ['features', 'Features'],\n        ['application', 'Application'],\n        ['extensions', 'Extensions']\n    ]);\n    protected readonly sectionAssignments = new Map([\n        ['comments', 'features'],\n        ['debug', 'features'],\n        ['diffEditor', 'editor'],\n        ['explorer', 'features'],\n        ['extensions', 'features'],\n        ['files', 'editor'],\n        ['hosted-plugin', 'features'],\n        ['keyboard', 'application'],\n        ['output', 'features'],\n        ['problems', 'features'],\n        ['preview', 'features'],\n        ['search', 'features'],\n        ['task', 'features'],\n        ['terminal', 'features'],\n        ['webview', 'features'],\n        ['workspace', 'application'],\n    ]);\n    protected readonly defaultTopLevelCategory = 'extensions';\n\n    get root(): CompositeTreeNode {\n        return this._root ?? this.generateTree();\n    }\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        await this.schemaProvider.ready;\n        this.schemaProvider.onDidPreferenceSchemaChanged(() => this.handleChangedSchema());\n        this.handleChangedSchema();\n    }\n\n    generateTree(): CompositeTreeNode {\n        const preferencesSchema = this.schemaProvider.getCombinedSchema();\n        const propertyNames = Object.keys(preferencesSchema.properties);\n        const groups = new Map<string, Preference.CompositeTreeNode>();\n        const root = this.createRootNode();\n\n        for (const id of this.topLevelCategories.keys()) {\n            this.getOrCreatePreferencesGroup(id, id, root, groups);\n        }\n        const commonlyUsed = this.getOrCreatePreferencesGroup(COMMONLY_USED_SECTION_PREFIX, COMMONLY_USED_SECTION_PREFIX, root, groups);\n        for (const preference of this.commonlyUsedPreferences) {\n            if (preference in preferencesSchema.properties) {\n                this.createLeafNode(preference, commonlyUsed, preferencesSchema.properties[preference]);\n            }\n        }\n        for (const propertyName of propertyNames) {\n            if (!this.preferenceConfigs.isSectionName(propertyName) && !OVERRIDE_PROPERTY_PATTERN.test(propertyName)) {\n                const labels = propertyName.split('.');\n                const groupID = this.getGroupName(labels);\n                const subgroupName = this.getSubgroupName(labels, groupID);\n                const subgroupID = [groupID, subgroupName].join('.');\n                const toplevelParent = this.getOrCreatePreferencesGroup(groupID, groupID, root, groups);\n                const immediateParent = subgroupName && this.getOrCreatePreferencesGroup(subgroupID, groupID, toplevelParent, groups);\n                this.createLeafNode(propertyName, immediateParent || toplevelParent, preferencesSchema.properties[propertyName]);\n            }\n        }\n\n        for (const group of groups.values()) {\n            if (group.id !== `${COMMONLY_USED_SECTION_PREFIX}@${COMMONLY_USED_SECTION_PREFIX}`) {\n                (group.children as Preference.TreeNode[]).sort((a, b) => {\n                    const aIsComposite = CompositeTreeNode.is(a);\n                    const bIsComposite = CompositeTreeNode.is(b);\n                    if (aIsComposite && !bIsComposite) {\n                        return 1;\n                    }\n                    if (bIsComposite && !aIsComposite) {\n                        return -1;\n                    }\n                    return a.id.localeCompare(b.id);\n                });\n            }\n        }\n\n        this._root = root;\n        return root;\n    };\n\n    protected getGroupName(labels: string[]): string {\n        const defaultGroup = labels[0];\n        if (this.topLevelCategories.has(defaultGroup)) {\n            return defaultGroup;\n        }\n        const assignedGroup = this.sectionAssignments.get(defaultGroup);\n        if (assignedGroup) {\n            return assignedGroup;\n        }\n        return this.defaultTopLevelCategory;\n    }\n\n    protected getSubgroupName(labels: string[], computedGroupName: string): string | undefined {\n        if (computedGroupName !== labels[0]) {\n            return labels[0];\n        } else if (labels.length > 2) {\n            return labels[1];\n        }\n    }\n\n    doHandleChangedSchema(): void {\n        const newTree = this.generateTree();\n        this.onSchemaChangedEmitter.fire(newTree);\n    }\n\n    handleChangedSchema = debounce(this.doHandleChangedSchema, 200);\n\n    protected createRootNode(): CompositeTreeNode {\n        return {\n            id: 'root-node-id',\n            name: '',\n            parent: undefined,\n            visible: true,\n            children: []\n        };\n    }\n\n    protected createLeafNode(property: string, preferencesGroup: Preference.CompositeTreeNode, data: PreferenceDataProperty): Preference.LeafNode {\n        const { group } = Preference.TreeNode.getGroupAndIdFromNodeId(preferencesGroup.id);\n        const newNode = {\n            id: `${group}@${property}`,\n            preferenceId: property,\n            parent: preferencesGroup,\n            visible: true,\n            preference: { data },\n            depth: Preference.TreeNode.isTopLevel(preferencesGroup) ? 1 : 2,\n        };\n        CompositeTreeNode.addChild(preferencesGroup, newNode);\n        return newNode;\n    }\n\n    protected createPreferencesGroup(id: string, group: string, root: CompositeTreeNode): Preference.CompositeTreeNode {\n        const newNode = {\n            id: `${group}@${id}`,\n            visible: true,\n            parent: root,\n            children: [],\n            expanded: false,\n            selected: false,\n            depth: 0,\n        };\n        const isTopLevel = Preference.TreeNode.isTopLevel(newNode);\n        if (!isTopLevel) {\n            delete newNode.expanded;\n        }\n        newNode.depth = isTopLevel ? 0 : 1;\n        CompositeTreeNode.addChild(root, newNode);\n        return newNode;\n    }\n\n    getCustomLabelFor(id: string): string | undefined {\n        return this.topLevelCategories.get(id);\n    }\n\n    protected getOrCreatePreferencesGroup(id: string, group: string, root: CompositeTreeNode, groups: Map<string, Preference.CompositeTreeNode>): Preference.CompositeTreeNode {\n        const existingGroup = groups.get(id);\n        if (existingGroup) { return existingGroup; }\n        const newNode = this.createPreferencesGroup(id, group, root);\n        groups.set(id, newNode);\n        return newNode;\n    };\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { LabelProviderContribution, TreeNode } from '@theia/core/lib/browser';\nimport { Preference } from './preference-types';\nimport { PreferenceTreeGenerator } from './preference-tree-generator';\n@injectable()\nexport class PreferenceTreeLabelProvider implements LabelProviderContribution {\n    @inject(PreferenceTreeGenerator) protected readonly treeGenerator: PreferenceTreeGenerator;\n\n    canHandle(element: object): number {\n        return TreeNode.is(element) && Preference.TreeNode.is(element) ? 150 : 0;\n    }\n\n    getName(node: Preference.TreeNode): string {\n        const { id } = Preference.TreeNode.getGroupAndIdFromNodeId(node.id);\n        return this.formatString(this.treeGenerator.getCustomLabelFor(id) ?? id.split('.').pop()!);\n    }\n\n    getPrefix(node: Preference.TreeNode, fullPath = false): string | undefined {\n        const { depth } = node;\n        const { id, group } = Preference.TreeNode.getGroupAndIdFromNodeId(node.id);\n        const segments = id.split('.');\n        const segmentsHandled = group === segments[0] ? depth : depth - 1;\n        segments.pop(); // Ignore the leaf name.\n        const prefixSegments = fullPath ? segments : segments.slice(segmentsHandled);\n        if (prefixSegments.length) {\n            let output = prefixSegments.length > 1 ? `${this.formatString(prefixSegments[0])} › ` : `${this.formatString(prefixSegments[0])}: `;\n            for (const segment of prefixSegments.slice(1)) {\n                output += `${this.formatString(segment)}: `;\n            }\n            return output;\n        }\n    }\n\n    protected formatString(string: string): string {\n        let formatedString = string[0].toLocaleUpperCase();\n        for (let i = 1; i < string.length; i++) {\n            if (this.isUpperCase(string[i]) && !/\\s/.test(string[i - 1]) && !this.isUpperCase(string[i - 1])) {\n                formatedString += ' ';\n            }\n            formatedString += string[i];\n        }\n        return formatedString.trim();\n    }\n\n    protected isUpperCase(char: string): boolean {\n        return char === char.toLocaleUpperCase() && char.toLocaleLowerCase() !== char.toLocaleUpperCase();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {\n    PreferenceDataProperty,\n    PreferenceScope,\n    TreeNode as BaseTreeNode,\n    CompositeTreeNode as BaseCompositeTreeNode,\n    PreferenceInspection,\n} from '@theia/core/lib/browser';\nimport { Command, MenuPath } from '@theia/core';\nimport { JSONValue } from '@theia/core/shared/@phosphor/coreutils';\n\nexport namespace Preference {\n\n    export interface EditorCommandArgs {\n        id: string;\n        value: string | undefined;\n    }\n\n    export namespace EditorCommandArgs {\n        export function is(prefObject: EditorCommandArgs): prefObject is EditorCommandArgs {\n            return !!prefObject && 'id' in prefObject && 'value' in prefObject;\n        }\n    }\n\n    export const Node = Symbol('Preference.Node');\n    export type Node = TreeNode;\n\n    export type TreeNode = CompositeTreeNode | LeafNode;\n\n    export namespace TreeNode {\n        export const is = (node: BaseTreeNode | TreeNode): node is TreeNode => 'depth' in node;\n        export const isTopLevel = (node: BaseTreeNode): boolean => {\n            const { group, id } = getGroupAndIdFromNodeId(node.id);\n            return group === id;\n        };\n        export const getGroupAndIdFromNodeId = (nodeId: string): { group: string; id: string } => {\n            const separator = nodeId.indexOf('@');\n            const group = nodeId.substring(0, separator);\n            const id = nodeId.substring(separator + 1, nodeId.length);\n            return { group, id };\n        };\n    }\n\n    export interface CompositeTreeNode extends BaseCompositeTreeNode {\n        depth: number;\n    }\n\n    export interface LeafNode extends BaseTreeNode {\n        depth: number;\n        preference: { data: PreferenceDataProperty };\n    }\n\n    export namespace LeafNode {\n        export const is = (node: BaseTreeNode | LeafNode): node is LeafNode => 'preference' in node && !!node.preference.data;\n    }\n\n    export const getValueInScope = <T extends JSONValue>(preferenceInfo: PreferenceInspection<T> | undefined, scope: number): T | undefined => {\n        if (!preferenceInfo) {\n            return undefined;\n        }\n        switch (scope) {\n            case PreferenceScope.User:\n                return preferenceInfo.globalValue;\n            case PreferenceScope.Workspace:\n                return preferenceInfo.workspaceValue;\n            case PreferenceScope.Folder:\n                return preferenceInfo.workspaceFolderValue;\n            default:\n                return undefined;\n        }\n    };\n\n    export interface SelectedScopeDetails {\n        scope: number;\n        uri: string | undefined;\n        activeScopeIsFolder: boolean;\n    };\n\n    export const DEFAULT_SCOPE: SelectedScopeDetails = {\n        scope: PreferenceScope.User,\n        uri: undefined,\n        activeScopeIsFolder: false\n    };\n\n    export interface ContextMenuCallbacks {\n        resetCallback(): void;\n        copyIDCallback(): void;\n        copyJSONCallback(): void;\n    }\n}\n\nexport namespace PreferencesCommands {\n    export const OPEN_PREFERENCES_JSON_TOOLBAR: Command = {\n        id: 'preferences:openJson.toolbar',\n        iconClass: 'codicon codicon-json'\n    };\n    export const COPY_JSON_NAME: Command = {\n        id: 'preferences:copyJson.name',\n        label: 'Copy Setting ID'\n    };\n    export const RESET_PREFERENCE: Command = {\n        id: 'preferences:reset',\n        label: 'Reset Setting'\n    };\n\n    export const COPY_JSON_VALUE: Command = {\n        id: 'preferences:copyJson.value',\n        label: 'Copy Setting as JSON',\n    };\n}\n\nexport namespace PreferenceMenus {\n    export const PREFERENCE_EDITOR_CONTEXT_MENU: MenuPath = ['preferences:editor.contextMenu'];\n    export const PREFERENCE_EDITOR_COPY_ACTIONS: MenuPath = [...PREFERENCE_EDITOR_CONTEXT_MENU, 'preferences:editor.contextMenu.copy'];\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PreferenceLeafNodeRenderer } from './preference-node-renderer';\n\n@injectable()\nexport class PreferenceArrayInputRenderer extends PreferenceLeafNodeRenderer<string[], HTMLInputElement> {\n    existingValues = new Map<string, { node: HTMLElement, index: number }>();\n    wrapper: HTMLElement;\n    inputWrapper: HTMLElement;\n\n    protected createInteractable(parent: HTMLElement): void {\n        const wrapper = document.createElement('ul');\n        wrapper.classList.add('preference-array');\n        this.wrapper = wrapper;\n        const currentValue = this.getValue();\n        if (Array.isArray(currentValue)) {\n            for (const [index, value] of currentValue.entries()) {\n                const node = this.createExistingValue(value);\n                wrapper.appendChild(node);\n                this.existingValues.set(value, { node, index });\n            }\n        }\n        const inputWrapper = this.createInput();\n        wrapper.appendChild(inputWrapper);\n        parent.appendChild(wrapper);\n    }\n\n    protected getFallbackValue(): string[] {\n        return [];\n    }\n\n    protected createExistingValue(value: string): HTMLElement {\n        const existingValue = document.createElement('li');\n        existingValue.classList.add('preference-array-element');\n        const valueWrapper = document.createElement('span');\n        valueWrapper.classList.add('preference-array-element-val');\n        valueWrapper.textContent = value;\n        existingValue.appendChild(valueWrapper);\n        const iconWrapper = document.createElement('span');\n        iconWrapper.classList.add('preference-array-element-btn', 'remove-btn');\n        const handler = this.removeItem.bind(this, value);\n        iconWrapper.onclick = handler;\n        iconWrapper.onkeydown = handler;\n        iconWrapper.setAttribute('role', 'button');\n        iconWrapper.tabIndex = 0;\n        existingValue.appendChild(iconWrapper);\n        const icon = document.createElement('i');\n        icon.classList.add('preference-array-clear-item');\n        iconWrapper.appendChild(icon);\n        return existingValue;\n    }\n\n    protected createInput(): HTMLElement {\n        const inputWrapper = document.createElement('li');\n        this.inputWrapper = inputWrapper;\n        const input = document.createElement('input');\n        inputWrapper.appendChild(input);\n        this.interactable = input;\n        input.classList.add('preference-array-input', 'theia-input');\n        input.type = 'text';\n        input.placeholder = 'Add Value...';\n        input.onkeydown = this.handleEnter.bind(this);\n        input.setAttribute('aria-label', 'Preference String Input');\n        const iconWrapper = document.createElement('span');\n        inputWrapper.appendChild(iconWrapper);\n        iconWrapper.classList.add('preference-array-element-btn', 'add-btn');\n        iconWrapper.setAttribute('role', 'button');\n        const handler = this.addItem.bind(this);\n        iconWrapper.onclick = handler;\n        iconWrapper.onkeydown = handler;\n        iconWrapper.tabIndex = 0;\n        iconWrapper.setAttribute('aria-label', 'Submit Preference Input');\n        const icon = document.createElement('i');\n        icon.classList.add('fa', 'fa-plus');\n        iconWrapper.appendChild(icon);\n        return inputWrapper;\n    }\n\n    protected doHandleValueChange(): void {\n        this.updateInspection();\n        const values = this.getValue();\n        const newValues = new Set(...values);\n        for (const [value, row] of this.existingValues.entries()) {\n            if (!newValues.has(value)) {\n                row.node.remove();\n                this.existingValues.delete(value);\n            }\n        }\n        for (const [index, value] of values.entries()) {\n            let row = this.existingValues.get(value);\n            if (row) {\n                row.index = index;\n            } else {\n                row = { node: this.createExistingValue(value), index };\n                this.existingValues.set(value, row);\n            }\n\n            if (this.wrapper.children[index] !== row.node) {\n                this.wrapper.children[index].insertAdjacentElement('beforebegin', row.node);\n            }\n        }\n        this.updateModificationStatus();\n    }\n\n    protected removeItem(value: string): void {\n        const row = this.existingValues.get(value);\n        if (row) {\n            row.node.remove();\n            this.existingValues.delete(value);\n            this.setPreferenceImmediately(this.getOrderedValues());\n        }\n    }\n\n    protected handleEnter(e: KeyboardEvent): void {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.addItem();\n        }\n    }\n\n    protected addItem(): void {\n        const newItem = this.interactable.value;\n        if (newItem && !this.existingValues.has(newItem)) {\n            const node = this.createExistingValue(newItem);\n            this.inputWrapper.insertAdjacentElement('beforebegin', node);\n            this.existingValues.set(newItem, { node, index: this.existingValues.size });\n            this.setPreferenceImmediately(this.getOrderedValues());\n        }\n        this.interactable.value = '';\n    }\n\n    protected getOrderedValues(): string[] {\n        return Array.from(this.existingValues.entries())\n            .sort(([, a], [, b]) => a.index - b.index)\n            .map(([value]) => value);\n    }\n\n    dispose(): void {\n        this.existingValues.clear();\n        super.dispose();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PreferenceLeafNodeRenderer } from './preference-node-renderer';\n\n@injectable()\nexport class PreferenceBooleanInputRenderer extends PreferenceLeafNodeRenderer<boolean, HTMLInputElement> {\n    protected createInteractable(parent: HTMLElement): void {\n        const interactable = document.createElement('input');\n        this.interactable = interactable;\n        interactable.type = 'checkbox';\n        interactable.classList.add('theia-input');\n        interactable.defaultChecked = this.getValue();\n        interactable.onchange = this.handleUserInteraction.bind(this);\n        parent.appendChild(interactable);\n    }\n\n    protected getFallbackValue(): false {\n        return false;\n    }\n\n    protected handleUserInteraction(): Promise<void> {\n        return this.setPreferenceImmediately(this.interactable.checked);\n    }\n\n    protected doHandleValueChange(): void {\n        const currentValue = this.interactable.checked;\n        this.updateInspection();\n        const newValue = this.getValue();\n        this.updateModificationStatus(newValue);\n        if (newValue !== currentValue && document.activeElement !== this.interactable) {\n            this.interactable.checked = newValue;\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { PreferenceLeafNodeRenderer } from './preference-node-renderer';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { CommandService } from '@theia/core/lib/common';\nimport { PreferencesCommands } from '../../util/preference-types';\nimport { JSONValue } from '@theia/core/shared/@phosphor/coreutils';\n\n@injectable()\nexport class PreferenceJSONLinkRenderer extends PreferenceLeafNodeRenderer<JSONValue, HTMLAnchorElement> {\n    @inject(CommandService) protected readonly commandService: CommandService;\n\n    protected createInteractable(parent: HTMLElement): void {\n        const message = 'Edit in settings.json';\n        const interactable = document.createElement('a');\n        this.interactable = interactable;\n        interactable.classList.add('theia-json-input');\n        interactable.setAttribute('role', 'button');\n        interactable.title = message;\n        interactable.textContent = message;\n        interactable.onclick = this.handleUserInteraction.bind(this);\n        interactable.onkeydown = this.handleUserInteraction.bind(this);\n        parent.appendChild(interactable);\n    }\n\n    protected getFallbackValue(): JSONValue {\n        const node = this.preferenceNode;\n        const type = Array.isArray(node.preference.data.type) ? node.preference.data.type[0] : node.preference.data.type;\n        switch (type) {\n            case 'object':\n                return {};\n            case 'array':\n                return [];\n            case 'null':\n                return null; // eslint-disable-line no-null/no-null\n            default: // Should all be handled by other input types.\n                return '';\n        }\n    }\n\n    protected doHandleValueChange(): void {\n        this.updateInspection();\n        this.updateModificationStatus();\n    }\n\n    protected handleUserInteraction(): void {\n        this.commandService.executeCommand(PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id, this.id);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { PreferenceService, ContextMenuRenderer, PreferenceInspection, PreferenceScope, PreferenceProvider } from '@theia/core/lib/browser';\nimport { Preference, PreferenceMenus } from '../../util/preference-types';\nimport { PreferenceTreeLabelProvider } from '../../util/preference-tree-label-provider';\nimport { PreferencesScopeTabBar } from '../preference-scope-tabbar-widget';\nimport { Disposable } from '@theia/core/lib/common';\nimport { JSONValue } from '@theia/core/shared/@phosphor/coreutils';\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { PreferenceTreeModel } from '../../preference-tree-model';\nimport { PreferencesSearchbarWidget } from '../preference-searchbar-widget';\n\nexport const PreferenceNodeRendererFactory = Symbol('PreferenceNodeRendererFactory');\nexport type PreferenceNodeRendererFactory = (node: Preference.TreeNode) => PreferenceNodeRenderer;\nexport const HEADER_CLASS = 'settings-section-category-title';\nexport const SUBHEADER_CLASS = 'settings-section-subcategory-title';\n\nexport interface GeneralPreferenceNodeRenderer extends Disposable {\n    node: HTMLElement;\n    id: string;\n    group: string;\n    nodeId: string;\n    visible: boolean;\n    insertBefore(nextSibling: HTMLElement): void;\n    insertAfter(previousSibling: HTMLElement): void;\n    appendTo(parent: HTMLElement): void;\n    prependTo(parent: HTMLElement): void;\n    handleValueChange?(): void;\n    handleSearchChange?(isFiltered?: boolean): void;\n    handleScopeChange?(isFiltered?: boolean): void;\n    hide(): void;\n    show(): void;\n}\n\n@injectable()\nexport abstract class PreferenceNodeRenderer implements Disposable, GeneralPreferenceNodeRenderer {\n    @inject(Preference.Node) protected readonly preferenceNode: Preference.Node;\n    @inject(PreferenceTreeLabelProvider) protected readonly labelProvider: PreferenceTreeLabelProvider;\n\n    protected attached = false;\n\n    _id: string;\n    _group: string;\n    _subgroup: string;\n    protected domNode: HTMLElement;\n\n    get node(): HTMLElement {\n        return this.domNode;\n    }\n\n    get nodeId(): string {\n        return this.preferenceNode.id;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    get group(): string {\n        return this._group;\n    }\n\n    get visible(): boolean {\n        return !this.node.classList.contains('hidden');\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.setId();\n        this.domNode = this.createDomNode();\n    }\n\n    protected setId(): void {\n        const { id, group } = Preference.TreeNode.getGroupAndIdFromNodeId(this.preferenceNode.id);\n        const segments = id.split('.');\n        this._id = id;\n        this._group = group;\n        this._subgroup = (group === segments[0] ? segments[1] : segments[0]) ?? '';\n    }\n\n    protected abstract createDomNode(): HTMLElement;\n\n    insertBefore(nextSibling: HTMLElement): void {\n        nextSibling.insertAdjacentElement('beforebegin', this.domNode);\n        this.attached = true;\n    }\n\n    insertAfter(previousSibling: HTMLElement): void {\n        previousSibling.insertAdjacentElement('afterend', this.domNode);\n    }\n\n    appendTo(parent: HTMLElement): void {\n        parent.appendChild(this.domNode);\n    }\n\n    prependTo(parent: HTMLElement): void {\n        parent.prepend(this.domNode);\n    }\n\n    hide(): void {\n        this.domNode.classList.add('hidden');\n    }\n\n    show(): void {\n        this.domNode.classList.remove('hidden');\n    }\n\n    dispose(): void {\n        this.domNode.remove();\n    }\n}\n\nexport class PreferenceHeaderRenderer extends PreferenceNodeRenderer {\n    protected createDomNode(): HTMLElement {\n        const wrapper = document.createElement('ul');\n        wrapper.className = 'settings-section';\n        wrapper.id = `${this.preferenceNode.id}-editor`;\n        const isCategory = Preference.TreeNode.isTopLevel(this.preferenceNode);\n        const hierarchyClassName = isCategory ? HEADER_CLASS : SUBHEADER_CLASS;\n        const name = this.labelProvider.getName(this.preferenceNode);\n        const label = document.createElement('li');\n        label.classList.add('settings-section-title', hierarchyClassName);\n        label.textContent = name;\n        wrapper.appendChild(label);\n        return wrapper;\n    }\n}\n\n@injectable()\nexport abstract class PreferenceLeafNodeRenderer<ValueType extends JSONValue, InteractableType extends HTMLElement>\n    extends PreferenceNodeRenderer\n    implements Required<GeneralPreferenceNodeRenderer> {\n    @inject(Preference.Node) protected readonly preferenceNode: Preference.LeafNode;\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n    @inject(ContextMenuRenderer) protected readonly menuRenderer: ContextMenuRenderer;\n    @inject(PreferencesScopeTabBar) protected readonly scopeTracker: PreferencesScopeTabBar;\n    @inject(PreferenceTreeModel) protected readonly model: PreferenceTreeModel;\n    @inject(PreferencesSearchbarWidget) protected readonly searchbar: PreferencesSearchbarWidget;\n\n    protected headlineWrapper: HTMLDivElement;\n    protected gutter: HTMLDivElement;\n    protected interactable: InteractableType;\n    protected inspection: PreferenceInspection<ValueType> | undefined;\n    protected isModifiedFromDefault = false;\n\n    @postConstruct()\n    protected init(): void {\n        this.setId();\n        this.updateInspection();\n        this.domNode = this.createDomNode();\n        this.updateModificationStatus();\n    }\n\n    protected updateInspection(): void {\n        this.inspection = this.preferenceService.inspect<ValueType>(this.id, this.scopeTracker.currentScope.uri);\n    }\n\n    protected createDomNode(): HTMLLIElement {\n        const wrapper = document.createElement('li');\n        wrapper.classList.add('single-pref');\n        wrapper.id = `${this.id}-editor`;\n        wrapper.setAttribute('data-pref-id', this.id);\n        wrapper.setAttribute('data-node-id', this.preferenceNode.id);\n\n        const headlineWrapper = document.createElement('div');\n        headlineWrapper.classList.add('pref-name');\n        headlineWrapper.title = this.id;\n        this.headlineWrapper = headlineWrapper;\n        wrapper.appendChild(headlineWrapper);\n\n        this.updateHeadline();\n\n        const gutter = document.createElement('div');\n        gutter.classList.add('pref-context-gutter');\n        this.gutter = gutter;\n        wrapper.appendChild(gutter);\n\n        const cog = document.createElement('i');\n        cog.className = 'codicon codicon-settings-gear settings-context-menu-btn';\n        cog.setAttribute('aria-label', 'Open Context Menu');\n        cog.setAttribute('role', 'button');\n        cog.onclick = this.handleCogAction.bind(this);\n        cog.onkeydown = this.handleCogAction.bind(this);\n        cog.title = 'More actions...';\n        gutter.appendChild(cog);\n\n        const activeType = Array.isArray(this.preferenceNode.preference.data.type) ? this.preferenceNode.preference.data.type[0] : this.preferenceNode.preference.data.type;\n        const contentWrapper = document.createElement('div');\n        contentWrapper.classList.add('pref-content-container', activeType ?? 'open-json');\n        wrapper.appendChild(contentWrapper);\n\n        const { description, markdownDescription } = this.preferenceNode.preference.data;\n        const descriptionToUse = markdownDescription || description;\n        if (descriptionToUse) {\n            const descriptionWrapper = document.createElement('div');\n            descriptionWrapper.classList.add('pref-description');\n            descriptionWrapper.textContent = descriptionToUse;\n            contentWrapper.appendChild(descriptionWrapper);\n        }\n\n        const interactableWrapper = document.createElement('div');\n        interactableWrapper.classList.add('pref-input');\n        contentWrapper.appendChild(interactableWrapper);\n        this.createInteractable(interactableWrapper);\n\n        return wrapper;\n    }\n\n    protected handleCogAction({ currentTarget }: KeyboardEvent | MouseEvent): void {\n        const value = Preference.getValueInScope(this.inspection, this.scopeTracker.currentScope.scope) ?? this.inspection?.defaultValue;\n        const target = currentTarget as HTMLElement | undefined;\n        if (target && value !== undefined) {\n            this.showCog();\n            const domRect = target.getBoundingClientRect();\n            this.menuRenderer.render({\n                menuPath: PreferenceMenus.PREFERENCE_EDITOR_CONTEXT_MENU,\n                anchor: { x: domRect.left, y: domRect.bottom },\n                args: [{ id: this.id, value }],\n                onHide: () => this.hideCog()\n            });\n        }\n    }\n\n    protected addModifiedMarking(): void {\n        this.gutter.classList.add('theia-mod-item-modified');\n    }\n\n    protected removeModifiedMarking(): void {\n        this.gutter.classList.remove('theia-mod-item-modified');\n    }\n\n    protected showCog(): void {\n        this.gutter.classList.add('show-cog');\n    }\n\n    protected hideCog(): void {\n        this.gutter.classList.remove('show-cog');\n    }\n\n    protected updateModificationStatus(knownCurrentValue?: JSONValue): void {\n        const wasModified = this.isModifiedFromDefault;\n        const { inspection } = this;\n        const valueInCurrentScope = knownCurrentValue ?? Preference.getValueInScope(inspection, this.scopeTracker.currentScope.scope);\n        this.isModifiedFromDefault = valueInCurrentScope !== undefined && !PreferenceProvider.deepEqual(valueInCurrentScope, inspection?.defaultValue);\n        if (wasModified !== this.isModifiedFromDefault) {\n            this.gutter.classList.toggle('theia-mod-item-modified', this.isModifiedFromDefault);\n        }\n    }\n\n    protected updateHeadline(filtered = this.model.isFiltered): void {\n        const { headlineWrapper } = this;\n        if (this.headlineWrapper.childElementCount === 0) {\n            const name = this.labelProvider.getName(this.preferenceNode);\n            const nameWrapper = document.createElement('span');\n            nameWrapper.classList.add('preference-leaf-headline-name');\n            nameWrapper.textContent = name;\n            headlineWrapper.appendChild(nameWrapper);\n        }\n        const prefix = this.labelProvider.getPrefix(this.preferenceNode, filtered);\n        const currentFirstChild = headlineWrapper.children[0];\n        const currentFirstChildIsPrefix = currentFirstChild.classList.contains('preference-leaf-headline-prefix');\n        if (prefix) {\n            let prefixWrapper;\n            if (currentFirstChildIsPrefix) {\n                prefixWrapper = currentFirstChild;\n            } else {\n                prefixWrapper = document.createElement('span');\n                prefixWrapper.classList.add('preference-leaf-headline-prefix');\n                headlineWrapper.insertBefore(prefixWrapper, currentFirstChild);\n            }\n            prefixWrapper.textContent = prefix;\n        } else if (currentFirstChildIsPrefix) {\n            headlineWrapper.removeChild(currentFirstChild);\n        }\n\n        const currentLastChild = headlineWrapper.lastChild as HTMLElement;\n        if (currentLastChild.classList.contains('preference-leaf-headline-suffix')) {\n            this.compareOtherModifiedScopes(headlineWrapper, currentLastChild);\n        } else {\n            this.createOtherModifiedScopes(headlineWrapper);\n        }\n    }\n\n    protected compareOtherModifiedScopes(headlineWrapper: HTMLDivElement, currentSuffix: HTMLElement): void {\n        const modifiedScopes = this.getModifiedScopesAsStrings();\n        if (modifiedScopes.length === 0) {\n            headlineWrapper.removeChild(currentSuffix);\n        } else {\n\n            const modifiedMessagePrefix = currentSuffix.children[0] as HTMLElement;\n            const newMessagePrefix = this.getModifiedMessagePrefix();\n            if (modifiedMessagePrefix.textContent !== newMessagePrefix) {\n                modifiedMessagePrefix.textContent = newMessagePrefix;\n            }\n\n            const [firstModifiedScope, secondModifiedScope] = modifiedScopes;\n\n            const firstScopeMessage = currentSuffix.children[1] as HTMLElement;\n            const secondScopeMessage = currentSuffix.children[2] as HTMLElement;\n            firstScopeMessage.children[0].textContent = PreferenceScope[firstModifiedScope];\n            this.addEventHandlerToModifiedScope(firstModifiedScope, firstScopeMessage.children[0] as HTMLElement);\n            if (modifiedScopes.length === 1 && secondScopeMessage) {\n                currentSuffix.removeChild(secondScopeMessage);\n            } else if (modifiedScopes.length === 2 && !secondScopeMessage) {\n                const newSecondMessage = this.createModifiedScopeMessage(secondModifiedScope);\n                currentSuffix.appendChild(newSecondMessage);\n            }\n            // If both scopes are modified and both messages are present, do nothing.\n        }\n    }\n\n    protected createOtherModifiedScopes(headlineWrapper: HTMLDivElement): void {\n        const modifiedScopes = this.getModifiedScopesAsStrings();\n        if (modifiedScopes.length !== 0) {\n            const wrapper = document.createElement('i');\n            wrapper.classList.add('preference-leaf-headline-suffix');\n            headlineWrapper.appendChild(wrapper);\n\n            const messagePrefix = this.getModifiedMessagePrefix();\n            const messageWrapper = document.createElement('span');\n            messageWrapper.classList.add('preference-other-modified-scope-alert');\n            messageWrapper.textContent = messagePrefix;\n            wrapper.appendChild(messageWrapper);\n            modifiedScopes.forEach((scopeName, i) => {\n                const scopeWrapper = this.createModifiedScopeMessage(scopeName);\n                wrapper.appendChild(scopeWrapper);\n            });\n        }\n    }\n\n    protected createModifiedScopeMessage(scope: PreferenceScope): HTMLSpanElement {\n        const scopeWrapper = document.createElement('span');\n        scopeWrapper.classList.add('preference-modified-scope-wrapper');\n        const scopeInteractable = document.createElement('span');\n        scopeInteractable.classList.add('preference-scope-underlined');\n        const scopeName = PreferenceScope[scope];\n        this.addEventHandlerToModifiedScope(scope, scopeInteractable);\n        scopeInteractable.textContent = scopeName;\n        scopeWrapper.appendChild(scopeInteractable);\n        return scopeWrapper;\n    }\n\n    protected getModifiedMessagePrefix(): string {\n        return this.isModifiedFromDefault ? 'Also modified in: ' : 'Modified in: ';\n    }\n\n    protected addEventHandlerToModifiedScope(scope: PreferenceScope, scopeWrapper: HTMLElement): void {\n        if (scope === PreferenceScope.User || scope === PreferenceScope.Workspace) {\n            const eventHandler = () => {\n                this.scopeTracker.setScope(scope);\n                this.searchbar.updateSearchTerm(this.id);\n            };\n            scopeWrapper.onclick = eventHandler;\n            scopeWrapper.onkeydown = eventHandler;\n            scopeWrapper.tabIndex = 0;\n        } else {\n            scopeWrapper.onclick = null; // eslint-disable-line no-null/no-null\n            scopeWrapper.onkeydown = null; // eslint-disable-line no-null/no-null\n            scopeWrapper.tabIndex = -1;\n        }\n    }\n\n    protected getModifiedScopesAsStrings(): PreferenceScope[] {\n        const currentScopeInView = this.scopeTracker.currentScope.scope;\n        const { inspection } = this;\n        const modifiedScopes = [];\n        if (inspection) {\n            for (const otherScope of [PreferenceScope.User, PreferenceScope.Workspace]) {\n                if (otherScope !== currentScopeInView) {\n                    const valueInOtherScope = Preference.getValueInScope(inspection, otherScope);\n                    if (valueInOtherScope !== undefined && !PreferenceProvider.deepEqual(valueInOtherScope, inspection.defaultValue)) {\n                        modifiedScopes.push(otherScope);\n                    }\n                }\n            }\n        }\n        return modifiedScopes;\n    }\n\n    protected getValue(): ValueType {\n        let currentValue = Preference.getValueInScope(this.inspection, this.scopeTracker.currentScope.scope);\n        if (currentValue === undefined) {\n            currentValue = this.inspection?.defaultValue;\n        }\n        return currentValue ?? this.getFallbackValue();\n    }\n\n    protected setPreferenceWithDebounce = debounce(this.setPreferenceImmediately.bind(this), 500, { leading: false, trailing: true });\n\n    protected setPreferenceImmediately(value: ValueType | undefined): Promise<void> {\n        return this.preferenceService.set(this.id, value, this.scopeTracker.currentScope.scope, this.scopeTracker.currentScope.uri);\n    }\n\n    handleSearchChange(isFiltered = this.model.isFiltered): void {\n        this.updateHeadline(isFiltered);\n    }\n\n    handleScopeChange(isFiltered = this.model.isFiltered): void {\n        this.handleValueChange();\n        this.updateHeadline(isFiltered);\n    }\n\n    handleValueChange(): void {\n        this.doHandleValueChange();\n        this.updateHeadline();\n    }\n\n    protected abstract createInteractable(container: HTMLElement): void;\n    protected abstract getFallbackValue(): ValueType;\n    protected abstract doHandleValueChange(): void;\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PreferenceLeafNodeRenderer } from './preference-node-renderer';\n\ninterface PreferenceNumberInputValidation {\n    /**\n     * the numeric value of the input. `NaN` if there is an error.\n     */\n    value: number;\n    /**\n     * the error message to display.\n     */\n    message: string;\n}\n\n@injectable()\nexport class PreferenceNumberInputRenderer extends PreferenceLeafNodeRenderer<number, HTMLInputElement> {\n\n    protected _errorMessage: HTMLElement | undefined;\n    protected interactableWrapper: HTMLElement;\n\n    get errorMessage(): HTMLElement {\n        if (!this._errorMessage) {\n            const errorMessage = document.createElement('div');\n            errorMessage.classList.add('pref-error-notification');\n            this._errorMessage = errorMessage;\n        }\n        return this._errorMessage;\n    }\n\n    protected createInteractable(parent: HTMLElement): void {\n        const interactableWrapper = document.createElement('div');\n        this.interactableWrapper = interactableWrapper;\n        interactableWrapper.classList.add('pref-input-container');\n        const interactable = document.createElement('input');\n        this.interactable = interactable;\n        interactable.type = 'number';\n        interactable.classList.add('theia-input');\n        interactable.defaultValue = this.getValue().toString();\n        interactable.oninput = this.handleUserInteraction.bind(this);\n        interactable.onblur = this.handleBlur.bind(this);\n        interactableWrapper.appendChild(interactable);\n        parent.appendChild(interactableWrapper);\n    }\n\n    protected getFallbackValue(): number {\n        return 0;\n    }\n\n    protected handleUserInteraction(): void {\n        const { value, message } = this.getInputValidation(this.interactable.value);\n        if (isNaN(value)) {\n            this.showErrorMessage(message);\n        } else {\n            this.hideErrorMessage();\n            this.setPreferenceWithDebounce(value);\n        }\n    }\n\n    protected async handleBlur(): Promise<void> {\n        this.hideErrorMessage();\n        await this.setPreferenceWithDebounce.flush();\n        this.handleValueChange();\n    }\n\n    protected doHandleValueChange(): void {\n        const { value } = this.interactable;\n        const currentValue = value.length ? Number(value) : NaN;\n        this.updateInspection();\n        const newValue = this.getValue();\n        this.updateModificationStatus(newValue);\n        if (newValue !== currentValue) {\n            if (document.activeElement !== this.interactable) {\n                this.interactable.value = newValue.toString();\n            } else {\n                this.handleUserInteraction(); // give priority to the value of the input if it is focused.\n            }\n        }\n    }\n\n    protected getInputValidation(input: string): PreferenceNumberInputValidation {\n        const { preference: { data } } = this.preferenceNode;\n        const inputValue = Number(input);\n        const errorMessages: string[] = [];\n\n        if (input === '' || isNaN(inputValue)) {\n            return { value: NaN, message: 'Value must be a number.' };\n        }\n        if (data.minimum && inputValue < data.minimum) {\n            errorMessages.push(`Value must be greater than or equal to ${data.minimum}.`);\n        };\n        if (data.maximum && inputValue > data.maximum) {\n            errorMessages.push(`Value must be less than or equal to ${data.maximum}.`);\n        };\n        if (data.type === 'integer' && !Number.isInteger(inputValue)) {\n            errorMessages.push('Value must be an integer.');\n        }\n\n        return {\n            value: errorMessages.length ? NaN : inputValue,\n            message: errorMessages.join(' ')\n        };\n    }\n\n    protected showErrorMessage(message: string): void {\n        this.errorMessage.textContent = message;\n        this.interactableWrapper.appendChild(this.errorMessage);\n    }\n\n    protected hideErrorMessage(): void {\n        this.errorMessage.remove();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { PreferenceLeafNodeRenderer } from './preference-node-renderer';\nimport { injectable } from '@theia/core/shared/inversify';\n\n@injectable()\nexport class PreferenceSelectInputRenderer extends PreferenceLeafNodeRenderer<string, HTMLSelectElement> {\n    protected createInteractable(parent: HTMLElement): void {\n        const options = this.preferenceNode.preference.data.enum!;\n        const interactable = document.createElement('select');\n        this.interactable = interactable;\n        interactable.classList.add('theia-select');\n        interactable.onchange = this.handleUserInteraction.bind(this);\n        for (const value of options) {\n            const option = document.createElement('option');\n            option.value = value;\n            option.textContent = value;\n            interactable.appendChild(option);\n        }\n        interactable.value = this.getValue();\n        parent.appendChild(interactable);\n    }\n\n    protected getFallbackValue(): string {\n        return this.preferenceNode.preference.data.enum![0];\n    }\n\n    protected doHandleValueChange(): void {\n        const currentValue = this.interactable.value || undefined;\n        this.updateInspection();\n        const newValue = this.getValue();\n        this.updateModificationStatus(newValue);\n        if (newValue !== currentValue && document.activeElement !== this.interactable) {\n            this.interactable.value = newValue;\n        }\n    }\n\n    protected handleUserInteraction(): void {\n        this.setPreferenceImmediately(this.interactable.value || undefined);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2021 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { PreferenceLeafNodeRenderer } from './preference-node-renderer';\n\n@injectable()\nexport class PreferenceStringInputRenderer extends PreferenceLeafNodeRenderer<string, HTMLInputElement> {\n    protected createInteractable(parent: HTMLElement): void {\n        const interactable = document.createElement('input');\n        this.interactable = interactable;\n        interactable.type = 'text';\n        interactable.classList.add('theia-input');\n        interactable.defaultValue = this.getValue();\n        interactable.oninput = this.handleUserInteraction.bind(this);\n        interactable.onblur = this.handleBlur.bind(this);\n        parent.appendChild(interactable);\n    }\n\n    protected getFallbackValue(): string {\n        return '';\n    }\n\n    protected doHandleValueChange(): void {\n        const currentValue = this.interactable.value;\n        this.updateInspection();\n        const newValue = this.getValue();\n        this.updateModificationStatus(newValue);\n        if (newValue !== currentValue) {\n            if (document.activeElement !== this.interactable) {\n                this.interactable.value = newValue;\n            } else {\n                this.handleUserInteraction(); // give priority to the value of the input if it is focused.\n            }\n        }\n    }\n\n    protected handleUserInteraction(): void {\n        this.setPreferenceWithDebounce(this.interactable.value);\n    }\n\n    protected async handleBlur(): Promise<void> {\n        await this.setPreferenceWithDebounce.flush();\n        this.handleValueChange();\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { postConstruct, injectable, inject } from '@theia/core/shared/inversify';\nimport throttle = require('@theia/core/shared/lodash.throttle');\nimport {\n    PreferenceService,\n    CompositeTreeNode,\n    SelectableTreeNode,\n    StatefulWidget,\n    TopDownTreeIterator,\n    PreferenceChanges,\n    ExpandableTreeNode,\n} from '@theia/core/lib/browser';\nimport { unreachable } from '@theia/core/lib/common';\nimport { BaseWidget, DEFAULT_SCROLL_OPTIONS, } from '@theia/core/lib/browser/widgets/widget';\nimport { PreferenceTreeModel, PreferenceFilterChangeEvent, PreferenceFilterChangeSource } from '../preference-tree-model';\nimport { PreferenceNodeRendererFactory, GeneralPreferenceNodeRenderer } from './components/preference-node-renderer';\nimport { Preference } from '../util/preference-types';\nimport { COMMONLY_USED_SECTION_PREFIX } from '../util/preference-tree-generator';\nimport { PreferencesScopeTabBar } from './preference-scope-tabbar-widget';\n\nexport interface PreferencesEditorState {\n    firstVisibleChildID: string,\n}\n\n@injectable()\nexport class PreferencesEditorWidget extends BaseWidget implements StatefulWidget {\n    static readonly ID = 'settings.editor';\n    static readonly LABEL = 'Settings Editor';\n\n    scrollOptions = DEFAULT_SCROLL_OPTIONS;\n\n    protected scrollContainer: HTMLDivElement;\n    /**\n     * Guards against scroll events and selection events looping into each other. Set before this widget initiates a selection.\n     */\n    protected currentModelSelectionId = '';\n    /**\n     * Permits the user to expand multiple nodes without each one being collapsed on a new selection.\n     */\n    protected lastUserSelection = '';\n    protected isAtScrollTop = true;\n    protected firstVisibleChildID = '';\n    protected renderers = new Map<string, GeneralPreferenceNodeRenderer>();\n    // The commonly used section will duplicate preference ID's, so we'll keep a separate list of them.\n    protected commonlyUsedRenderers = new Map<string, GeneralPreferenceNodeRenderer>();\n\n    @inject(PreferenceService) protected readonly preferenceService: PreferenceService;\n    @inject(PreferenceTreeModel) protected readonly model: PreferenceTreeModel;\n    @inject(PreferenceNodeRendererFactory) protected readonly rendererFactory: PreferenceNodeRendererFactory;\n    @inject(PreferencesScopeTabBar) protected readonly tabbar: PreferencesScopeTabBar;\n\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this.id = PreferencesEditorWidget.ID;\n        this.title.label = PreferencesEditorWidget.LABEL;\n        this.addClass('settings-main');\n        this.toDispose.pushAll([\n            this.preferenceService.onPreferencesChanged(e => this.handlePreferenceChanges(e)),\n            this.model.onFilterChanged(e => this.handleDisplayChange(e)),\n            this.model.onSelectionChanged(e => this.handleSelectionChange(e)),\n        ]);\n        this.createContainers();\n        await this.preferenceService.ready;\n        this.handleDisplayChange({ source: PreferenceFilterChangeSource.Schema });\n    }\n\n    protected createContainers(): void {\n        const innerWrapper = document.createElement('div');\n        innerWrapper.classList.add('settings-main-scroll-container');\n        this.scrollContainer = innerWrapper;\n        innerWrapper.addEventListener('scroll', this.onScroll, { passive: true });\n        this.node.appendChild(innerWrapper);\n        const noLeavesMessage = document.createElement('div');\n        noLeavesMessage.classList.add('settings-no-results-announcement');\n        noLeavesMessage.textContent = 'That search query has returned no results.';\n        this.node.appendChild(noLeavesMessage);\n    }\n\n    protected handleDisplayChange(e: PreferenceFilterChangeEvent): void {\n        const { isFiltered } = this.model;\n        const currentFirstVisible = this.firstVisibleChildID;\n        const leavesAreVisible = this.areLeavesVisible();\n        if (e.source === PreferenceFilterChangeSource.Search) {\n            this.handleSearchChange(isFiltered, leavesAreVisible);\n        } else if (e.source === PreferenceFilterChangeSource.Scope) {\n            this.handleScopeChange(isFiltered);\n        } else if (e.source === PreferenceFilterChangeSource.Schema) {\n            this.handleSchemaChange(isFiltered);\n        } else {\n            unreachable(e.source, 'Not all PreferenceFilterChangeSource enum variants handled.');\n        }\n        this.resetScroll(currentFirstVisible, e.source === PreferenceFilterChangeSource.Search && !isFiltered);\n    }\n\n    protected handleSchemaChange(isFiltered: boolean): void {\n        for (const [id, renderer, collection] of this.allRenderers()) {\n            if (!this.model.getNode(renderer.nodeId)) {\n                renderer.dispose();\n                collection.delete(id);\n            }\n        }\n        if (this.model.root) {\n            const nodeIterator = Array.from(this.scrollContainer.children)[Symbol.iterator]();\n            let nextNode: HTMLElement | undefined = nodeIterator.next().value;\n            for (const node of new TopDownTreeIterator(this.model.root)) {\n                if (Preference.TreeNode.is(node)) {\n                    const { collection, id } = this.analyzeIDAndGetRendererGroup(node.id);\n                    const renderer = collection.get(id) ?? this.rendererFactory(node);\n                    if (!renderer.node.parentElement) { // If it hasn't been attached yet, it hasn't been checked for the current search.\n                        this.hideIfFailsFilters(renderer, isFiltered);\n                        collection.set(id, renderer);\n                    }\n                    if (nextNode !== renderer.node) {\n                        if (nextNode) {\n                            renderer.insertBefore(nextNode);\n                        } else {\n                            renderer.appendTo(this.scrollContainer);\n                        }\n                    } else {\n                        nextNode = nodeIterator.next().value;\n                    }\n                }\n            }\n        }\n    }\n\n    protected handleScopeChange(isFiltered: boolean = this.model.isFiltered): void {\n        for (const [, renderer] of this.allRenderers()) {\n            const isHidden = this.hideIfFailsFilters(renderer, isFiltered);\n            if (isFiltered || !isHidden) {\n                renderer.handleScopeChange?.(isFiltered);\n            }\n        }\n    }\n\n    protected handleSearchChange(isFiltered: boolean, leavesAreVisible: boolean): void {\n        if (leavesAreVisible) {\n            for (const [, renderer] of this.allRenderers()) {\n                const isHidden = this.hideIfFailsFilters(renderer, isFiltered);\n                if (!isHidden) {\n                    renderer.handleSearchChange?.(isFiltered);\n                }\n            }\n        }\n    }\n\n    protected areLeavesVisible(): boolean {\n        const leavesAreVisible = this.model.totalVisibleLeaves > 0;\n        this.node.classList.toggle('no-results', !leavesAreVisible);\n        this.scrollContainer.classList.toggle('hidden', !leavesAreVisible);\n        return leavesAreVisible;\n    }\n\n    protected *allRenderers(): IterableIterator<[string, GeneralPreferenceNodeRenderer, Map<string, GeneralPreferenceNodeRenderer>]> {\n        for (const [id, renderer] of this.commonlyUsedRenderers.entries()) {\n            yield [id, renderer, this.commonlyUsedRenderers];\n        }\n        for (const [id, renderer] of this.renderers.entries()) {\n            yield [id, renderer, this.renderers];\n        }\n    }\n\n    protected handlePreferenceChanges(e: PreferenceChanges): void {\n        for (const id of Object.keys(e)) {\n            this.commonlyUsedRenderers.get(id)?.handleValueChange?.();\n            this.renderers.get(id)?.handleValueChange?.();\n        }\n    }\n\n    /**\n     * @returns true if the renderer is hidden, false otherwise.\n     */\n    protected hideIfFailsFilters(renderer: GeneralPreferenceNodeRenderer, isFiltered: boolean): boolean {\n        const row = this.model.currentRows.get(renderer.nodeId);\n        if (!row || (CompositeTreeNode.is(row.node) && (isFiltered || row.visibleChildren === 0))) {\n            renderer.hide();\n            return true;\n        } else {\n            renderer.show();\n            return false;\n        }\n    }\n\n    protected resetScroll(nodeIDToScrollTo?: string, filterWasCleared: boolean = false): void {\n        if (this.scrollBar) { // Absent on widget creation\n            this.doResetScroll(nodeIDToScrollTo, filterWasCleared);\n        } else {\n            const interval = setInterval(() => {\n                if (this.scrollBar) {\n                    clearInterval(interval);\n                    this.doResetScroll(nodeIDToScrollTo, filterWasCleared);\n                }\n            }, 500);\n        }\n    }\n\n    protected doResetScroll(nodeIDToScrollTo?: string, filterWasCleared: boolean = false): void {\n        requestAnimationFrame(() => {\n            this.scrollBar?.update();\n            if (!filterWasCleared && nodeIDToScrollTo) {\n                const { id, collection } = this.analyzeIDAndGetRendererGroup(nodeIDToScrollTo);\n                const renderer = collection.get(id);\n                if (renderer?.visible) {\n                    renderer.node.scrollIntoView();\n                    return;\n                }\n            }\n            this.scrollContainer.scrollTop = 0;\n        });\n    };\n\n    protected doOnScroll(): void {\n        const { scrollContainer } = this;\n        const firstVisibleChildID = this.findFirstVisibleChildID();\n        this.setFirstVisibleChildID(firstVisibleChildID);\n        if (this.isAtScrollTop && scrollContainer.scrollTop !== 0) {\n            this.isAtScrollTop = false;\n            this.tabbar.toggleShadow(true);\n        } else if (!this.isAtScrollTop && scrollContainer.scrollTop === 0) {\n            this.isAtScrollTop = true;\n            this.tabbar.toggleShadow(false);\n        }\n    };\n\n    onScroll = throttle(this.doOnScroll.bind(this), 50);\n\n    protected findFirstVisibleChildID(): string | undefined {\n        const { scrollTop } = this.scrollContainer;\n        for (const [, renderer] of this.allRenderers()) {\n            const { offsetTop, offsetHeight } = renderer.node;\n            if (Math.abs(offsetTop - scrollTop) <= offsetHeight / 2) {\n                return renderer.nodeId;\n            }\n        }\n    }\n\n    protected setFirstVisibleChildID(id?: string): void {\n        if (id && id !== this.firstVisibleChildID) {\n            this.firstVisibleChildID = id;\n            let currentNode = this.model.getNode(id);\n            let expansionAncestor;\n            let selectionAncestor;\n            while (currentNode && (!expansionAncestor || !selectionAncestor)) {\n                if (!selectionAncestor && SelectableTreeNode.is(currentNode)) {\n                    selectionAncestor = currentNode;\n                }\n                if (!expansionAncestor && ExpandableTreeNode.is(currentNode)) {\n                    expansionAncestor = currentNode;\n                }\n                currentNode = currentNode.parent;\n            }\n            if (selectionAncestor) {\n                this.currentModelSelectionId = selectionAncestor.id;\n                expansionAncestor = expansionAncestor ?? selectionAncestor;\n                this.model.selectIfNotSelected(selectionAncestor);\n                if (!this.model.isFiltered && id !== this.lastUserSelection) {\n                    this.lastUserSelection = '';\n                    this.model.collapseAllExcept(expansionAncestor);\n                }\n            }\n        }\n    }\n\n    protected handleSelectionChange(selectionEvent: readonly Readonly<SelectableTreeNode>[]): void {\n        const node = selectionEvent[0];\n        if (node && node.id !== this.currentModelSelectionId) {\n            this.currentModelSelectionId = node.id;\n            this.lastUserSelection = node.id;\n            if (this.model.isFiltered && CompositeTreeNode.is(node)) {\n                for (const candidate of new TopDownTreeIterator(node, { pruneSiblings: true })) {\n                    const { id, collection } = this.analyzeIDAndGetRendererGroup(candidate.id);\n                    const renderer = collection.get(id);\n                    if (renderer?.visible) {\n                        // When filtered, treat the first visible child as the selected node, since it will be the one scrolled to.\n                        this.lastUserSelection = renderer.nodeId;\n                        renderer.node.scrollIntoView();\n                        return;\n                    }\n                }\n            } else {\n                const { id, collection } = this.analyzeIDAndGetRendererGroup(node.id);\n                const renderer = collection.get(id);\n                renderer?.node.scrollIntoView();\n            }\n        }\n    }\n\n    protected analyzeIDAndGetRendererGroup(nodeID: string): { id: string, group: string, collection: Map<string, GeneralPreferenceNodeRenderer> } {\n        const { id, group } = Preference.TreeNode.getGroupAndIdFromNodeId(nodeID);\n        const collection = group === COMMONLY_USED_SECTION_PREFIX ? this.commonlyUsedRenderers : this.renderers;\n        return { id, group, collection };\n    }\n\n    protected getScrollContainer(): HTMLElement {\n        return this.scrollContainer;\n    }\n\n    storeState(): PreferencesEditorState {\n        return {\n            firstVisibleChildID: this.firstVisibleChildID,\n        };\n    }\n\n    restoreState(oldState: PreferencesEditorState): void {\n        this.firstVisibleChildID = oldState.firstVisibleChildID;\n        this.resetScroll(this.firstVisibleChildID);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { TabBar, Widget, Title } from '@theia/core/shared/@phosphor/widgets';\nimport { PreferenceScope, Message, ContextMenuRenderer, LabelProvider, StatefulWidget } from '@theia/core/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { PreferenceScopeCommandManager, FOLDER_SCOPE_MENU_PATH } from '../util/preference-scope-command-manager';\nimport { Preference } from '../util/preference-types';\nimport { Emitter } from '@theia/core';\n\nconst USER_TAB_LABEL = 'User';\nconst USER_TAB_INDEX = PreferenceScope[USER_TAB_LABEL];\nconst WORKSPACE_TAB_LABEL = 'Workspace';\nconst WORKSPACE_TAB_INDEX = PreferenceScope[WORKSPACE_TAB_LABEL];\nconst FOLDER_TAB_LABEL = 'Folder';\nconst FOLDER_TAB_INDEX = PreferenceScope[FOLDER_TAB_LABEL];\n\nconst PREFERENCE_TAB_CLASSNAME = 'preferences-scope-tab';\nconst GENERAL_FOLDER_TAB_CLASSNAME = 'preference-folder';\nconst LABELED_FOLDER_TAB_CLASSNAME = 'preferences-folder-tab';\nconst FOLDER_DROPDOWN_CLASSNAME = 'preferences-folder-dropdown';\nconst FOLDER_DROPDOWN_ICON_CLASSNAME = 'preferences-folder-dropdown-icon';\nconst TABBAR_UNDERLINE_CLASSNAME = 'tabbar-underline';\nconst SINGLE_FOLDER_TAB_CLASSNAME = `${PREFERENCE_TAB_CLASSNAME} ${GENERAL_FOLDER_TAB_CLASSNAME} ${LABELED_FOLDER_TAB_CLASSNAME}`;\nconst UNSELECTED_FOLDER_DROPDOWN_CLASSNAME = `${PREFERENCE_TAB_CLASSNAME} ${GENERAL_FOLDER_TAB_CLASSNAME} ${FOLDER_DROPDOWN_CLASSNAME}`;\nconst SELECTED_FOLDER_DROPDOWN_CLASSNAME = `${PREFERENCE_TAB_CLASSNAME} ${GENERAL_FOLDER_TAB_CLASSNAME} ${LABELED_FOLDER_TAB_CLASSNAME} ${FOLDER_DROPDOWN_CLASSNAME}`;\nconst SHADOW_CLASSNAME = 'with-shadow';\n\nexport interface PreferencesScopeTabBarState {\n    scopeDetails: Preference.SelectedScopeDetails;\n}\n\n@injectable()\nexport class PreferencesScopeTabBar extends TabBar<Widget> implements StatefulWidget {\n\n    static ID = 'preferences-scope-tab-bar';\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(PreferenceScopeCommandManager) protected readonly preferencesMenuFactory: PreferenceScopeCommandManager;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    protected readonly onScopeChangedEmitter = new Emitter<Preference.SelectedScopeDetails>();\n    readonly onScopeChanged = this.onScopeChangedEmitter.event;\n\n    protected folderTitle: Title<Widget>;\n    protected currentWorkspaceRoots: FileStat[] = [];\n    protected currentSelection: Preference.SelectedScopeDetails = Preference.DEFAULT_SCOPE;\n    protected editorScrollAtTop = true;\n\n    get currentScope(): Preference.SelectedScopeDetails {\n        return this.currentSelection;\n    }\n\n    protected setNewScopeSelection(newSelection: Preference.SelectedScopeDetails): void {\n        const stringifiedSelectionScope = newSelection.scope.toString();\n        const newIndex = this.titles.findIndex(title => title.dataset.scope === stringifiedSelectionScope);\n        if (newIndex !== -1) {\n            this.currentSelection = newSelection;\n            this.currentIndex = newIndex;\n            if (newSelection.scope === PreferenceScope.Folder) {\n                this.addOrUpdateFolderTab();\n            }\n            this.emitNewScope();\n        }\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.id = PreferencesScopeTabBar.ID;\n        this.setupInitialDisplay();\n        this.tabActivateRequested.connect((sender, args) => {\n            const scopeDetails = this.toScopeDetails(args.title);\n            if (scopeDetails) {\n                this.setNewScopeSelection(scopeDetails);\n            }\n        });\n        this.workspaceService.onWorkspaceChanged(newRoots => {\n            this.doUpdateDisplay(newRoots);\n        });\n        this.workspaceService.onWorkspaceLocationChanged(() => this.updateWorkspaceTab());\n        const tabUnderline = document.createElement('div');\n        tabUnderline.className = TABBAR_UNDERLINE_CLASSNAME;\n        this.node.append(tabUnderline);\n    }\n\n    protected toScopeDetails(title?: Title<Widget> | Preference.SelectedScopeDetails): Preference.SelectedScopeDetails | undefined {\n        if (title) {\n            const source = 'dataset' in title ? title.dataset : title;\n            const { scope, uri, activeScopeIsFolder } = source;\n            return {\n                scope: Number(scope),\n                uri: uri || undefined,\n                activeScopeIsFolder: activeScopeIsFolder === 'true' || activeScopeIsFolder === true,\n            };\n        }\n    }\n\n    protected toDataSet(scopeDetails: Preference.SelectedScopeDetails): Title.Dataset {\n        const { scope, uri, activeScopeIsFolder } = scopeDetails;\n        return {\n            scope: scope.toString(),\n            uri: uri ?? '',\n            activeScopeIsFolder: activeScopeIsFolder.toString()\n        };\n    }\n\n    protected setupInitialDisplay(): void {\n        this.addUserTab();\n        if (this.workspaceService.workspace) {\n            this.addWorkspaceTab(this.workspaceService.workspace);\n        }\n        this.addOrUpdateFolderTab();\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        this.addTabIndexToTabs();\n    }\n\n    protected addTabIndexToTabs(): void {\n        this.node.querySelectorAll('li').forEach((tab, index) => {\n            tab.tabIndex = 0;\n            const handler = () => {\n                if (tab.className.includes(GENERAL_FOLDER_TAB_CLASSNAME) && this.currentWorkspaceRoots.length > 1) {\n                    const tabRect = tab.getBoundingClientRect();\n                    this.openContextMenu(tabRect, tab, 'keypress');\n                } else {\n                    const details = this.toScopeDetails(this.titles[index]);\n                    if (details) {\n                        this.setNewScopeSelection(details);\n                    }\n                }\n            };\n            tab.onkeydown = handler;\n            tab.onclick = handler;\n        });\n    }\n\n    protected addUserTab(): void {\n        this.addTab(new Title({\n            dataset: { uri: '', scope: USER_TAB_INDEX.toString() },\n            label: USER_TAB_LABEL,\n            owner: this,\n            className: PREFERENCE_TAB_CLASSNAME\n        }));\n    }\n\n    protected addWorkspaceTab(currentWorkspace: FileStat): Title<Widget> {\n        const scopeDetails = this.getWorkspaceDataset(currentWorkspace);\n        const workspaceTabTitle = new Title({\n            dataset: this.toDataSet(scopeDetails),\n            label: WORKSPACE_TAB_LABEL,\n            owner: this,\n            className: PREFERENCE_TAB_CLASSNAME,\n        });\n        this.addTab(workspaceTabTitle);\n        return workspaceTabTitle;\n    }\n\n    protected getWorkspaceDataset(currentWorkspace: FileStat): Preference.SelectedScopeDetails {\n        const { resource, isDirectory } = currentWorkspace;\n        const scope = WORKSPACE_TAB_INDEX;\n        return { uri: resource.toString(), activeScopeIsFolder: isDirectory, scope };\n    }\n\n    protected addOrUpdateFolderTab(): void {\n        if (!!this.workspaceService.workspace) {\n            this.currentWorkspaceRoots = this.workspaceService.tryGetRoots();\n            const multipleFolderRootsAreAvailable = this.currentWorkspaceRoots && this.currentWorkspaceRoots.length > 1;\n            const noFolderRootsAreAvailable = this.currentWorkspaceRoots.length === 0;\n            const shouldShowFoldersSeparately = this.workspaceService.saved;\n\n            if (!noFolderRootsAreAvailable) {\n                if (!this.folderTitle) {\n                    this.folderTitle = new Title({\n                        label: '',\n                        caption: FOLDER_TAB_LABEL,\n                        owner: this,\n                    });\n                }\n\n                this.setFolderTitleProperties(multipleFolderRootsAreAvailable);\n                this.getFolderContextMenu(this.currentWorkspaceRoots);\n                if (multipleFolderRootsAreAvailable || shouldShowFoldersSeparately) {\n                    this.addTab(this.folderTitle);\n                }\n            } else {\n                const folderTabIndex = this.titles.findIndex(title => title.caption === FOLDER_TAB_LABEL);\n\n                if (folderTabIndex > -1) {\n                    this.removeTabAt(folderTabIndex);\n                }\n            }\n        }\n    }\n\n    protected setFolderTitleProperties(multipleFolderRootsAreAvailable: boolean): void {\n        this.folderTitle.iconClass = multipleFolderRootsAreAvailable ? FOLDER_DROPDOWN_ICON_CLASSNAME : '';\n        if (this.currentSelection.scope === FOLDER_TAB_INDEX) {\n            this.folderTitle.label = this.labelProvider.getName(new URI(this.currentSelection.uri));\n            this.folderTitle.dataset = this.toDataSet(this.currentSelection);\n            this.folderTitle.className = multipleFolderRootsAreAvailable ? SELECTED_FOLDER_DROPDOWN_CLASSNAME : SINGLE_FOLDER_TAB_CLASSNAME;\n        } else {\n            const singleFolderRoot = this.currentWorkspaceRoots[0].resource;\n            const singleFolderLabel = this.labelProvider.getName(singleFolderRoot);\n            const defaultURI = multipleFolderRootsAreAvailable ? '' : singleFolderRoot.toString();\n            this.folderTitle.label = multipleFolderRootsAreAvailable ? FOLDER_TAB_LABEL : singleFolderLabel;\n            this.folderTitle.className = multipleFolderRootsAreAvailable ? UNSELECTED_FOLDER_DROPDOWN_CLASSNAME : SINGLE_FOLDER_TAB_CLASSNAME;\n            this.folderTitle.dataset = { folderTitle: 'true', scope: FOLDER_TAB_INDEX.toString(), uri: defaultURI };\n        }\n    }\n\n    protected folderSelectionCallback = (newScope: Preference.SelectedScopeDetails): void => { this.setNewScopeSelection(newScope); };\n\n    protected getFolderContextMenu(workspaceRoots = this.workspaceService.tryGetRoots()): void {\n        this.preferencesMenuFactory.createFolderWorkspacesMenu(workspaceRoots, this.currentSelection.uri);\n    }\n\n    handleEvent(): void {\n        // Don't - the handlers are defined in PreferenceScopeTabbarWidget.addTabIndexToTabs()\n    }\n\n    protected openContextMenu(tabRect: DOMRect | ClientRect, folderTabNode: HTMLElement, source: 'click' | 'keypress'): void {\n        this.contextMenuRenderer.render({\n            menuPath: FOLDER_SCOPE_MENU_PATH,\n            anchor: { x: tabRect.left, y: tabRect.bottom },\n            args: [this.folderSelectionCallback, 'from-tabbar'],\n            onHide: () => {\n                if (source === 'click') { folderTabNode.blur(); }\n            }\n        });\n    }\n\n    protected doUpdateDisplay(newRoots: FileStat[]): void {\n        const folderWasRemoved = newRoots.length < this.currentWorkspaceRoots.length;\n        this.currentWorkspaceRoots = newRoots;\n        if (folderWasRemoved) {\n            const removedFolderWasSelectedScope = !this.currentWorkspaceRoots.some(root => root.resource.toString() === this.currentSelection.uri);\n            if (removedFolderWasSelectedScope) {\n                this.setNewScopeSelection(Preference.DEFAULT_SCOPE);\n            }\n        }\n        this.updateWorkspaceTab();\n        this.addOrUpdateFolderTab();\n    }\n\n    protected updateWorkspaceTab(): void {\n        const currentWorkspace = this.workspaceService.workspace;\n        if (currentWorkspace) {\n            const workspaceTitle = this.titles.find(title => title.label === WORKSPACE_TAB_LABEL) ?? this.addWorkspaceTab(currentWorkspace);\n            const scopeDetails = this.getWorkspaceDataset(currentWorkspace);\n            workspaceTitle.dataset = this.toDataSet(scopeDetails);\n            if (this.currentSelection.scope === PreferenceScope.Workspace) {\n                this.setNewScopeSelection(scopeDetails);\n            }\n        }\n    }\n\n    protected emitNewScope(): void {\n        this.onScopeChangedEmitter.fire(this.currentSelection);\n    }\n\n    setScope(scope: PreferenceScope.User | PreferenceScope.Workspace): void {\n        const stringifiedSelectionScope = scope.toString();\n        const correspondingTitle = this.titles.find(title => title.dataset.scope === stringifiedSelectionScope);\n        const details = this.toScopeDetails(correspondingTitle);\n        if (details) {\n            this.setNewScopeSelection(details);\n        }\n    }\n\n    storeState(): PreferencesScopeTabBarState {\n        return {\n            scopeDetails: this.currentScope\n        };\n    }\n\n    restoreState(oldState: PreferencesScopeTabBarState): void {\n        const scopeDetails = this.toScopeDetails(oldState.scopeDetails);\n        if (scopeDetails) {\n            this.setNewScopeSelection(scopeDetails);\n        }\n    }\n\n    toggleShadow(showShadow: boolean): void {\n        this.toggleClass(SHADOW_CLASSNAME, showShadow);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ReactWidget, StatefulWidget } from '@theia/core/lib/browser';\nimport { injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as React from '@theia/core/shared/react';\nimport debounce = require('@theia/core/shared/lodash.debounce');\nimport { Disposable, Emitter } from '@theia/core';\n\nexport interface PreferencesSearchbarState {\n    searchTerm: string;\n}\n\n@injectable()\nexport class PreferencesSearchbarWidget extends ReactWidget implements StatefulWidget {\n    static readonly ID = 'settings.header';\n    static readonly LABEL = 'Settings Header';\n    static readonly SEARCHBAR_ID = 'preference-searchbar';\n\n    protected readonly onFilterStringChangedEmitter = new Emitter<string>();\n    readonly onFilterChanged = this.onFilterStringChangedEmitter.event;\n\n    protected searchbarRef: React.RefObject<HTMLInputElement> = React.createRef<HTMLInputElement>();\n    protected resultsCount: number = 0;\n\n    @postConstruct()\n    protected init(): void {\n        this.onRender.push(Disposable.create(() => this.focus()));\n        this.id = PreferencesSearchbarWidget.ID;\n        this.title.label = PreferencesSearchbarWidget.LABEL;\n        this.update();\n    }\n\n    protected handleSearch = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        this.search(e.target.value);\n    };\n\n    protected search = debounce((value: string) => {\n        this.onFilterStringChangedEmitter.fire(value);\n        this.update();\n    }, 200);\n\n    focus(): void {\n        if (this.searchbarRef.current) {\n            this.searchbarRef.current.focus();\n        }\n    }\n\n    /**\n     * Clears the search input and all search results.\n     * @param e on-click mouse event.\n     */\n    protected clearSearchResults = (e: React.MouseEvent): void => {\n        const search = document.getElementById(PreferencesSearchbarWidget.SEARCHBAR_ID) as HTMLInputElement;\n        if (search) {\n            search.value = '';\n            this.search(search.value);\n            this.update();\n        }\n    };\n\n    /**\n     * Renders all search bar options.\n     */\n    protected renderOptionContainer(): React.ReactNode {\n        const resultsCount = this.renderResultsCountOption();\n        const clearAllOption = this.renderClearAllOption();\n        return <div className=\"option-buttons\"> {resultsCount} {clearAllOption} </div>;\n    }\n\n    /**\n     * Renders a badge displaying search results count.\n     */\n    protected renderResultsCountOption(): React.ReactNode {\n        const resultsFound = `${this.resultsCount === 0 ? 'No' : this.resultsCount} ${this.resultsCount === 1 ? 'Setting Found' : 'Settings Found'}`;\n        return this.searchTermExists() ?\n            (<span\n                className=\"results-found\"\n                title={resultsFound}>\n                {resultsFound}\n            </span>)\n            : '';\n    }\n\n    /**\n     * Renders a clear all button.\n     */\n    protected renderClearAllOption(): React.ReactNode {\n        return <span\n            className={`clear-all option ${(this.searchTermExists() ? 'enabled' : '')}`}\n            title=\"Clear Search Results\"\n            onClick={this.clearSearchResults}\n        />;\n    }\n\n    /**\n     * Determines whether the search input currently has a value.\n     * @returns true, if the search input currently has a value; false, otherwise.\n     */\n    protected searchTermExists(): boolean {\n        return !!this.searchbarRef.current?.value;\n    }\n\n    protected getSearchTerm(): string {\n        const search = document.getElementById(PreferencesSearchbarWidget.SEARCHBAR_ID) as HTMLInputElement;\n        return search?.value;\n    }\n\n    updateSearchTerm(searchTerm: string): void {\n        const search = document.getElementById(PreferencesSearchbarWidget.SEARCHBAR_ID) as HTMLInputElement;\n        if (!search) {\n            return;\n        }\n        search.value = searchTerm;\n        this.search(search.value);\n        this.update();\n    }\n\n    render(): React.ReactNode {\n        const optionContainer = this.renderOptionContainer();\n        return (\n            <div className='settings-header'>\n                <div className=\"settings-search-container\">\n                    <input\n                        type=\"text\"\n                        id={PreferencesSearchbarWidget.SEARCHBAR_ID}\n                        spellCheck={false}\n                        placeholder=\"Search Settings\"\n                        className=\"settings-search-input theia-input\"\n                        onChange={this.handleSearch}\n                        ref={this.searchbarRef}\n                    />\n                    {optionContainer}\n                </div>\n            </div >\n        );\n    }\n\n    /**\n     * Updates the search result count.\n     * @param count the result count.\n     */\n    updateResultsCount(count: number): void {\n        this.resultsCount = count;\n        this.update();\n    }\n\n    storeState(): PreferencesSearchbarState {\n        return {\n            searchTerm: this.getSearchTerm()\n        };\n    }\n\n    restoreState(oldState: PreferencesSearchbarState): void {\n        const searchInputExists = this.onDidChangeVisibility(() => {\n            this.updateSearchTerm(oldState.searchTerm || '');\n            searchInputExists.dispose();\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    ContextMenuRenderer,\n    ExpandableTreeNode,\n    TreeNode,\n    TreeProps,\n    TreeWidget,\n    TREE_NODE_CONTENT_CLASS,\n} from '@theia/core/lib/browser';\nimport React = require('@theia/core/shared/react');\nimport { PreferenceTreeModel, PreferenceTreeNodeRow, PreferenceTreeNodeProps } from '../preference-tree-model';\n\n@injectable()\nexport class PreferencesTreeWidget extends TreeWidget {\n    static ID = 'preferences.tree';\n\n    protected shouldFireSelectionEvents: boolean = true;\n    protected firstVisibleLeafNodeID: string;\n\n    @inject(PreferenceTreeModel) readonly model: PreferenceTreeModel;\n    @inject(TreeProps) protected readonly treeProps: TreeProps;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n\n    @postConstruct()\n    init(): void {\n        super.init();\n        this.id = PreferencesTreeWidget.ID;\n        this.toDispose.pushAll([\n            this.model.onFilterChanged(() => {\n                this.updateRows();\n            }),\n        ]);\n    }\n\n    doUpdateRows(): void {\n        this.rows = new Map();\n        let index = 0;\n        for (const [id, nodeRow] of this.model.currentRows.entries()) {\n            if (nodeRow.visibleChildren > 0 && (ExpandableTreeNode.is(nodeRow.node) || ExpandableTreeNode.isExpanded(nodeRow.node.parent))) {\n                this.rows.set(id, { ...nodeRow, index: index++ });\n            }\n        }\n        this.updateScrollToRow();\n    }\n\n    protected doRenderNodeRow({ depth, visibleChildren, node, isExpansible }: PreferenceTreeNodeRow): React.ReactNode {\n        return this.renderNode(node, { depth, visibleChildren, isExpansible });\n    }\n\n    protected renderNode(node: TreeNode, props: PreferenceTreeNodeProps): React.ReactNode {\n        if (!TreeNode.isVisible(node)) {\n            return undefined;\n        }\n\n        const attributes = this.createNodeAttributes(node, props);\n\n        const content = <div className={TREE_NODE_CONTENT_CLASS}>\n            {this.renderExpansionToggle(node, props)}\n            {this.renderCaption(node, props)}\n        </div>;\n        return React.createElement('div', attributes, content);\n    }\n\n    protected renderExpansionToggle(node: TreeNode, props: PreferenceTreeNodeProps): React.ReactNode {\n        if (ExpandableTreeNode.is(node) && !props.isExpansible) {\n            return <div className='preferences-tree-spacer' />;\n        }\n        return super.renderExpansionToggle(node, props);\n    }\n\n    protected toNodeName(node: TreeNode): string {\n        const visibleChildren = this.model.currentRows.get(node.id)?.visibleChildren;\n        const baseName = this.labelProvider.getName(node);\n        const printedNameWithVisibleChildren = this.model.isFiltered && visibleChildren !== undefined\n            ? `${baseName} (${visibleChildren})`\n            : baseName;\n        return printedNameWithVisibleChildren;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { WidgetFactory, createTreeContainer, TreeWidget, TreeProps, defaultTreeProps, TreeModel, LabelProviderContribution } from '@theia/core/lib/browser';\nimport { PreferenceNodeRendererFactory, PreferenceHeaderRenderer } from './components/preference-node-renderer';\nimport { PreferencesWidget } from './preference-widget';\nimport { PreferencesTreeWidget } from './preference-tree-widget';\nimport { PreferencesEditorWidget } from './preference-editor-widget';\nimport { PreferencesSearchbarWidget } from './preference-searchbar-widget';\nimport { PreferencesScopeTabBar } from './preference-scope-tabbar-widget';\nimport { PreferenceTreeModel } from '../preference-tree-model';\nimport { PreferenceTreeLabelProvider } from '../util/preference-tree-label-provider';\nimport { Preference } from '../util/preference-types';\nimport { PreferenceStringInputRenderer } from './components/preference-string-input';\nimport { PreferenceBooleanInputRenderer } from './components/preference-boolean-input';\nimport { PreferenceJSONLinkRenderer } from './components/preference-json-input';\nimport { PreferenceSelectInputRenderer } from './components/preference-select-input';\nimport { PreferenceNumberInputRenderer } from './components/preference-number-input';\nimport { PreferenceArrayInputRenderer } from './components/preference-array-input';\n\nexport function bindPreferencesWidgets(bind: interfaces.Bind): void {\n    bind(PreferenceTreeLabelProvider).toSelf().inSingletonScope();\n    bind(LabelProviderContribution).toService(PreferenceTreeLabelProvider);\n    bind(PreferencesWidget)\n        .toDynamicValue(({ container }) => createPreferencesWidgetContainer(container).get(PreferencesWidget))\n        .inSingletonScope();\n    bind(WidgetFactory).toDynamicValue(({ container }) => ({\n        id: PreferencesWidget.ID,\n        createWidget: () => container.get(PreferencesWidget)\n    })).inSingletonScope();\n    bind(PreferenceSelectInputRenderer).toSelf();\n    bind(PreferenceArrayInputRenderer).toSelf();\n    bind(PreferenceStringInputRenderer).toSelf();\n    bind(PreferenceBooleanInputRenderer).toSelf();\n    bind(PreferenceNumberInputRenderer).toSelf();\n    bind(PreferenceJSONLinkRenderer).toSelf();\n    bind(PreferenceHeaderRenderer).toSelf();\n}\n\nfunction createPreferencesWidgetContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent);\n    child.bind(PreferenceTreeModel).toSelf();\n    child.rebind(TreeModel).toService(PreferenceTreeModel);\n    child.unbind(TreeWidget);\n    child.bind(PreferencesTreeWidget).toSelf();\n    child.rebind(TreeProps).toConstantValue({ ...defaultTreeProps, search: false });\n    child.bind(PreferencesEditorWidget).toSelf();\n\n    child.bind(PreferencesSearchbarWidget).toSelf();\n    child.bind(PreferencesScopeTabBar).toSelf();\n    child.bind(PreferencesWidget).toSelf();\n\n    child.bind(PreferenceNodeRendererFactory).toFactory(({ container }) => (node: Preference.TreeNode) => {\n        const grandchild = container.createChild();\n        grandchild.bind(Preference.Node).toConstantValue(node);\n        if (Preference.LeafNode.is(node)) {\n            if (node.preference.data.enum) {\n                return grandchild.get(PreferenceSelectInputRenderer);\n            }\n            const type = Array.isArray(node.preference.data.type) ? node.preference.data.type[0] : node.preference.data.type;\n            if (type === 'array' && node.preference.data.items?.type === 'string') {\n                return grandchild.get(PreferenceArrayInputRenderer);\n            }\n            switch (type) {\n                case 'string':\n                    return grandchild.get(PreferenceStringInputRenderer);\n                case 'boolean':\n                    return grandchild.get(PreferenceBooleanInputRenderer);\n                case 'number':\n                case 'integer':\n                    return grandchild.get(PreferenceNumberInputRenderer);\n                default:\n                    return grandchild.get(PreferenceJSONLinkRenderer);\n            }\n        } else {\n            return grandchild.get(PreferenceHeaderRenderer);\n        }\n    });\n\n    return child;\n}\n","/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { postConstruct, injectable, inject } from '@theia/core/shared/inversify';\nimport { Panel, Widget, Message, StatefulWidget } from '@theia/core/lib/browser';\nimport { PreferencesEditorState, PreferencesEditorWidget } from './preference-editor-widget';\nimport { PreferencesTreeWidget } from './preference-tree-widget';\nimport { PreferencesSearchbarState, PreferencesSearchbarWidget } from './preference-searchbar-widget';\nimport { PreferencesScopeTabBar, PreferencesScopeTabBarState } from './preference-scope-tabbar-widget';\nimport { Preference } from '../util/preference-types';\n\ninterface PreferencesWidgetState {\n    scopeTabBarState: PreferencesScopeTabBarState,\n    editorState: PreferencesEditorState,\n    searchbarWidgetState: PreferencesSearchbarState,\n}\n\n@injectable()\nexport class PreferencesWidget extends Panel implements StatefulWidget {\n    /**\n     * The widget `id`.\n     */\n    static readonly ID = 'settings_widget';\n    /**\n     * The widget `label` which is used for display purposes.\n     */\n    static readonly LABEL = 'Preferences';\n\n    @inject(PreferencesEditorWidget) protected readonly editorWidget: PreferencesEditorWidget;\n    @inject(PreferencesTreeWidget) protected readonly treeWidget: PreferencesTreeWidget;\n    @inject(PreferencesSearchbarWidget) protected readonly searchbarWidget: PreferencesSearchbarWidget;\n    @inject(PreferencesScopeTabBar) protected readonly tabBarWidget: PreferencesScopeTabBar;\n\n    get currentScope(): Preference.SelectedScopeDetails {\n        return this.tabBarWidget.currentScope;\n    }\n\n    protected onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        if (msg.width < 600 && this.treeWidget && !this.treeWidget.isHidden) {\n            this.treeWidget.hide();\n            this.editorWidget.addClass('full-pane');\n        } else if (msg.width >= 600 && this.treeWidget && this.treeWidget.isHidden) {\n            this.treeWidget.show();\n            this.editorWidget.removeClass('full-pane');\n        }\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.searchbarWidget.focus();\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.id = PreferencesWidget.ID;\n        this.title.label = PreferencesWidget.LABEL;\n        this.title.closable = true;\n        this.addClass('theia-settings-container');\n        this.title.iconClass = 'fa fa-sliders';\n\n        this.searchbarWidget.addClass('preferences-searchbar-widget');\n        this.addWidget(this.searchbarWidget);\n\n        this.tabBarWidget.addClass('preferences-tabbar-widget');\n        this.addWidget(this.tabBarWidget);\n\n        this.treeWidget.addClass('preferences-tree-widget');\n        this.addWidget(this.treeWidget);\n\n        this.editorWidget.addClass('preferences-editor-widget');\n        this.addWidget(this.editorWidget);\n\n        this.update();\n    }\n\n    storeState(): PreferencesWidgetState {\n        return {\n            scopeTabBarState: this.tabBarWidget.storeState(),\n            editorState: this.editorWidget.storeState(),\n            searchbarWidgetState: this.searchbarWidget.storeState(),\n        };\n    }\n\n    restoreState(state: PreferencesWidgetState): void {\n        this.tabBarWidget.restoreState(state.scopeTabBarState);\n        this.editorWidget.restoreState(state.editorState);\n        this.searchbarWidget.restoreState(state.searchbarWidgetState);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './user-storage-uri';\nexport * from './user-storage-frontend-module';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/index.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"sourceRoot":""}