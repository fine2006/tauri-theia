{"version":3,"sources":["webpack://tauri-theia/./node_modules/@theia/core/shared/@phosphor/widgets.js","webpack://tauri-theia/./node_modules/@theia/core/shared/react-dom.js","webpack://tauri-theia/./node_modules/@theia/core/shared/react.js","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-model.ts","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-service.ts","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-tree-filters-renderer.tsx","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-tree.ts","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-widget.ts","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog.ts","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/file-tree/file-tree-container.ts","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/file-tree/file-tree-model.ts","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/file-tree/file-tree-widget.tsx","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/file-tree/index.ts","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/location/index.ts","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/location/location-renderer.tsx","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/location/location-service.ts","webpack://tauri-theia/./node_modules/@theia/filesystem/src/common/index.ts"],"names":[],"mappings":"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","file":"vendors-node_modules_theia_filesystem_lib_browser_file-dialog_file-dialog-service_js.bundle.js","sourcesContent":["module.exports = require('@phosphor/widgets');\n","module.exports = require('react-dom');\n","module.exports = require('react');\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Emitter, Event } from '@theia/core/lib/common';\nimport { TreeNode, SelectableTreeNode } from '@theia/core/lib/browser';\nimport { DirNode, FileNode, FileTreeModel, FileStatNode } from '../file-tree';\nimport { FileDialogTree } from './file-dialog-tree';\n\n@injectable()\nexport class FileDialogModel extends FileTreeModel {\n\n    @inject(FileDialogTree) readonly tree: FileDialogTree;\n    protected readonly onDidOpenFileEmitter = new Emitter<void>();\n    protected _initialLocation: URI | undefined;\n    private _disableFileSelection: boolean = false;\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.toDispose.push(this.onDidOpenFileEmitter);\n    }\n\n    /**\n     * Returns the first valid location that was set by calling the `navigateTo` method. Once the initial location has a defined value, it will not change.\n     * Can be `undefined`.\n     */\n    get initialLocation(): URI | undefined {\n        return this._initialLocation;\n    }\n\n    set disableFileSelection(isSelectable: boolean) {\n        this._disableFileSelection = isSelectable;\n    }\n\n    async navigateTo(nodeOrId: TreeNode | string | undefined): Promise<TreeNode | undefined> {\n        const result = await super.navigateTo(nodeOrId);\n        if (!this._initialLocation && FileStatNode.is(result)) {\n            this._initialLocation = result.uri;\n        }\n        return result;\n    }\n\n    get onDidOpenFile(): Event<void> {\n        return this.onDidOpenFileEmitter.event;\n    }\n\n    protected doOpenNode(node: TreeNode): void {\n        if (FileNode.is(node)) {\n            this.onDidOpenFileEmitter.fire(undefined);\n        } else if (DirNode.is(node)) {\n            this.navigateTo(node);\n        } else {\n            super.doOpenNode(node);\n        }\n    }\n\n    getNextSelectableNode(node: SelectableTreeNode = this.selectedNodes[0]): SelectableTreeNode | undefined {\n        let nextNode: SelectableTreeNode | undefined = node;\n        do {\n            nextNode = super.getNextSelectableNode(nextNode);\n        } while (FileStatNode.is(nextNode) && !this.isFileStatNodeSelectable(nextNode));\n        return nextNode;\n    }\n\n    getPrevSelectableNode(node: SelectableTreeNode = this.selectedNodes[0]): SelectableTreeNode | undefined {\n        let prevNode: SelectableTreeNode | undefined = node;\n        do {\n            prevNode = super.getPrevSelectableNode(prevNode);\n        } while (FileStatNode.is(prevNode) && !this.isFileStatNodeSelectable(prevNode));\n        return prevNode;\n    }\n\n    private isFileStatNodeSelectable(node: FileStatNode): boolean {\n        return !(!node.fileStat.isDirectory && this._disableFileSelection);\n    }\n\n    canNavigateUpward(): boolean {\n        const treeRoot = this.tree.root;\n        return FileStatNode.is(treeRoot) && !treeRoot.uri.path.isRoot;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { MaybeArray } from '@theia/core/lib/common';\nimport { LabelProvider } from '@theia/core/lib/browser';\nimport { FileStat } from '../../common/files';\nimport { DirNode } from '../file-tree';\nimport { OpenFileDialogFactory, OpenFileDialogProps, SaveFileDialogFactory, SaveFileDialogProps } from './file-dialog';\nimport { FileService } from '../file-service';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\n\nexport const FileDialogService = Symbol('FileDialogService');\nexport interface FileDialogService {\n\n    showOpenDialog(props: OpenFileDialogProps & { canSelectMany: true }, folder?: FileStat): Promise<MaybeArray<URI> | undefined>;\n    showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<URI | undefined>;\n    showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<MaybeArray<URI> | undefined>;\n\n    showSaveDialog(props: SaveFileDialogProps, folder?: FileStat): Promise<URI | undefined>\n\n}\n\n@injectable()\nexport class DefaultFileDialogService implements FileDialogService {\n\n    @inject(EnvVariablesServer)\n    protected readonly environments: EnvVariablesServer;\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @inject(OpenFileDialogFactory) protected readonly openFileDialogFactory: OpenFileDialogFactory;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(SaveFileDialogFactory) protected readonly saveFileDialogFactory: SaveFileDialogFactory;\n\n    async showOpenDialog(props: OpenFileDialogProps & { canSelectMany: true }, folder?: FileStat): Promise<MaybeArray<URI> | undefined>;\n    async showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<URI | undefined>;\n    async showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<MaybeArray<URI> | undefined> {\n        const title = props.title || 'Open';\n        const rootNode = await this.getRootNode(folder);\n        if (rootNode) {\n            const dialog = this.openFileDialogFactory(Object.assign(props, { title }));\n            await dialog.model.navigateTo(rootNode);\n            const value = await dialog.open();\n            if (value) {\n                if (!Array.isArray(value)) {\n                    return value.uri;\n                }\n                return value.map(node => node.uri);\n            }\n        }\n        return undefined;\n    }\n\n    async showSaveDialog(props: SaveFileDialogProps, folder?: FileStat): Promise<URI | undefined> {\n        const title = props.title || 'Save';\n        const rootNode = await this.getRootNode(folder);\n        if (rootNode) {\n            const dialog = this.saveFileDialogFactory(Object.assign(props, { title }));\n            await dialog.model.navigateTo(rootNode);\n            return dialog.open();\n        }\n        return undefined;\n    }\n\n    protected async getRootNode(folderToOpen?: FileStat): Promise<DirNode | undefined> {\n        const folder = folderToOpen || {\n            resource: new URI(await this.environments.getHomeDirUri()),\n            isDirectory: true\n        };\n        const folderUri = folder.resource;\n        const rootUri = folder.isDirectory ? folderUri : folderUri.parent;\n        try {\n            const rootStat = await this.fileService.resolve(rootUri);\n            return DirNode.createRoot(rootStat);\n        } catch { }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ReactRenderer } from '@theia/core/lib/browser/widgets/react-renderer';\nimport { FileDialogTree } from './file-dialog-tree';\nimport * as React from '@theia/core/shared/react';\nimport { inject, injectable } from '@theia/core/shared/inversify';\n\nexport const FILE_TREE_FILTERS_LIST_CLASS = 'theia-FileTreeFiltersList';\n\n/**\n * A set of file filters that are used by the dialog. Each entry is a human readable label,\n * like \"TypeScript\", and an array of extensions, e.g.\n * ```ts\n * {\n *  'Images': ['png', 'jpg']\n *  'TypeScript': ['ts', 'tsx']\n * }\n * ```\n */\nexport class FileDialogTreeFilters {\n    [name: string]: string[];\n}\n\nexport const FileDialogTreeFiltersRendererFactory = Symbol('FileDialogTreeFiltersRendererFactory');\nexport interface FileDialogTreeFiltersRendererFactory {\n    (options: FileDialogTreeFiltersRendererOptions): FileDialogTreeFiltersRenderer;\n}\n\nexport const FileDialogTreeFiltersRendererOptions = Symbol('FileDialogTreeFiltersRendererOptions');\nexport interface FileDialogTreeFiltersRendererOptions {\n    suppliedFilters: FileDialogTreeFilters;\n    fileDialogTree: FileDialogTree;\n}\n\n@injectable()\nexport class FileDialogTreeFiltersRenderer extends ReactRenderer {\n\n    readonly appliedFilters: FileDialogTreeFilters;\n    readonly suppliedFilters: FileDialogTreeFilters;\n    readonly fileDialogTree: FileDialogTree;\n\n    constructor(\n        @inject(FileDialogTreeFiltersRendererOptions) readonly options: FileDialogTreeFiltersRendererOptions\n    ) {\n        super();\n        this.suppliedFilters = options.suppliedFilters;\n        this.fileDialogTree = options.fileDialogTree;\n        this.appliedFilters = { ...this.suppliedFilters, 'All Files': [], };\n    }\n\n    protected readonly handleFilterChanged = (e: React.ChangeEvent<HTMLSelectElement>) => this.onFilterChanged(e);\n\n    protected doRender(): React.ReactNode {\n        if (!this.appliedFilters) {\n            return undefined;\n        }\n\n        const options = Object.keys(this.appliedFilters).map(value => this.renderLocation(value));\n        return <select className={'theia-select ' + FILE_TREE_FILTERS_LIST_CLASS} onChange={this.handleFilterChanged}>{...options}</select>;\n    }\n\n    protected renderLocation(value: string): React.ReactNode {\n        return <option value={value} key={value}>{value}</option>;\n    }\n\n    protected onFilterChanged(e: React.ChangeEvent<HTMLSelectElement>): void {\n        const locationList = this.locationList;\n        if (locationList) {\n            const value = locationList.value;\n            const filters = this.appliedFilters[value];\n            this.fileDialogTree.setFilter(filters);\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    get locationList(): HTMLSelectElement | undefined {\n        const locationList = this.host.getElementsByClassName(FILE_TREE_FILTERS_LIST_CLASS)[0];\n        if (locationList instanceof HTMLSelectElement) {\n            return locationList;\n        }\n        return undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { DirNode, FileTree } from '../file-tree';\nimport { TreeNode, CompositeTreeNode } from '@theia/core/lib/browser/tree/tree';\nimport { FileStat } from '../../common/files';\n\n@injectable()\nexport class FileDialogTree extends FileTree {\n\n    /**\n     * Extensions for files to be shown\n     */\n    protected fileExtensions: string[] = [];\n\n    /**\n     * Sets extensions for filtering files\n     *\n     * @param fileExtensions array of extensions\n     */\n    setFilter(fileExtensions: string[]): void {\n        this.fileExtensions = fileExtensions.slice();\n        this.refresh();\n    }\n\n    protected async toNodes(fileStat: FileStat, parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (!fileStat.children) {\n            return [];\n        }\n\n        const result = await Promise.all(\n            fileStat.children\n                .filter(child => this.isVisible(child))\n                .map(child => this.toNode(child, parent))\n        );\n\n        return result.sort(DirNode.compare);\n    }\n\n    /**\n     * Determines whether file or folder can be shown\n     *\n     * @param fileStat resource to check\n     */\n    protected isVisible(fileStat: FileStat): boolean {\n        if (fileStat.isDirectory) {\n            return true;\n        }\n\n        if (this.fileExtensions.length === 0) {\n            return true;\n        }\n\n        return !this.fileExtensions.every(value => fileStat.resource.path.ext !== '.' + value);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { ContextMenuRenderer, NodeProps, TreeProps, TreeNode, SELECTED_CLASS, FOCUS_CLASS } from '@theia/core/lib/browser';\nimport { FileTreeWidget, FileStatNode } from '../file-tree';\nimport { FileDialogModel } from './file-dialog-model';\n\nexport const FILE_DIALOG_CLASS = 'theia-FileDialog';\nexport const NOT_SELECTABLE_CLASS = 'theia-mod-not-selectable';\n\n@injectable()\nexport class FileDialogWidget extends FileTreeWidget {\n\n    private _disableFileSelection: boolean = false;\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(FileDialogModel) readonly model: FileDialogModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(props, model, contextMenuRenderer);\n        this.addClass(FILE_DIALOG_CLASS);\n    }\n\n    set disableFileSelection(isSelectable: boolean) {\n        this._disableFileSelection = isSelectable;\n        this.model.disableFileSelection = isSelectable;\n    }\n\n    protected createNodeAttributes(node: TreeNode, props: NodeProps): React.Attributes & React.HTMLAttributes<HTMLElement> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const attr = super.createNodeAttributes(node, props) as any;\n        if (this.shouldDisableSelection(node)) {\n            const keys = Object.keys(attr);\n            keys.forEach(k => {\n                if (['className', 'style', 'title'].indexOf(k) < 0) {\n                    delete attr[k];\n                }\n            });\n        }\n        return attr;\n    }\n\n    protected createNodeClassNames(node: TreeNode, props: NodeProps): string[] {\n        const classNames = super.createNodeClassNames(node, props);\n        if (this.shouldDisableSelection(node)) {\n            [SELECTED_CLASS, FOCUS_CLASS].forEach(name => {\n                const ind = classNames.indexOf(name);\n                if (ind >= 0) {\n                    classNames.splice(ind, 1);\n                }\n            });\n            classNames.push(NOT_SELECTABLE_CLASS);\n        }\n        return classNames;\n    }\n\n    protected shouldDisableSelection(node: TreeNode): boolean {\n        return FileStatNode.is(node) && !node.fileStat.isDirectory && this._disableFileSelection;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { Message } from '@theia/core/shared/@phosphor/messaging';\nimport { Disposable, MaybeArray } from '@theia/core/lib/common';\nimport { Key, LabelProvider } from '@theia/core/lib/browser';\nimport { AbstractDialog, DialogProps, setEnabled, createIconButton, Widget } from '@theia/core/lib/browser';\nimport { FileStatNode } from '../file-tree';\nimport { LocationListRenderer, LocationListRendererFactory } from '../location';\nimport { FileDialogModel } from './file-dialog-model';\nimport { FileDialogWidget } from './file-dialog-widget';\nimport { FileDialogTreeFiltersRenderer, FileDialogTreeFilters, FileDialogTreeFiltersRendererFactory } from './file-dialog-tree-filters-renderer';\nimport URI from '@theia/core/lib/common/uri';\nimport { Panel } from '@theia/core/shared/@phosphor/widgets';\n\nexport const OpenFileDialogFactory = Symbol('OpenFileDialogFactory');\nexport interface OpenFileDialogFactory {\n    (props: OpenFileDialogProps): OpenFileDialog;\n}\n\nexport const SaveFileDialogFactory = Symbol('SaveFileDialogFactory');\nexport interface SaveFileDialogFactory {\n    (props: SaveFileDialogProps): SaveFileDialog;\n}\n\nexport const SAVE_DIALOG_CLASS = 'theia-SaveFileDialog';\n\nexport const NAVIGATION_PANEL_CLASS = 'theia-NavigationPanel';\nexport const NAVIGATION_BACK_CLASS = 'theia-NavigationBack';\nexport const NAVIGATION_FORWARD_CLASS = 'theia-NavigationForward';\nexport const NAVIGATION_HOME_CLASS = 'theia-NavigationHome';\nexport const NAVIGATION_UP_CLASS = 'theia-NavigationUp';\nexport const NAVIGATION_LOCATION_LIST_PANEL_CLASS = 'theia-LocationListPanel';\n\nexport const FILTERS_PANEL_CLASS = 'theia-FiltersPanel';\nexport const FILTERS_LABEL_CLASS = 'theia-FiltersLabel';\nexport const FILTERS_LIST_PANEL_CLASS = 'theia-FiltersListPanel';\n\nexport const FILENAME_PANEL_CLASS = 'theia-FileNamePanel';\nexport const FILENAME_LABEL_CLASS = 'theia-FileNameLabel';\nexport const FILENAME_TEXTFIELD_CLASS = 'theia-FileNameTextField';\n\nexport const CONTROL_PANEL_CLASS = 'theia-ControlPanel';\nexport const TOOLBAR_ITEM_TRANSFORM_TIMEOUT = 100;\n\nexport class FileDialogProps extends DialogProps {\n\n    /**\n     * A set of file filters that are used by the dialog. Each entry is a human readable label,\n     * like \"TypeScript\", and an array of extensions, e.g.\n     * ```ts\n     * {\n     *  'Images': ['png', 'jpg']\n     *  'TypeScript': ['ts', 'tsx']\n     * }\n     * ```\n     */\n    filters?: FileDialogTreeFilters;\n\n}\n\n@injectable()\nexport class OpenFileDialogProps extends FileDialogProps {\n\n    /**\n     * A human-readable string for the accept button.\n     */\n    openLabel?: string;\n\n    /**\n     * Allow to select files, defaults to `true`.\n     */\n    canSelectFiles?: boolean;\n\n    /**\n     * Allow to select folders, defaults to `false`.\n     */\n    canSelectFolders?: boolean;\n\n    /**\n     * Allow to select many files or folders.\n     */\n    canSelectMany?: boolean;\n\n}\n\n@injectable()\nexport class SaveFileDialogProps extends FileDialogProps {\n\n    /**\n     * A human-readable string for the accept button.\n     */\n    saveLabel?: string;\n\n    /**\n     * A human-readable value for the input.\n     */\n    inputValue?: string;\n\n}\n\nexport abstract class FileDialog<T> extends AbstractDialog<T> {\n\n    protected back: HTMLSpanElement;\n    protected forward: HTMLSpanElement;\n    protected home: HTMLSpanElement;\n    protected up: HTMLSpanElement;\n    protected locationListRenderer: LocationListRenderer;\n    protected treeFiltersRenderer: FileDialogTreeFiltersRenderer | undefined;\n    protected treePanel: Panel;\n\n    @inject(FileDialogWidget) readonly widget: FileDialogWidget;\n    @inject(LocationListRendererFactory) readonly locationListFactory: LocationListRendererFactory;\n    @inject(FileDialogTreeFiltersRendererFactory) readonly treeFiltersFactory: FileDialogTreeFiltersRendererFactory;\n\n    constructor(\n        @inject(FileDialogProps) readonly props: FileDialogProps\n    ) {\n        super(props);\n    }\n\n    @postConstruct()\n    init(): void {\n        this.treePanel = new Panel();\n        this.treePanel.addWidget(this.widget);\n        this.toDispose.push(this.treePanel);\n        this.toDispose.push(this.model.onChanged(() => this.update()));\n        this.toDispose.push(this.model.onDidOpenFile(() => this.accept()));\n        this.toDispose.push(this.model.onSelectionChanged(() => this.update()));\n\n        const navigationPanel = document.createElement('div');\n        navigationPanel.classList.add(NAVIGATION_PANEL_CLASS);\n        this.contentNode.appendChild(navigationPanel);\n\n        navigationPanel.appendChild(this.back = createIconButton('fa', 'fa-chevron-left'));\n        this.back.classList.add(NAVIGATION_BACK_CLASS);\n        this.back.title = 'Navigate Back';\n        navigationPanel.appendChild(this.forward = createIconButton('fa', 'fa-chevron-right'));\n        this.forward.classList.add(NAVIGATION_FORWARD_CLASS);\n        this.forward.title = 'Navigate Forward';\n        navigationPanel.appendChild(this.home = createIconButton('fa', 'fa-home'));\n        this.home.classList.add(NAVIGATION_HOME_CLASS);\n        this.home.title = 'Go To Initial Location';\n        navigationPanel.appendChild(this.up = createIconButton('fa', 'fa-level-up'));\n        this.up.classList.add(NAVIGATION_UP_CLASS);\n        this.up.title = 'Navigate Up One Directory';\n\n        const locationListRendererHost = document.createElement('div');\n        this.locationListRenderer = this.locationListFactory({ model: this.model, host: locationListRendererHost });\n        this.toDispose.push(this.locationListRenderer);\n        this.locationListRenderer.host.classList.add(NAVIGATION_LOCATION_LIST_PANEL_CLASS);\n        navigationPanel.appendChild(this.locationListRenderer.host);\n\n        if (this.props.filters) {\n            this.treeFiltersRenderer = this.treeFiltersFactory({ suppliedFilters: this.props.filters, fileDialogTree: this.widget.model.tree });\n        }\n    }\n\n    get model(): FileDialogModel {\n        return this.widget.model;\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        setEnabled(this.back, this.model.canNavigateBackward());\n        setEnabled(this.forward, this.model.canNavigateForward());\n        setEnabled(this.home, !!this.model.initialLocation\n            && !!this.model.location\n            && this.model.initialLocation.toString() !== this.model.location.toString());\n        setEnabled(this.up, this.model.canNavigateUpward());\n        this.locationListRenderer.render();\n\n        if (this.treeFiltersRenderer) {\n            this.treeFiltersRenderer.render();\n        }\n\n        this.widget.update();\n    }\n\n    protected handleEnter(event: KeyboardEvent): boolean | void {\n        if (event.target instanceof HTMLTextAreaElement || this.targetIsDirectoryInput(event.target) || this.targetIsInputToggle(event.target)) {\n            return false;\n        }\n        this.accept();\n    }\n\n    protected handleEscape(event: KeyboardEvent): boolean | void {\n        if (event.target instanceof HTMLTextAreaElement || this.targetIsDirectoryInput(event.target)) {\n            return false;\n        }\n        this.close();\n    }\n\n    protected targetIsDirectoryInput(target: EventTarget | null): boolean {\n        return target instanceof HTMLInputElement && target.classList.contains(LocationListRenderer.Styles.LOCATION_TEXT_INPUT_CLASS);\n    }\n\n    protected targetIsInputToggle(target: EventTarget | null): boolean {\n        return target instanceof HTMLSpanElement && target.classList.contains(LocationListRenderer.Styles.LOCATION_INPUT_TOGGLE_CLASS);\n    }\n\n    protected appendFiltersPanel(): void {\n        if (this.treeFiltersRenderer) {\n            const filtersPanel = document.createElement('div');\n            filtersPanel.classList.add(FILTERS_PANEL_CLASS);\n            this.contentNode.appendChild(filtersPanel);\n\n            const titlePanel = document.createElement('div');\n            titlePanel.innerHTML = 'Format:';\n            titlePanel.classList.add(FILTERS_LABEL_CLASS);\n            filtersPanel.appendChild(titlePanel);\n\n            this.treeFiltersRenderer.host.classList.add(FILTERS_LIST_PANEL_CLASS);\n            filtersPanel.appendChild(this.treeFiltersRenderer.host);\n        }\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        Widget.attach(this.treePanel, this.contentNode);\n        this.toDisposeOnDetach.push(Disposable.create(() => {\n            Widget.detach(this.treePanel);\n            this.locationListRenderer.dispose();\n            if (this.treeFiltersRenderer) {\n                this.treeFiltersRenderer.dispose();\n            }\n        }));\n\n        this.appendFiltersPanel();\n\n        this.appendCloseButton('Cancel');\n        this.appendAcceptButton(this.getAcceptButtonLabel());\n\n        this.addKeyListener(this.back, Key.ENTER, () => {\n            this.addTransformEffectToIcon(this.back);\n            this.model.navigateBackward();\n        }, 'click');\n\n        this.addKeyListener(this.forward, Key.ENTER, () => {\n            this.addTransformEffectToIcon(this.forward);\n            this.model.navigateForward();\n        }, 'click');\n        this.addKeyListener(this.home, Key.ENTER, () => {\n            this.addTransformEffectToIcon(this.home);\n            if (this.model.initialLocation) {\n                this.model.location = this.model.initialLocation;\n            }\n        }, 'click');\n        this.addKeyListener(this.up, Key.ENTER, () => {\n            this.addTransformEffectToIcon(this.up);\n            if (this.model.location) {\n                this.model.location = this.model.location.parent;\n            }\n        }, 'click');\n        super.onAfterAttach(msg);\n    }\n\n    protected addTransformEffectToIcon(element: HTMLSpanElement): void {\n        const icon = element.getElementsByTagName('i')[0];\n        icon.classList.add('active');\n        setTimeout(() => icon.classList.remove('active'), TOOLBAR_ITEM_TRANSFORM_TIMEOUT);\n    }\n\n    protected abstract getAcceptButtonLabel(): string;\n\n    protected onActivateRequest(msg: Message): void {\n        this.widget.activate();\n    }\n\n}\n\n@injectable()\nexport class OpenFileDialog extends FileDialog<MaybeArray<FileStatNode>> {\n\n    constructor(@inject(OpenFileDialogProps) readonly props: OpenFileDialogProps) {\n        super(props);\n    }\n\n    @postConstruct()\n    init(): void {\n        super.init();\n        const { props } = this;\n        if (props.canSelectFiles !== undefined) {\n            this.widget.disableFileSelection = !props.canSelectFiles;\n        }\n    }\n\n    protected getAcceptButtonLabel(): string {\n        return this.props.openLabel ? this.props.openLabel : 'Open';\n    }\n\n    protected isValid(value: MaybeArray<FileStatNode>): string {\n        if (value && !this.props.canSelectMany && value instanceof Array) {\n            return 'You can select only one item';\n        }\n        return '';\n    }\n\n    get value(): MaybeArray<FileStatNode> {\n        if (this.widget.model.selectedFileStatNodes.length === 1) {\n            return this.widget.model.selectedFileStatNodes[0];\n        } else {\n            return this.widget.model.selectedFileStatNodes;\n        }\n    }\n\n    protected async accept(): Promise<void> {\n        const selection = this.value;\n        if (!this.props.canSelectFolders\n            && !Array.isArray(selection)\n            && selection.fileStat.isDirectory) {\n            this.widget.model.openNode(selection);\n            return;\n        }\n        super.accept();\n    }\n}\n\n@injectable()\nexport class SaveFileDialog extends FileDialog<URI | undefined> {\n\n    protected fileNameField: HTMLInputElement | undefined;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    constructor(@inject(SaveFileDialogProps) readonly props: SaveFileDialogProps) {\n        super(props);\n    }\n\n    @postConstruct()\n    init(): void {\n        super.init();\n        const { widget } = this;\n        widget.addClass(SAVE_DIALOG_CLASS);\n    }\n\n    protected getAcceptButtonLabel(): string {\n        return this.props.saveLabel ? this.props.saveLabel : 'Save';\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        // Update file name field when changing a selection\n        if (this.fileNameField) {\n            if (this.widget.model.selectedFileStatNodes.length === 1) {\n                const node = this.widget.model.selectedFileStatNodes[0];\n                if (!node.fileStat.isDirectory) {\n                    this.fileNameField.value = this.labelProvider.getName(node);\n                }\n            } else {\n                this.fileNameField.value = '';\n            }\n        }\n\n        // Continue updating the dialog\n        super.onUpdateRequest(msg);\n    }\n\n    protected isValid(value: URI | undefined): string | boolean {\n        if (this.fileNameField && this.fileNameField.value) {\n            return '';\n        }\n        return false;\n    }\n\n    get value(): URI | undefined {\n        if (this.fileNameField && this.widget.model.selectedFileStatNodes.length === 1) {\n            const node = this.widget.model.selectedFileStatNodes[0];\n\n            if (node.fileStat.isDirectory) {\n                return node.uri.resolve(this.fileNameField.value);\n            }\n\n            return node.uri.parent.resolve(this.fileNameField.value);\n        }\n\n        return undefined;\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n\n        const fileNamePanel = document.createElement('div');\n        fileNamePanel.classList.add(FILENAME_PANEL_CLASS);\n        this.contentNode.appendChild(fileNamePanel);\n\n        const titlePanel = document.createElement('div');\n        titlePanel.innerHTML = 'Name:';\n        titlePanel.classList.add(FILENAME_LABEL_CLASS);\n        fileNamePanel.appendChild(titlePanel);\n\n        this.fileNameField = document.createElement('input');\n        this.fileNameField.type = 'text';\n        this.fileNameField.classList.add('theia-input', FILENAME_TEXTFIELD_CLASS);\n        this.fileNameField.value = this.props.inputValue || '';\n        fileNamePanel.appendChild(this.fileNameField);\n\n        this.fileNameField.onkeyup = () => this.validate();\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { createTreeContainer, Tree, TreeImpl, TreeModel, TreeModelImpl, TreeWidget } from '@theia/core/lib/browser';\nimport { FileTree } from './file-tree';\nimport { FileTreeModel } from './file-tree-model';\nimport { FileTreeWidget } from './file-tree-widget';\n\nexport function createFileTreeContainer(parent: interfaces.Container): Container {\n    const child = createTreeContainer(parent);\n\n    child.unbind(TreeImpl);\n    child.bind(FileTree).toSelf();\n    child.rebind(Tree).toService(FileTree);\n\n    child.unbind(TreeModelImpl);\n    child.bind(FileTreeModel).toSelf();\n    child.rebind(TreeModel).toService(FileTreeModel);\n\n    child.unbind(TreeWidget);\n    child.bind(FileTreeWidget).toSelf();\n\n    return child;\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { CompositeTreeNode, TreeModelImpl, TreeNode, ConfirmDialog } from '@theia/core/lib/browser';\nimport { FileStatNode, DirNode, FileNode } from './file-tree';\nimport { LocationService } from '../location';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { FileService } from '../file-service';\nimport { FileOperationError, FileOperationResult, FileChangesEvent, FileChangeType, FileChange, FileOperation, FileOperationEvent } from '../../common/files';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { FileSystemUtils } from '../../common';\n\n@injectable()\nexport class FileTreeModel extends TreeModelImpl implements LocationService {\n\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n\n    @inject(FileService)\n    protected readonly fileService: FileService;\n\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n\n    @inject(EnvVariablesServer)\n    protected readonly environments: EnvVariablesServer;\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.toDispose.push(this.fileService.onDidFilesChange(changes => this.onFilesChanged(changes)));\n        this.toDispose.push(this.fileService.onDidRunOperation(event => this.onDidMove(event)));\n    }\n\n    get location(): URI | undefined {\n        const root = this.root;\n        if (FileStatNode.is(root)) {\n            return root.uri;\n        }\n        return undefined;\n    }\n\n    set location(uri: URI | undefined) {\n        if (uri) {\n            this.fileService.resolve(uri).then(fileStat => {\n                if (fileStat) {\n                    const node = DirNode.createRoot(fileStat);\n                    this.navigateTo(node);\n                }\n            }).catch(() => {\n                // no-op, allow failures for file dialog text input\n            });\n        } else {\n            this.navigateTo(undefined);\n        }\n    }\n\n    async drives(): Promise<URI[]> {\n        try {\n            const drives = await this.environments.getDrives();\n            return drives.map(uri => new URI(uri));\n        } catch (e) {\n            this.logger.error('Error when loading drives.', e);\n            return [];\n        }\n    }\n\n    get selectedFileStatNodes(): Readonly<FileStatNode>[] {\n        return this.selectedNodes.filter(FileStatNode.is);\n    }\n\n    *getNodesByUri(uri: URI): IterableIterator<TreeNode> {\n        const node = this.getNode(uri.toString());\n        if (node) {\n            yield node;\n        }\n    }\n\n    /**\n     * to workaround https://github.com/Axosoft/nsfw/issues/42\n     */\n    protected onDidMove(event: FileOperationEvent): void {\n        if (!event.isOperation(FileOperation.MOVE)) {\n            return;\n        }\n        if (event.resource.parent.toString() === event.target.resource.parent.toString()) {\n            // file rename\n            return;\n        }\n        this.refreshAffectedNodes([\n            event.resource,\n            event.target.resource\n        ]);\n    }\n\n    protected onFilesChanged(changes: FileChangesEvent): void {\n        if (!this.refreshAffectedNodes(this.getAffectedUris(changes)) && this.isRootAffected(changes)) {\n            this.refresh();\n        }\n    }\n\n    protected isRootAffected(changes: FileChangesEvent): boolean {\n        const root = this.root;\n        if (FileStatNode.is(root)) {\n            return changes.contains(root.uri, FileChangeType.ADDED) || changes.contains(root.uri, FileChangeType.UPDATED);\n        }\n        return false;\n    }\n\n    protected getAffectedUris(changes: FileChangesEvent): URI[] {\n        return changes.changes.filter(change => !this.isFileContentChanged(change)).map(change => change.resource);\n    }\n\n    protected isFileContentChanged(change: FileChange): boolean {\n        return change.type === FileChangeType.UPDATED && FileNode.is(this.getNodesByUri(change.resource).next().value);\n    }\n\n    protected refreshAffectedNodes(uris: URI[]): boolean {\n        const nodes = this.getAffectedNodes(uris);\n        for (const node of nodes.values()) {\n            this.refresh(node);\n        }\n        return nodes.size !== 0;\n    }\n\n    protected getAffectedNodes(uris: URI[]): Map<string, CompositeTreeNode> {\n        const nodes = new Map<string, CompositeTreeNode>();\n        for (const uri of uris) {\n            for (const node of this.getNodesByUri(uri.parent)) {\n                if (DirNode.is(node) && node.expanded) {\n                    nodes.set(node.id, node);\n                }\n            }\n        }\n        return nodes;\n    }\n\n    async copy(source: URI, target: Readonly<FileStatNode>): Promise<URI> {\n        let targetUri = target.uri.resolve(source.path.base);\n        try {\n            if (source.path.toString() === target.uri.path.toString()) {\n                const parent = await this.fileService.resolve(source.parent);\n                const name = source.path.name + '_copy';\n                targetUri = FileSystemUtils.generateUniqueResourceURI(source.parent, parent, name, source.path.ext);\n            }\n            await this.fileService.copy(source, targetUri);\n        } catch (e) {\n            this.messageService.error(e.message);\n        }\n        return targetUri;\n    }\n\n    /**\n     * Move the given source file or directory to the given target directory.\n     */\n    async move(source: TreeNode, target: TreeNode): Promise<URI | undefined> {\n        if (DirNode.is(target) && FileStatNode.is(source)) {\n            const name = source.fileStat.name;\n            const targetUri = target.uri.resolve(name);\n            try {\n                await this.fileService.move(source.uri, targetUri);\n                return targetUri;\n            } catch (e) {\n                if (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_MOVE_CONFLICT) {\n                    const fileName = this.labelProvider.getName(source);\n                    if (await this.shouldReplace(fileName)) {\n                        try {\n                            await this.fileService.move(source.uri, targetUri, { overwrite: true });\n                            return targetUri;\n                        } catch (e2) {\n                            this.messageService.error(e2.message);\n                        }\n                    }\n                } else {\n                    this.messageService.error(e.message);\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected async shouldReplace(fileName: string): Promise<boolean> {\n        const dialog = new ConfirmDialog({\n            title: 'Replace file',\n            msg: `File '${fileName}' already exists in the destination folder. Do you want to replace it?`,\n            ok: 'Yes',\n            cancel: 'No'\n        });\n        return !!await dialog.open();\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from '@theia/core/shared/react';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { DisposableCollection, Disposable } from '@theia/core/lib/common/disposable';\nimport URI from '@theia/core/lib/common/uri';\nimport { UriSelection } from '@theia/core/lib/common/selection';\nimport { isCancelled } from '@theia/core/lib/common/cancellation';\nimport { ContextMenuRenderer, NodeProps, TreeProps, TreeNode, CompositeTreeNode, TreeViewWelcomeWidget } from '@theia/core/lib/browser';\nimport { FileUploadService } from '../file-upload-service';\nimport { DirNode, FileStatNode, FileStatNodeData } from './file-tree';\nimport { FileTreeModel } from './file-tree-model';\nimport { IconThemeService } from '@theia/core/lib/browser/icon-theme-service';\nimport { FileStat, FileType } from '../../common/files';\n\nexport const FILE_TREE_CLASS = 'theia-FileTree';\nexport const FILE_STAT_NODE_CLASS = 'theia-FileStatNode';\nexport const DIR_NODE_CLASS = 'theia-DirNode';\nexport const FILE_STAT_ICON_CLASS = 'theia-FileStatIcon';\n\n@injectable()\nexport class FileTreeWidget extends TreeViewWelcomeWidget {\n\n    protected readonly toCancelNodeExpansion = new DisposableCollection();\n\n    @inject(FileUploadService)\n    protected readonly uploadService: FileUploadService;\n\n    @inject(IconThemeService)\n    protected readonly iconThemeService: IconThemeService;\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(FileTreeModel) readonly model: FileTreeModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\n    ) {\n        super(props, model, contextMenuRenderer);\n        this.addClass(FILE_TREE_CLASS);\n        this.toDispose.push(this.toCancelNodeExpansion);\n    }\n\n    protected createNodeClassNames(node: TreeNode, props: NodeProps): string[] {\n        const classNames = super.createNodeClassNames(node, props);\n        if (FileStatNode.is(node)) {\n            classNames.push(FILE_STAT_NODE_CLASS);\n        }\n        if (DirNode.is(node)) {\n            classNames.push(DIR_NODE_CLASS);\n        }\n        return classNames;\n    }\n\n    protected renderIcon(node: TreeNode, props: NodeProps): React.ReactNode {\n        const icon = this.toNodeIcon(node);\n        if (icon) {\n            return <div className={icon + ' file-icon'}></div>;\n        }\n        // eslint-disable-next-line no-null/no-null\n        return null;\n    }\n\n    protected createContainerAttributes(): React.HTMLAttributes<HTMLElement> {\n        const attrs = super.createContainerAttributes();\n        return {\n            ...attrs,\n            onDragEnter: event => this.handleDragEnterEvent(this.model.root, event),\n            onDragOver: event => this.handleDragOverEvent(this.model.root, event),\n            onDragLeave: event => this.handleDragLeaveEvent(this.model.root, event),\n            onDrop: event => this.handleDropEvent(this.model.root, event)\n        };\n    }\n\n    protected createNodeAttributes(node: TreeNode, props: NodeProps): React.Attributes & React.HTMLAttributes<HTMLElement> {\n        const elementAttrs = super.createNodeAttributes(node, props);\n        return {\n            ...elementAttrs,\n            draggable: FileStatNode.is(node),\n            onDragStart: event => this.handleDragStartEvent(node, event),\n            onDragEnter: event => this.handleDragEnterEvent(node, event),\n            onDragOver: event => this.handleDragOverEvent(node, event),\n            onDragLeave: event => this.handleDragLeaveEvent(node, event),\n            onDrop: event => this.handleDropEvent(node, event),\n            title: this.getNodeTooltip(node)\n        };\n    }\n\n    protected getNodeTooltip(node: TreeNode): string | undefined {\n        const uri = UriSelection.getUri(node);\n        return uri ? uri.path.toString() : undefined;\n    }\n\n    protected handleDragStartEvent(node: TreeNode, event: React.DragEvent): void {\n        event.stopPropagation();\n        let selectedNodes;\n        if (this.model.selectedNodes.find(selected => TreeNode.equals(selected, node))) {\n            selectedNodes = [...this.model.selectedNodes];\n        } else {\n            selectedNodes = [node];\n        }\n        this.setSelectedTreeNodesAsData(event.dataTransfer, node, selectedNodes);\n        if (event.dataTransfer) {\n            let label: string;\n            if (selectedNodes.length === 1) {\n                label = this.toNodeName(node);\n            } else {\n                label = String(selectedNodes.length);\n            }\n            const dragImage = document.createElement('div');\n            dragImage.className = 'theia-file-tree-drag-image';\n            dragImage.textContent = label;\n            document.body.appendChild(dragImage);\n            event.dataTransfer.setDragImage(dragImage, -10, -10);\n            setTimeout(() => document.body.removeChild(dragImage), 0);\n        }\n    }\n\n    protected handleDragEnterEvent(node: TreeNode | undefined, event: React.DragEvent): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.toCancelNodeExpansion.dispose();\n        const containing = DirNode.getContainingDir(node);\n        if (!!containing && !containing.selected) {\n            this.model.selectNode(containing);\n        }\n    }\n\n    protected handleDragOverEvent(node: TreeNode | undefined, event: React.DragEvent): void {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.toCancelNodeExpansion.disposed) {\n            return;\n        }\n        const timer = setTimeout(() => {\n            const containing = DirNode.getContainingDir(node);\n            if (!!containing && !containing.expanded) {\n                this.model.expandNode(containing);\n            }\n        }, 500);\n        this.toCancelNodeExpansion.push(Disposable.create(() => clearTimeout(timer)));\n    }\n\n    protected handleDragLeaveEvent(node: TreeNode | undefined, event: React.DragEvent): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.toCancelNodeExpansion.dispose();\n    }\n\n    protected async handleDropEvent(node: TreeNode | undefined, event: React.DragEvent): Promise<void> {\n        try {\n            event.preventDefault();\n            event.stopPropagation();\n            event.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.\n            const containing = this.getDropTargetDirNode(node);\n            if (containing) {\n                const resources = this.getSelectedTreeNodesFromData(event.dataTransfer);\n                if (resources.length > 0) {\n                    for (const treeNode of resources) {\n                        await this.model.move(treeNode, containing);\n                    }\n                } else {\n                    await this.uploadService.upload(containing.uri, { source: event.dataTransfer });\n                }\n            }\n        } catch (e) {\n            if (!isCancelled(e)) {\n                console.error(e);\n            }\n        }\n    }\n\n    protected getDropTargetDirNode(node: TreeNode | undefined): DirNode | undefined {\n        if (CompositeTreeNode.is(node) && node.id === 'WorkspaceNodeId') {\n            if (node.children.length === 1) {\n                return DirNode.getContainingDir(node.children[0]);\n            } else if (node.children.length > 1) {\n                // move file to the last root folder in multi-root scenario\n                return DirNode.getContainingDir(node.children[node.children.length - 1]);\n            }\n        }\n        return DirNode.getContainingDir(node);\n    }\n\n    protected setTreeNodeAsData(data: DataTransfer, node: TreeNode): void {\n        data.setData('tree-node', node.id);\n    }\n\n    protected setSelectedTreeNodesAsData(data: DataTransfer, sourceNode: TreeNode, relatedNodes: TreeNode[]): void {\n        this.setTreeNodeAsData(data, sourceNode);\n        data.setData('selected-tree-nodes', JSON.stringify(relatedNodes.map(node => node.id)));\n    }\n\n    protected getTreeNodeFromData(data: DataTransfer): TreeNode | undefined {\n        const id = data.getData('tree-node');\n        return this.model.getNode(id);\n    }\n    protected getSelectedTreeNodesFromData(data: DataTransfer): TreeNode[] {\n        const resources = data.getData('selected-tree-nodes');\n        if (!resources) {\n            return [];\n        }\n        const ids: string[] = JSON.parse(resources);\n        return ids.map(id => this.model.getNode(id)).filter(node => node !== undefined) as TreeNode[];\n    }\n\n    protected get hidesExplorerArrows(): boolean {\n        const theme = this.iconThemeService.getDefinition(this.iconThemeService.current);\n        return !!theme && !!theme.hidesExplorerArrows;\n    }\n\n    protected renderExpansionToggle(node: TreeNode, props: NodeProps): React.ReactNode {\n        if (this.hidesExplorerArrows) {\n            // eslint-disable-next-line no-null/no-null\n            return null;\n        }\n        return super.renderExpansionToggle(node, props);\n    }\n\n    protected getPaddingLeft(node: TreeNode, props: NodeProps): number {\n        if (this.hidesExplorerArrows) {\n            // additional left padding instead of top-level expansion toggle\n            return super.getPaddingLeft(node, props) + this.props.leftPadding;\n        }\n        return super.getPaddingLeft(node, props);\n    }\n\n    protected needsExpansionTogglePadding(node: TreeNode): boolean {\n        const theme = this.iconThemeService.getDefinition(this.iconThemeService.current);\n        if (theme && (theme.hidesExplorerArrows || (theme.hasFileIcons && !theme.hasFolderIcons))) {\n            return false;\n        }\n        return super.needsExpansionTogglePadding(node);\n    }\n\n    protected deflateForStorage(node: TreeNode): object {\n        const deflated = super.deflateForStorage(node);\n        if (FileStatNode.is(node) && FileStatNodeData.is(deflated)) {\n            deflated.uri = node.uri.toString();\n            delete deflated['fileStat'];\n            deflated.stat = FileStat.toStat(node.fileStat);\n        }\n        return deflated;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected inflateFromStorage(node: any, parent?: TreeNode): TreeNode {\n        if (FileStatNodeData.is(node)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fileStatNode: FileStatNode = node as any;\n            const resource = new URI(node.uri);\n            fileStatNode.uri = resource;\n            let stat: typeof node['stat'];\n            // in order to support deprecated FileStat\n            if (node.fileStat) {\n                stat = {\n                    type: node.fileStat.isDirectory ? FileType.Directory : FileType.File,\n                    mtime: node.fileStat.lastModification,\n                    size: node.fileStat.size\n                };\n                delete node['fileStat'];\n            } else if (node.stat) {\n                stat = node.stat;\n                delete node['stat'];\n            }\n            if (stat) {\n                fileStatNode.fileStat = FileStat.fromStat(resource, stat);\n            }\n        }\n        const inflated = super.inflateFromStorage(node, parent);\n        if (DirNode.is(inflated)) {\n            inflated.fileStat.children = [];\n            for (const child of inflated.children) {\n                if (FileStatNode.is(child)) {\n                    inflated.fileStat.children.push(child.fileStat);\n                }\n            }\n        }\n        return inflated;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './file-tree';\nexport * from './file-tree-model';\nexport * from './file-tree-widget';\nexport * from './file-tree-container';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './location-service';\nexport * from './location-renderer';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\nimport { LocationService } from './location-service';\nimport * as React from '@theia/core/shared/react';\nimport * as ReactDOM from '@theia/core/shared/react-dom';\nimport { FileService } from '../file-service';\nimport { DisposableCollection, Emitter } from '@theia/core/lib/common';\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { FileDialogModel } from '../file-dialog/file-dialog-model';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport { ReactRenderer } from '@theia/core/lib/browser/widgets/react-renderer';\nimport { Path } from '@theia/core/lib/common';\n\ninterface AutoSuggestDataEvent {\n    parent: string;\n    children: string[];\n}\n\nclass ResolvedDirectoryCache {\n    protected pendingResolvedDirectories = new Map<string, Promise<void>>();\n    protected cachedDirectories = new Map<string, string[]>();\n\n    protected directoryResolvedEmitter = new Emitter<AutoSuggestDataEvent>();\n    readonly onDirectoryDidResolve = this.directoryResolvedEmitter.event;\n\n    constructor(protected readonly fileService: FileService) { }\n\n    tryResolveChildDirectories(inputAsURI: URI): string[] | undefined {\n        const parentDirectory = inputAsURI.path.dir.toString();\n        const cachedDirectories = this.cachedDirectories.get(parentDirectory);\n        const pendingDirectories = this.pendingResolvedDirectories.get(parentDirectory);\n        if (cachedDirectories) {\n            return cachedDirectories;\n        } else if (!pendingDirectories) {\n            this.pendingResolvedDirectories.set(parentDirectory, this.createResolutionPromise(parentDirectory));\n        }\n        return undefined;\n    }\n\n    protected async createResolutionPromise(directoryToResolve: string): Promise<void> {\n        return this.fileService.resolve(new URI(directoryToResolve)).then(({ children }) => {\n            if (children) {\n                const childDirectories = children.filter(child => child.isDirectory)\n                    .map(directory => `${directory.resource.path}/`);\n                this.cachedDirectories.set(directoryToResolve, childDirectories);\n                this.directoryResolvedEmitter.fire({ parent: directoryToResolve, children: childDirectories });\n            }\n        }).catch(e => {\n            // no-op\n        });\n    }\n}\n\nexport const LocationListRendererFactory = Symbol('LocationListRendererFactory');\nexport interface LocationListRendererFactory {\n    (options: LocationListRendererOptions): LocationListRenderer;\n}\n\nexport const LocationListRendererOptions = Symbol('LocationListRendererOptions');\nexport interface LocationListRendererOptions {\n    model: FileDialogModel;\n    host?: HTMLElement;\n}\n\n@injectable()\nexport class LocationListRenderer extends ReactRenderer {\n\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(EnvVariablesServer) protected readonly variablesServer: EnvVariablesServer;\n\n    protected directoryCache: ResolvedDirectoryCache;\n    protected service: LocationService;\n    protected toDisposeOnNewCache = new DisposableCollection();\n    protected _drives: URI[] | undefined;\n    protected _doShowTextInput = false;\n    protected homeDir: string;\n\n    get doShowTextInput(): boolean {\n        return this._doShowTextInput;\n    }\n    set doShowTextInput(doShow: boolean) {\n        this._doShowTextInput = doShow;\n        if (doShow) {\n            this.initResolveDirectoryCache();\n        }\n    }\n    protected lastUniqueTextInputLocation: URI | undefined;\n    protected previousAutocompleteMatch: string;\n    protected doAttemptAutocomplete = true;\n\n    constructor(\n        @inject(LocationListRendererOptions) readonly options: LocationListRendererOptions\n    ) {\n        super(options.host);\n        this.service = options.model;\n        this.doLoadDrives();\n    }\n\n    @postConstruct()\n    async init(): Promise<void> {\n        const homeDirWithPrefix = await this.variablesServer.getHomeDirUri();\n        this.homeDir = (new URI(homeDirWithPrefix)).path.toString();\n    }\n\n    render(): void {\n        ReactDOM.render(this.doRender(), this.host, this.doAfterRender);\n    }\n\n    protected initResolveDirectoryCache(): void {\n        this.toDisposeOnNewCache.dispose();\n        this.directoryCache = new ResolvedDirectoryCache(this.fileService);\n        this.toDisposeOnNewCache.push(this.directoryCache.onDirectoryDidResolve(({ parent, children }) => {\n            if (this.locationTextInput) {\n                const expandedPath = Path.untildify(this.locationTextInput.value, this.homeDir);\n                const inputParent = (new URI(expandedPath)).path.dir.toString();\n                if (inputParent === parent) {\n                    this.tryRenderFirstMatch(this.locationTextInput, children);\n                }\n            }\n        }));\n    }\n\n    protected doAfterRender = (): void => {\n        const locationList = this.locationList;\n        const locationListTextInput = this.locationTextInput;\n        if (locationList) {\n            const currentLocation = this.service.location;\n            locationList.value = currentLocation ? currentLocation.toString() : '';\n        } else if (locationListTextInput) {\n            locationListTextInput.focus();\n        }\n    };\n\n    protected readonly handleLocationChanged = (e: React.ChangeEvent<HTMLSelectElement>) => this.onLocationChanged(e);\n    protected readonly handleTextInputOnChange = (e: React.ChangeEvent<HTMLInputElement>) => this.trySuggestDirectory(e);\n    protected readonly handleTextInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => this.handleControlKeys(e);\n    protected readonly handleIconKeyDown = (e: React.KeyboardEvent<HTMLSpanElement>) => this.toggleInputOnKeyDown(e);\n    protected readonly handleTextInputOnBlur = () => this.toggleToSelectInput();\n    protected readonly handleTextInputMouseDown = (e: React.MouseEvent<HTMLSpanElement>) => this.toggleToTextInputOnMouseDown(e);\n\n    protected doRender(): React.ReactElement {\n        return (\n            <>\n                {this.renderInputIcon()}\n                {this.doShowTextInput\n                    ? this.renderTextInput()\n                    : this.renderSelectInput()\n                }\n            </>\n        );\n    }\n\n    protected renderInputIcon(): React.ReactNode {\n        return (\n            <span\n                // onMouseDown is used since it will fire before 'onBlur'. This prevents\n                // a re-render when textinput is in focus and user clicks toggle icon\n                onMouseDown={this.handleTextInputMouseDown}\n                onKeyDown={this.handleIconKeyDown}\n                className={LocationListRenderer.Styles.LOCATION_INPUT_TOGGLE_CLASS}\n                tabIndex={0}\n                id={`${this.doShowTextInput ? 'text-input' : 'select-input'}`}\n                title={this.doShowTextInput\n                    ? LocationListRenderer.Tooltips.TOGGLE_SELECT_INPUT\n                    : LocationListRenderer.Tooltips.TOGGLE_TEXT_INPUT}\n            >\n                <i className={this.doShowTextInput ? 'fa fa-folder-open' : 'fa fa-edit'} />\n            </span>\n        );\n    }\n\n    protected renderTextInput(): React.ReactNode {\n        return (\n            <input className={'theia-select ' + LocationListRenderer.Styles.LOCATION_TEXT_INPUT_CLASS}\n                defaultValue={this.service.location?.path.toString()}\n                onBlur={this.handleTextInputOnBlur}\n                onChange={this.handleTextInputOnChange}\n                onKeyDown={this.handleTextInputKeyDown}\n                spellCheck={false}\n            />\n        );\n    }\n\n    protected renderSelectInput(): React.ReactNode {\n        const options = this.collectLocations().map(value => this.renderLocation(value));\n        return (\n            <select className={`theia-select ${LocationListRenderer.Styles.LOCATION_LIST_CLASS}`}\n                onChange={this.handleLocationChanged}>\n                {...options}\n            </select>\n        );\n    }\n\n    protected toggleInputOnKeyDown(e: React.KeyboardEvent<HTMLSpanElement>): void {\n        if (e.key === 'Enter') {\n            this.doShowTextInput = true;\n            this.render();\n        }\n    }\n\n    protected toggleToTextInputOnMouseDown(e: React.MouseEvent<HTMLSpanElement>): void {\n        if (e.currentTarget.id === 'select-input') {\n            e.preventDefault();\n            this.doShowTextInput = true;\n            this.render();\n        }\n    }\n\n    protected toggleToSelectInput(): void {\n        if (this.doShowTextInput) {\n            this.doShowTextInput = false;\n            this.render();\n        }\n    }\n\n    /**\n     * Collects the available locations based on the currently selected, and appends the available drives to it.\n     */\n    protected collectLocations(): LocationListRenderer.Location[] {\n        const location = this.service.location;\n        const locations: LocationListRenderer.Location[] = (!!location ? location.allLocations : []).map(uri => ({ uri }));\n        if (this._drives) {\n            const drives = this._drives.map(uri => ({ uri, isDrive: true }));\n            // `URI.allLocations` returns with the URI without the trailing slash unlike `FileUri.create(fsPath)`.\n            // to be able to compare file:///path/to/resource with file:///path/to/resource/.\n            const toUriString = (uri: URI) => {\n                const toString = uri.toString();\n                return toString.endsWith('/') ? toString.slice(0, -1) : toString;\n            };\n            drives.forEach(drive => {\n                const index = locations.findIndex(loc => toUriString(loc.uri) === toUriString(drive.uri));\n                // Ignore drives which are already discovered as a location based on the current model root URI.\n                if (index === -1) {\n                    // Make sure, it does not have the trailing slash.\n                    locations.push({ uri: new URI(toUriString(drive.uri)), isDrive: true });\n                } else {\n                    // This is necessary for Windows to be able to show `/e:/` as a drive and `c:` as \"non-drive\" in the same way.\n                    // `URI.path.toString()` Vs. `URI.displayName` behaves a bit differently on Windows.\n                    // https://github.com/eclipse-theia/theia/pull/3038#issuecomment-425944189\n                    locations[index].isDrive = true;\n                }\n            });\n        }\n        this.doLoadDrives();\n        return locations;\n    }\n\n    /**\n     * Asynchronously loads the drives (if not yet available) and triggers a UI update on success with the new values.\n     */\n    protected doLoadDrives(): void {\n        if (!this._drives) {\n            this.service.drives().then(drives => {\n                // If the `drives` are empty, something already went wrong.\n                if (drives.length > 0) {\n                    this._drives = drives;\n                    this.render();\n                }\n            });\n        }\n    }\n\n    protected renderLocation(location: LocationListRenderer.Location): React.ReactNode {\n        const { uri, isDrive } = location;\n        const value = uri.toString();\n        return <option value={value} key={uri.toString()}>{isDrive ? uri.path.toString() : uri.displayName}</option>;\n    }\n\n    protected onLocationChanged(e: React.ChangeEvent<HTMLSelectElement>): void {\n        const locationList = this.locationList;\n        if (locationList) {\n            const value = locationList.value;\n            const uri = new URI(value);\n            this.trySetNewLocation(uri);\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n\n    protected trySetNewLocation(newLocation: URI): void {\n        if (this.lastUniqueTextInputLocation === undefined) {\n            this.lastUniqueTextInputLocation = this.service.location;\n        }\n        // prevent consecutive repeated locations from being added to location history\n        if (this.lastUniqueTextInputLocation?.path.toString() !== newLocation.path.toString()) {\n            this.lastUniqueTextInputLocation = newLocation;\n            this.service.location = newLocation;\n        }\n    }\n\n    protected trySuggestDirectory(e: React.ChangeEvent<HTMLInputElement>): void {\n        if (this.doAttemptAutocomplete) {\n            const inputElement = e.currentTarget;\n            const { value } = inputElement;\n            if ((value.startsWith('/') || value.startsWith('~/')) && value.slice(-1) !== '/') {\n                const expandedPath = Path.untildify(value, this.homeDir);\n                const valueAsURI = new URI(expandedPath);\n                const autocompleteDirectories = this.directoryCache.tryResolveChildDirectories(valueAsURI);\n                if (autocompleteDirectories) {\n                    this.tryRenderFirstMatch(inputElement, autocompleteDirectories);\n                }\n            }\n        }\n    }\n\n    protected tryRenderFirstMatch(inputElement: HTMLInputElement, children: string[]): void {\n        const { value, selectionStart } = inputElement;\n        if (this.locationTextInput) {\n            const expandedPath = Path.untildify(value, this.homeDir);\n            const firstMatch = children?.find(child => child.includes(expandedPath));\n            if (firstMatch) {\n                const contractedPath = value.startsWith('~') ? Path.tildify(firstMatch, this.homeDir) : firstMatch;\n                this.locationTextInput.value = contractedPath;\n                this.locationTextInput.selectionStart = selectionStart;\n                this.locationTextInput.selectionEnd = firstMatch.length;\n            }\n        }\n    }\n\n    protected handleControlKeys(e: React.KeyboardEvent<HTMLInputElement>): void {\n        this.doAttemptAutocomplete = e.key !== 'Backspace';\n        if (e.key === 'Enter') {\n            const locationTextInput = this.locationTextInput;\n            if (locationTextInput) {\n                // expand '~' if present and remove extra whitespace and any trailing slashes or periods.\n                const sanitizedInput = locationTextInput.value.trim().replace(/[\\/\\\\.]*$/, '');\n                const untildifiedInput = Path.untildify(sanitizedInput, this.homeDir);\n                const uri = new URI(untildifiedInput);\n                this.trySetNewLocation(uri);\n                this.toggleToSelectInput();\n            }\n        } else if (e.key === 'Escape') {\n            this.toggleToSelectInput();\n        } else if (e.key === 'Tab') {\n            e.preventDefault();\n            const textInput = this.locationTextInput;\n            if (textInput) {\n                textInput.selectionStart = textInput.value.length;\n            }\n        }\n        e.stopPropagation();\n    }\n\n    get locationList(): HTMLSelectElement | undefined {\n        const locationList = this.host.getElementsByClassName(LocationListRenderer.Styles.LOCATION_LIST_CLASS)[0];\n        if (locationList instanceof HTMLSelectElement) {\n            return locationList;\n        }\n        return undefined;\n    }\n\n    get locationTextInput(): HTMLInputElement | undefined {\n        const locationTextInput = this.host.getElementsByClassName(LocationListRenderer.Styles.LOCATION_TEXT_INPUT_CLASS)[0];\n        if (locationTextInput instanceof HTMLInputElement) {\n            return locationTextInput;\n        }\n        return undefined;\n    }\n\n    dispose(): void {\n        super.dispose();\n        this.toDisposeOnNewCache.dispose();\n    }\n}\n\nexport namespace LocationListRenderer {\n\n    export namespace Styles {\n        export const LOCATION_LIST_CLASS = 'theia-LocationList';\n        export const LOCATION_INPUT_TOGGLE_CLASS = 'theia-LocationInputToggle';\n        export const LOCATION_TEXT_INPUT_CLASS = 'theia-LocationTextInput';\n    }\n\n    export namespace Tooltips {\n        export const TOGGLE_TEXT_INPUT = 'Switch to text-based input';\n        export const TOGGLE_SELECT_INPUT = 'Switch to location list';\n    }\n\n    export interface Location {\n        uri: URI;\n        isDrive?: boolean;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\n\nexport interface LocationService {\n    location: URI | undefined;\n    drives(): Promise<URI[]>;\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './filesystem';\nexport * from './filesystem-utils';\n"],"sourceRoot":""}