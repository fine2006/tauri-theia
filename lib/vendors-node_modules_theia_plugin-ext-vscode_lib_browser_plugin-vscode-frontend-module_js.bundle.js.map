{"version":3,"sources":["webpack://tauri-theia/./node_modules/@theia/plugin-ext-vscode/src/browser/plugin-vscode-contribution.ts","webpack://tauri-theia/./node_modules/@theia/plugin-ext-vscode/src/browser/plugin-vscode-frontend-module.ts","webpack://tauri-theia/./node_modules/@theia/plugin-ext-vscode/src/common/plugin-vscode-environment.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,4HAA0D;AAC1D,yKAAiF;AAEjF,+JAAsE;AACtE,kNAA4G;AAG5G;IAAA;IAuBA,CAAC;IArBG,8DAA2B,GAA3B,UAA4B,OAAoB;QAC5C,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,wBAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,wBAAO,CAAC,QAAQ,EAAE,iCAAc,CAAC,MAAM,CAAC,CAAC;IACtE,CAAC;IAES,6CAAU,GAApB,UAAqB,OAAoB,EAAE,IAAY,EAAE,EAAU;QAAnE,iBAcC;QAbG,OAAO,CAAC,gCAAgC,CAAC,eAAK;YAC1C,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,EAAE;gBACvB,KAAK,CAAC,SAAS,CAAC,CAAC;;;;oCACI,qBAAM,OAAO,CAAC,gBAAgB,CAAC,EAAE,CAAC;;gCAA7C,QAAQ,GAAG,SAAkC;gCACnD,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,8DAA4B,CAAC,QAAQ,EAAE;oCACtE,YAAY,EAAE;wCACV,EAAE,EAAE,kBAAQ,IAAI,eAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,EAAvB,CAAuB;wCACvC,IAAI,EAAE,kBAAQ,IAAI,eAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,EAAzB,CAAyB;qCAC9C;iCACJ,CAAC,CAAC,CAAC;;;;qBACP,CAAC,EAAE,CAAC,CAAC;aACT;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IArBQ,wBAAwB;QADpC,sBAAU,EAAE;OACA,wBAAwB,CAuBpC;IAAD,+BAAC;CAAA;AAvBY,4DAAwB;;;;;;;;;;;;;ACvBrC;;;;;;;;;;;;;;kFAckF;;AAElF,4HAA+D;AAC/D,sGAAkD;AAClD,2MAAyF;AACzF,oLAA8E;AAC9E,gLAAwE;AACxE,2JAAqF;AAErF,kBAAe,IAAI,2BAAe,CAAC,cAAI;IACnC,IAAI,CAAC,mDAAuB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC1D,IAAI,CAAC,sEAAgC,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnE,IAAI,CAAC,0BAAmB,CAAC,CAAC,SAAS,CAAC,sEAAgC,CAAC,CAAC;IACtE,IAAI,CAAC,qDAAwB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC3D,IAAI,CAAC,sCAAuB,CAAC,CAAC,SAAS,CAAC,qDAAwB,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC;;;;;;;;;;;;;AC7BH;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,4HAAkE;AAClE,sJAA0E;AAC1E,kHAA6C;AAG7C;IAAA;IAcA,CAAC;IARS,qDAAmB,GAAzB;;;;;;6BACQ,CAAC,IAAI,CAAC,iBAAiB,EAAvB,wBAAuB;6BACD,aAAG;wBAAC,qBAAM,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE;;wBAA7D,SAAS,GAAG,cAAI,aAAG,WAAC,SAAyC,KAAC;wBACpE,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;;4BAE7D,sBAAO,IAAI,CAAC,iBAAiB,EAAC;;;;KACjC;IATD;QADC,kBAAM,CAAC,kCAAkB,CAAC;;iEACyB;IAH3C,uBAAuB;QADnC,sBAAU,EAAE;OACA,uBAAuB,CAcnC;IAAD,8BAAC;CAAA;AAdY,0DAAuB","file":"vendors-node_modules_theia_plugin-ext-vscode_lib_browser_plugin-vscode-frontend-module_js.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { UserStorageUri } from '@theia/userstorage/lib/browser/user-storage-uri';\nimport { FileServiceContribution, FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { Schemes } from '@theia/plugin-ext/lib/common/uri-components';\nimport { DelegatingFileSystemProvider } from '@theia/filesystem/lib/common/delegating-file-system-provider';\n\n@injectable()\nexport class PluginVSCodeContribution implements FileServiceContribution {\n\n    registerFileSystemProviders(service: FileService): void {\n        this.mapSchemas(service, Schemes.vscodeRemote, 'file');\n        this.mapSchemas(service, Schemes.userData, UserStorageUri.scheme);\n    }\n\n    protected mapSchemas(service: FileService, from: string, to: string): void {\n        service.onWillActivateFileSystemProvider(event => {\n            if (event.scheme === from) {\n                event.waitUntil((async () => {\n                    const provider = await service.activateProvider(to);\n                    service.registerProvider(from, new DelegatingFileSystemProvider(provider, {\n                        uriConverter: {\n                            to: resource => resource.withScheme(to),\n                            from: resource => resource.withScheme(from)\n                        }\n                    }));\n                })());\n            }\n        });\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { CommandContribution } from '@theia/core';\nimport { PluginVscodeCommandsContribution } from './plugin-vscode-commands-contribution';\nimport { PluginVSCodeEnvironment } from '../common/plugin-vscode-environment';\nimport { PluginVSCodeContribution } from './plugin-vscode-contribution';\nimport { FileServiceContribution } from '@theia/filesystem/lib/browser/file-service';\n\nexport default new ContainerModule(bind => {\n    bind(PluginVSCodeEnvironment).toSelf().inSingletonScope();\n    bind(PluginVscodeCommandsContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(PluginVscodeCommandsContribution);\n    bind(PluginVSCodeContribution).toSelf().inSingletonScope();\n    bind(FileServiceContribution).toService(PluginVSCodeContribution);\n});\n","/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { EnvVariablesServer } from '@theia/core/lib/common/env-variables';\nimport URI from '@theia/core/lib/common/uri';\n\n@injectable()\nexport class PluginVSCodeEnvironment {\n\n    @inject(EnvVariablesServer)\n    protected readonly environments: EnvVariablesServer;\n\n    protected _extensionsDirUri: URI | undefined;\n    async getExtensionsDirUri(): Promise<URI> {\n        if (!this._extensionsDirUri) {\n            const configDir = new URI(await this.environments.getConfigDirUri());\n            this._extensionsDirUri = configDir.resolve('extensions');\n        }\n        return this._extensionsDirUri;\n    }\n\n}\n"],"sourceRoot":""}