{"version":3,"sources":["webpack://tauri-theia/./node_modules/@theia/core/shared/fuzzy.js","webpack://tauri-theia/./node_modules/@theia/file-search/src/browser/file-search-frontend-module.ts","webpack://tauri-theia/./node_modules/@theia/file-search/src/browser/quick-file-open-contribution.ts","webpack://tauri-theia/./node_modules/@theia/file-search/src/browser/quick-file-open.ts","webpack://tauri-theia/./node_modules/@theia/file-search/src/common/file-search-service.ts"],"names":[],"mappings":"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","file":"vendors-node_modules_theia_file-search_lib_browser_file-search-frontend-module_js.bundle.js","sourcesContent":["module.exports = require('fuzzy');\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule, interfaces } from '@theia/core/shared/inversify';\nimport { CommandContribution } from '@theia/core/lib/common';\nimport { WebSocketConnectionProvider, KeybindingContribution, QuickOpenContribution } from '@theia/core/lib/browser';\nimport { QuickFileOpenFrontendContribution } from './quick-file-open-contribution';\nimport { QuickFileOpenService } from './quick-file-open';\nimport { fileSearchServicePath, FileSearchService } from '../common/file-search-service';\n\nexport default new ContainerModule((bind: interfaces.Bind) => {\n    bind(FileSearchService).toDynamicValue(ctx => {\n        const provider = ctx.container.get(WebSocketConnectionProvider);\n        return provider.createProxy<FileSearchService>(fileSearchServicePath);\n    }).inSingletonScope();\n\n    bind(QuickFileOpenFrontendContribution).toSelf().inSingletonScope();\n    [CommandContribution, KeybindingContribution, QuickOpenContribution].forEach(serviceIdentifier =>\n        bind(serviceIdentifier).toService(QuickFileOpenFrontendContribution)\n    );\n\n    bind(QuickFileOpenService).toSelf().inSingletonScope();\n});\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { QuickFileOpenService, quickFileOpen } from './quick-file-open';\nimport { CommandRegistry, CommandContribution } from '@theia/core/lib/common';\nimport { KeybindingRegistry, KeybindingContribution, QuickOpenContribution, QuickOpenHandlerRegistry } from '@theia/core/lib/browser';\n\n@injectable()\nexport class QuickFileOpenFrontendContribution implements CommandContribution, KeybindingContribution, QuickOpenContribution {\n\n    @inject(QuickFileOpenService)\n    protected readonly quickFileOpenService: QuickFileOpenService;\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(quickFileOpen, {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            execute: (...args: any[]) => {\n                let fileURI: string | undefined;\n                if (args) {\n                    [fileURI] = args;\n                }\n                if (fileURI) {\n                    this.quickFileOpenService.openFile(new URI(fileURI));\n                } else {\n                    this.quickFileOpenService.open();\n                }\n            }\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: quickFileOpen.id,\n            keybinding: 'ctrlcmd+p'\n        });\n    }\n\n    registerQuickOpenHandlers(handlers: QuickOpenHandlerRegistry): void {\n        handlers.registerHandler(this.quickFileOpenService, true);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport {\n    QuickOpenModel, QuickOpenItem, QuickOpenMode, PrefixQuickOpenService,\n    OpenerService, KeybindingRegistry, QuickOpenGroupItem, QuickOpenGroupItemOptions, QuickOpenItemOptions,\n    QuickOpenHandler, QuickOpenOptions\n} from '@theia/core/lib/browser';\nimport { WorkspaceService } from '@theia/workspace/lib/browser/workspace-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSearchService, WHITESPACE_QUERY_SEPARATOR } from '../common/file-search-service';\nimport { CancellationTokenSource } from '@theia/core/lib/common';\nimport { LabelProvider } from '@theia/core/lib/browser/label-provider';\nimport { Command } from '@theia/core/lib/common';\nimport { NavigationLocationService } from '@theia/editor/lib/browser/navigation/navigation-location-service';\nimport * as fuzzy from '@theia/core/shared/fuzzy';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport { FileSystemPreferences } from '@theia/filesystem/lib/browser';\nimport { EditorOpenerOptions, EditorWidget, Position, Range } from '@theia/editor/lib/browser';\n\nexport const quickFileOpen: Command = {\n    id: 'file-search.openFile',\n    category: 'File',\n    label: 'Open File...'\n};\n\nexport interface FilterAndRange {\n    filter: string;\n    range?: Range;\n}\n\n// Supports patterns of <path><#|:><line><#|:|,><col?>\nconst LINE_COLON_PATTERN = /\\s?[#:\\(](?:line )?(\\d*)(?:[#:,](\\d*))?\\)?\\s*$/;\n\n@injectable()\nexport class QuickFileOpenService implements QuickOpenModel, QuickOpenHandler {\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n    @inject(PrefixQuickOpenService)\n    protected readonly quickOpenService: PrefixQuickOpenService;\n    @inject(FileSearchService)\n    protected readonly fileSearchService: FileSearchService;\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n    @inject(NavigationLocationService)\n    protected readonly navigationLocationService: NavigationLocationService;\n    @inject(MessageService)\n    protected readonly messageService: MessageService;\n    @inject(FileSystemPreferences)\n    protected readonly fsPreferences: FileSystemPreferences;\n\n    /**\n     * Whether to hide .gitignored (and other ignored) files.\n     */\n    protected hideIgnoredFiles: boolean = true;\n\n    /**\n     * Whether the dialog is currently open.\n     */\n    protected isOpen: boolean = false;\n\n    protected filterAndRangeDefault = { filter: '', range: undefined };\n\n    /**\n     * Tracks the user file search filter and location range e.g. fileFilter:line:column or fileFilter:line,column\n     */\n    protected filterAndRange: FilterAndRange = this.filterAndRangeDefault;\n\n    /**\n     * The score constants when comparing file search results.\n     */\n    private static readonly Scores = {\n        max: 1000,  // represents the maximum score from fuzzy matching (Infinity).\n        exact: 500, // represents the score assigned to exact matching.\n        partial: 250 // represents the score assigned to partial matching.\n    };\n\n    readonly prefix: string = '...';\n\n    get description(): string {\n        return 'Open File';\n    }\n\n    getModel(): QuickOpenModel {\n        return this;\n    }\n\n    getOptions(): QuickOpenOptions {\n        let placeholder = 'File name to search (append : to go to line).';\n        const keybinding = this.getKeyCommand();\n        if (keybinding) {\n            placeholder += ` (Press ${keybinding} to show/hide ignored files)`;\n        }\n        return {\n            placeholder,\n            fuzzyMatchLabel: {\n                enableSeparateSubstringMatching: true\n            },\n            fuzzyMatchDescription: {\n                enableSeparateSubstringMatching: true\n            },\n            showItemsWithoutHighlight: true,\n            onClose: () => {\n                this.isOpen = false;\n                this.cancelIndicator.cancel();\n            }\n        };\n    }\n\n    isEnabled(): boolean {\n        return this.workspaceService.opened;\n    }\n\n    open(): void {\n        // Triggering the keyboard shortcut while the dialog is open toggles\n        // showing the ignored files.\n        if (this.isOpen) {\n            this.hideIgnoredFiles = !this.hideIgnoredFiles;\n        } else {\n            this.hideIgnoredFiles = true;\n            this.filterAndRange = this.filterAndRangeDefault;\n            this.isOpen = true;\n        }\n\n        this.quickOpenService.open(this.filterAndRange.filter);\n    }\n\n    /**\n     * Get a string (suitable to show to the user) representing the keyboard\n     * shortcut used to open the quick file open menu.\n     */\n    protected getKeyCommand(): string | undefined {\n        const keyCommand = this.keybindingRegistry.getKeybindingsForCommand(quickFileOpen.id);\n        if (keyCommand) {\n            // We only consider the first keybinding.\n            const accel = this.keybindingRegistry.acceleratorFor(keyCommand[0], '+');\n            return accel.join(' ');\n        }\n\n        return undefined;\n    }\n\n    private cancelIndicator = new CancellationTokenSource();\n\n    public async onType(lookFor: string, acceptor: (items: QuickOpenItem[]) => void): Promise<void> {\n        this.cancelIndicator.cancel();\n        this.cancelIndicator = new CancellationTokenSource();\n        const token = this.cancelIndicator.token;\n\n        const roots = this.workspaceService.tryGetRoots();\n\n        this.filterAndRange = this.splitFilterAndRange(lookFor);\n        const fileFilter = this.filterAndRange.filter;\n\n        const alreadyCollected = new Set<string>();\n        const recentlyUsedItems: QuickOpenItem[] = [];\n\n        const locations = [...this.navigationLocationService.locations()].reverse();\n        for (const location of locations) {\n            const uriString = location.uri.toString();\n            if (location.uri.scheme === 'file' && !alreadyCollected.has(uriString) && fuzzy.test(fileFilter, uriString)) {\n                const item = this.toItem(location.uri, { groupLabel: recentlyUsedItems.length === 0 ? 'recently opened' : undefined, showBorder: false });\n                recentlyUsedItems.push(item);\n                alreadyCollected.add(uriString);\n            }\n        }\n        if (fileFilter.length > 0) {\n            const handler = async (results: string[]) => {\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                const fileSearchResultItems: QuickOpenItem[] = [];\n\n                if (results.length <= 0) {\n                    acceptor([this.toNoResultsItem()]);\n                    return;\n                }\n\n                for (const fileUri of results) {\n                    if (!alreadyCollected.has(fileUri)) {\n                        const item = this.toItem(fileUri);\n                        fileSearchResultItems.push(item);\n                        alreadyCollected.add(fileUri);\n                    }\n                }\n\n                // Create a copy of the file search results and sort.\n                const sortedResults = fileSearchResultItems.slice();\n                sortedResults.sort((a, b) => this.compareItems(a, b));\n\n                // Extract the first element, and re-add it to the array with the group label.\n                const first = sortedResults[0];\n                sortedResults.shift();\n                if (first) {\n                    const item = this.toItem(first.getUri()!, { groupLabel: 'file results', showBorder: !!recentlyUsedItems.length });\n                    sortedResults.unshift(item);\n                }\n                // Return the recently used items, followed by the search results.\n                acceptor([...recentlyUsedItems, ...sortedResults]);\n            };\n\n            this.fileSearchService.find(fileFilter, {\n                rootUris: roots.map(r => r.resource.toString()),\n                fuzzyMatch: true,\n                limit: 200,\n                useGitIgnore: this.hideIgnoredFiles,\n                excludePatterns: this.hideIgnoredFiles\n                    ? Object.keys(this.fsPreferences['files.exclude'])\n                    : undefined,\n            }, token).then(handler);\n        } else {\n            if (roots.length !== 0) {\n                acceptor(recentlyUsedItems);\n            }\n        }\n    }\n\n    protected getRunFunction(uri: URI): (mode: QuickOpenMode) => boolean {\n        return (mode: QuickOpenMode) => {\n            if (mode !== QuickOpenMode.OPEN) {\n                return false;\n            }\n            this.openFile(uri);\n            return true;\n        };\n    }\n\n    /**\n     * Compare two `QuickOpenItem`.\n     *\n     * @param a `QuickOpenItem` for comparison.\n     * @param b `QuickOpenItem` for comparison.\n     * @param member the `QuickOpenItem` object member for comparison.\n     */\n    protected compareItems(\n        a: QuickOpenItem<QuickOpenItemOptions>,\n        b: QuickOpenItem<QuickOpenItemOptions>,\n        member: 'getLabel' | 'getUri' = 'getLabel'): number {\n\n        /**\n         * Normalize a given string.\n         *\n         * @param str the raw string value.\n         * @returns the normalized string value.\n         */\n        function normalize(str: string): string {\n            return str.trim().toLowerCase();\n        }\n\n        // Normalize the user query.\n        const query: string = normalize(this.filterAndRange.filter);\n\n        /**\n         * Score a given string.\n         *\n         * @param str the string to score on.\n         * @returns the score.\n         */\n        function score(str: string): number {\n            // Adjust for whitespaces in the query.\n            const querySplit = query.split(WHITESPACE_QUERY_SEPARATOR);\n            const queryJoin = querySplit.join('');\n\n            // Check exact and partial exact matches.\n            let exactMatch = true;\n            let partialMatch = false;\n            querySplit.forEach(part => {\n                const partMatches = str.includes(part);\n                exactMatch = exactMatch && partMatches;\n                partialMatch = partialMatch || partMatches;\n            });\n\n            // Check fuzzy matches.\n            const fuzzyMatch = fuzzy.match(queryJoin, str);\n            let matchScore = 0;\n            // eslint-disable-next-line no-null/no-null\n            if (!!fuzzyMatch && matchScore !== null) {\n                matchScore = (fuzzyMatch.score === Infinity) ? QuickFileOpenService.Scores.max : fuzzyMatch.score;\n            }\n\n            // Prioritize exact matches, then partial exact matches, then fuzzy matches.\n            if (exactMatch) {\n                return matchScore + QuickFileOpenService.Scores.exact;\n            } else if (partialMatch) {\n                return matchScore + QuickFileOpenService.Scores.partial;\n            } else {\n                // eslint-disable-next-line no-null/no-null\n                return (fuzzyMatch === null) ? 0 : matchScore;\n            }\n        }\n\n        // Get the item's member values for comparison.\n        let itemA = a[member]()!;\n        let itemB = b[member]()!;\n\n        // If the `URI` is used as a comparison member, perform the necessary string conversions.\n        if (typeof itemA !== 'string') {\n            itemA = itemA.path.toString();\n        }\n        if (typeof itemB !== 'string') {\n            itemB = itemB.path.toString();\n        }\n\n        // Normalize the item labels.\n        itemA = normalize(itemA);\n        itemB = normalize(itemB);\n\n        // Score the item labels.\n        const scoreA: number = score(itemA);\n        const scoreB: number = score(itemB);\n\n        // If both label scores are identical, perform additional computation.\n        if (scoreA === scoreB) {\n\n            // Favor the label which have the smallest substring index.\n            const indexA: number = itemA.indexOf(query);\n            const indexB: number = itemB.indexOf(query);\n\n            if (indexA === indexB) {\n\n                // Favor the result with the shortest label length.\n                if (itemA.length !== itemB.length) {\n                    return (itemA.length < itemB.length) ? -1 : 1;\n                }\n\n                // Fallback to the alphabetical order.\n                const comparison = itemB.localeCompare(itemA);\n\n                // Compare results by `uri` if necessary.\n                if (comparison === 0) {\n                    return member === 'getUri'\n                        ? 0 // Avoid infinite recursion if we have already compared by `uri`.\n                        : this.compareItems(a, b, 'getUri');\n                }\n\n                return itemB.localeCompare(itemA);\n            }\n\n            return indexA - indexB;\n        }\n\n        return scoreB - scoreA;\n    }\n\n    openFile(uri: URI): void {\n        const options = this.buildOpenerOptions();\n        const closedEditor = this.navigationLocationService.closedEditorsStack.find(editor => editor.uri.path.toString() === uri.path.toString());\n        this.openerService.getOpener(uri, options)\n            .then(opener => opener.open(uri, options))\n            .then(widget => {\n                // Attempt to restore the editor state if it exists, and no selection is explicitly requested.\n                if (widget instanceof EditorWidget && closedEditor && !options.selection) {\n                    widget.editor.restoreViewState(closedEditor.viewState);\n                }\n            })\n            .catch(error => this.messageService.error(error));\n    }\n\n    protected buildOpenerOptions(): EditorOpenerOptions {\n        return { selection: this.filterAndRange.range };\n    }\n\n    private toItem(uriOrString: URI | string, group?: QuickOpenGroupItemOptions): QuickOpenItem<QuickOpenItemOptions> {\n        const uri = uriOrString instanceof URI ? uriOrString : new URI(uriOrString);\n        let description = this.labelProvider.getLongName(uri.parent);\n        if (this.workspaceService.isMultiRootWorkspaceOpened) {\n            const rootUri = this.workspaceService.getWorkspaceRootUri(uri);\n            if (rootUri) {\n                description = `${rootUri.displayName} • ${description}`;\n            }\n        }\n        const icon = this.labelProvider.getIcon(uri);\n        const iconClass = icon === '' ? undefined : icon + ' file-icon';\n        const options: QuickOpenItemOptions = {\n            label: this.labelProvider.getName(uri),\n            iconClass,\n            description,\n            tooltip: this.labelProvider.getLongName(uri),\n            uri: uri,\n            hidden: false,\n            run: this.getRunFunction(uri)\n        };\n        if (group) {\n            return new QuickOpenGroupItem<QuickOpenGroupItemOptions>({ ...options, ...group });\n        } else {\n            return new QuickOpenItem<QuickOpenItemOptions>(options);\n        }\n    }\n\n    private toNoResultsItem(): QuickOpenItem<QuickOpenItemOptions> {\n        const options: QuickOpenItemOptions = {\n            label: 'No matching results',\n            run: () => false\n        };\n        return new QuickOpenItem<QuickOpenItemOptions>(options);\n    }\n\n    /**\n     * Splits the given expression into a structure of search-file-filter and\n     * location-range.\n     *\n     * @param expression patterns of <path><#|:><line><#|:|,><col?>\n     */\n    protected splitFilterAndRange(expression: string): FilterAndRange {\n        let filter = expression;\n        let range = undefined;\n\n        // Find line and column number from the expression using RegExp.\n        const patternMatch = LINE_COLON_PATTERN.exec(expression);\n\n        if (patternMatch) {\n            const line = parseInt(patternMatch[1] ?? '', 10);\n            if (Number.isFinite(line)) {\n                const lineNumber = line > 0 ? line - 1 : 0;\n\n                const column = parseInt(patternMatch[2] ?? '', 10);\n                const startColumn = Number.isFinite(column) && column > 0 ? column - 1 : 0;\n\n                const position = Position.create(lineNumber, startColumn);\n\n                filter = expression.substr(0, patternMatch.index);\n                range = Range.create(position, position);\n            }\n        }\n\n        return { filter, range };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { CancellationToken } from '@theia/core';\n\nexport const fileSearchServicePath = '/services/search';\n\n/**\n * The JSON-RPC file search service interface.\n */\nexport interface FileSearchService {\n\n    /**\n     * finds files by a given search pattern.\n     * @return the matching file uris\n     */\n    find(searchPattern: string, options: FileSearchService.Options, cancellationToken?: CancellationToken): Promise<string[]>;\n\n}\n\nexport const FileSearchService = Symbol('FileSearchService');\nexport namespace FileSearchService {\n    export interface BaseOptions {\n        useGitIgnore?: boolean\n        includePatterns?: string[]\n        excludePatterns?: string[]\n    }\n    export interface RootOptions {\n        [rootUri: string]: BaseOptions\n    }\n    export interface Options extends BaseOptions {\n        rootUris?: string[]\n        rootOptions?: RootOptions\n        fuzzyMatch?: boolean\n        limit?: number\n        /**\n         * when `undefined`, no excludes will apply, when empty array, default excludes will apply\n         *\n         * @deprecated since 0.5.0 use `excludePatterns` instead\n         */\n        defaultIgnorePatterns?: string[]\n    }\n}\n\nexport const WHITESPACE_QUERY_SEPARATOR = /\\s+/;\n"],"sourceRoot":""}