{"version":3,"sources":["webpack://tauri-theia/./node_modules/@theia/core/shared/@phosphor/algorithm.js","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/file-dialog/file-dialog-container.ts","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/file-dialog/index.ts","webpack://tauri-theia/./node_modules/@theia/filesystem/src/browser/index.ts","webpack://tauri-theia/./node_modules/@theia/output/src/browser/output-commands.ts","webpack://tauri-theia/./node_modules/@theia/output/src/browser/output-context-menu.ts","webpack://tauri-theia/./node_modules/@theia/output/src/browser/output-contribution.ts","webpack://tauri-theia/./node_modules/@theia/output/src/browser/output-editor-factory.ts","webpack://tauri-theia/./node_modules/@theia/output/src/browser/output-editor-model-factory.ts","webpack://tauri-theia/./node_modules/@theia/output/src/browser/output-frontend-module.ts","webpack://tauri-theia/./node_modules/@theia/output/src/browser/output-toolbar-contribution.tsx"],"names":[],"mappings":"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","file":"vendors-node_modules_theia_core_shared_phosphor_algorithm_js-node_modules_theia_filesystem_li-2a7364.bundle.js","sourcesContent":["module.exports = require('@phosphor/algorithm');\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces, Container } from '@theia/core/shared/inversify';\nimport { Tree, TreeModel, TreeProps, defaultTreeProps } from '@theia/core/lib/browser';\nimport { createFileTreeContainer, FileTreeModel, FileTreeWidget } from '../file-tree';\nimport { OpenFileDialog, OpenFileDialogProps, SaveFileDialog, SaveFileDialogProps } from './file-dialog';\nimport { FileDialogModel } from './file-dialog-model';\nimport { FileDialogWidget } from './file-dialog-widget';\nimport { FileDialogTree } from './file-dialog-tree';\n\nexport function createFileDialogContainer(parent: interfaces.Container): Container {\n    const child = createFileTreeContainer(parent);\n\n    child.unbind(FileTreeModel);\n    child.bind(FileDialogModel).toSelf();\n    child.rebind(TreeModel).toService(FileDialogModel);\n\n    child.unbind(FileTreeWidget);\n    child.bind(FileDialogWidget).toSelf();\n\n    child.bind(FileDialogTree).toSelf();\n    child.rebind(Tree).toService(FileDialogTree);\n\n    return child;\n}\n\nexport function createOpenFileDialogContainer(parent: interfaces.Container, props: OpenFileDialogProps): Container {\n    const container = createFileDialogContainer(parent);\n    container.rebind(TreeProps).toConstantValue({\n        ...defaultTreeProps,\n        multiSelect: props.canSelectMany,\n        search: true\n    });\n\n    container.bind(OpenFileDialogProps).toConstantValue(props);\n    container.bind(OpenFileDialog).toSelf();\n\n    return container;\n}\n\nexport function createSaveFileDialogContainer(parent: interfaces.Container, props: SaveFileDialogProps): Container {\n    const container = createFileDialogContainer(parent);\n    container.rebind(TreeProps).toConstantValue({\n        ...defaultTreeProps,\n        multiSelect: false,\n        search: true\n    });\n\n    container.bind(SaveFileDialogProps).toConstantValue(props);\n    container.bind(SaveFileDialog).toSelf();\n\n    return container;\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './file-dialog';\nexport * from './file-dialog-container';\nexport * from './file-dialog-tree-filters-renderer';\nexport * from './file-dialog-service';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './location';\nexport * from './file-tree';\nexport * from './file-dialog';\nexport * from './filesystem-preferences';\nexport * from './filesystem-watcher';\nexport * from './file-resource';\n","/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Command } from '@theia/core/lib/common';\n\nexport namespace OutputCommands {\n\n    const OUTPUT_CATEGORY = 'Output';\n\n    /* #region VS Code `OutputChannel` API */\n    // Based on: https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/vscode.d.ts#L4692-L4745\n\n    export const APPEND: Command = {\n        id: 'output:append'\n    };\n\n    export const APPEND_LINE: Command = {\n        id: 'output:appendLine'\n    };\n\n    export const CLEAR: Command = {\n        id: 'output:clear'\n    };\n\n    export const SHOW: Command = {\n        id: 'output:show'\n    };\n\n    export const HIDE: Command = {\n        id: 'output:hide'\n    };\n\n    export const DISPOSE: Command = {\n        id: 'output:dispose'\n    };\n\n    /* #endregion VS Code `OutputChannel` API */\n\n    export const CLEAR__WIDGET: Command = {\n        id: 'output:widget:clear',\n        category: OUTPUT_CATEGORY,\n        iconClass: 'clear-all'\n    };\n\n    export const LOCK__WIDGET: Command = {\n        id: 'output:widget:lock',\n        category: OUTPUT_CATEGORY,\n        iconClass: 'fa fa-unlock'\n    };\n\n    export const UNLOCK__WIDGET: Command = {\n        id: 'output:widget:unlock',\n        category: OUTPUT_CATEGORY,\n        iconClass: 'fa fa-lock'\n    };\n\n    export const CLEAR__QUICK_PICK: Command = {\n        id: 'output:pick-clear',\n        label: 'Clear Output Channel...',\n        category: OUTPUT_CATEGORY\n    };\n\n    export const SHOW__QUICK_PICK: Command = {\n        id: 'output:pick-show',\n        label: 'Show Output Channel...',\n        category: OUTPUT_CATEGORY\n    };\n\n    export const HIDE__QUICK_PICK: Command = {\n        id: 'output:pick-hide',\n        label: 'Hide Output Channel...',\n        category: OUTPUT_CATEGORY\n    };\n\n    export const DISPOSE__QUICK_PICK: Command = {\n        id: 'output:pick-dispose',\n        label: 'Close Output Channel...',\n        category: OUTPUT_CATEGORY\n    };\n\n    export const COPY_ALL: Command = {\n        id: 'output:copy-all',\n    };\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable } from '@theia/core/shared/inversify';\nimport { MenuPath } from '@theia/core/lib/common';\nimport { MonacoContextMenuService } from '@theia/monaco/lib/browser/monaco-context-menu';\n\nexport namespace OutputContextMenu {\n    export const MENU_PATH: MenuPath = ['output_context_menu'];\n    export const TEXT_EDIT_GROUP = [...MENU_PATH, '0_text_edit_group'];\n    export const COMMAND_GROUP = [...MENU_PATH, '1_command_group'];\n    export const WIDGET_GROUP = [...MENU_PATH, '2_widget_group'];\n}\n\n@injectable()\nexport class OutputContextMenuService extends MonacoContextMenuService {\n\n    protected menuPath(): MenuPath {\n        return OutputContextMenu.MENU_PATH;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Widget } from '@theia/core/lib/browser/widgets/widget';\nimport { MaybePromise } from '@theia/core/lib/common/types';\nimport { CommonCommands, quickCommand, OpenHandler, open, OpenerOptions, OpenerService } from '@theia/core/lib/browser';\nimport { CommandRegistry, MenuModelRegistry, CommandService } from '@theia/core/lib/common';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { OutputWidget } from './output-widget';\nimport { OutputContextMenu } from './output-context-menu';\nimport { OutputUri } from '../common/output-uri';\nimport { ClipboardService } from '@theia/core/lib/browser/clipboard-service';\nimport { OutputChannelManager, OutputChannel } from '../common/output-channel';\nimport { OutputCommands } from './output-commands';\nimport { QuickPickService, QuickPickItem } from '@theia/core/lib/common/quick-pick-service';\n\n@injectable()\nexport class OutputContribution extends AbstractViewContribution<OutputWidget> implements OpenHandler {\n\n    @inject(ClipboardService)\n    protected readonly clipboardService: ClipboardService;\n\n    @inject(CommandService)\n    protected readonly commandService: CommandService;\n\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    @inject(QuickPickService)\n    protected readonly quickPickService: QuickPickService;\n\n    readonly id: string = `${OutputWidget.ID}-opener`;\n\n    constructor() {\n        super({\n            widgetId: OutputWidget.ID,\n            widgetName: 'Output',\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'output:toggle',\n            toggleKeybinding: 'CtrlCmd+Shift+U'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.outputChannelManager.onChannelWasShown(({ name, preserveFocus }) =>\n            open(this.openerService, OutputUri.create(name), { activate: !preserveFocus, reveal: true }));\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        registry.registerCommand(OutputCommands.CLEAR__WIDGET, {\n            isEnabled: arg => {\n                if (arg instanceof Widget) {\n                    return arg instanceof OutputWidget;\n                }\n                return this.shell.currentWidget instanceof OutputWidget;\n            },\n            isVisible: arg => {\n                if (arg instanceof Widget) {\n                    return arg instanceof OutputWidget;\n                }\n                return this.shell.currentWidget instanceof OutputWidget;\n            },\n            execute: () => {\n                this.widget.then(widget => {\n                    this.withWidget(widget, output => {\n                        output.clear();\n                        return true;\n                    });\n                });\n            }\n        });\n        registry.registerCommand(OutputCommands.LOCK__WIDGET, {\n            isEnabled: widget => this.withWidget(widget, output => !output.isLocked),\n            isVisible: widget => this.withWidget(widget, output => !output.isLocked),\n            execute: widget => this.withWidget(widget, output => {\n                output.lock();\n                return true;\n            })\n        });\n        registry.registerCommand(OutputCommands.UNLOCK__WIDGET, {\n            isEnabled: widget => this.withWidget(widget, output => output.isLocked),\n            isVisible: widget => this.withWidget(widget, output => output.isLocked),\n            execute: widget => this.withWidget(widget, output => {\n                output.unlock();\n                return true;\n            })\n        });\n        registry.registerCommand(OutputCommands.COPY_ALL, {\n            execute: () => {\n                const textToCopy = this.tryGetWidget()?.getText();\n                if (textToCopy) {\n                    this.clipboardService.writeText(textToCopy);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.APPEND, {\n            execute: ({ name, text }: { name: string, text: string }) => {\n                if (name && text) {\n                    this.outputChannelManager.getChannel(name).append(text);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.APPEND_LINE, {\n            execute: ({ name, text }: { name: string, text: string }) => {\n                if (name && text) {\n                    this.outputChannelManager.getChannel(name).appendLine(text);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.CLEAR, {\n            execute: ({ name }: { name: string }) => {\n                if (name) {\n                    this.outputChannelManager.getChannel(name).clear();\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.DISPOSE, {\n            execute: ({ name }: { name: string }) => {\n                if (name) {\n                    this.outputChannelManager.deleteChannel(name);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.SHOW, {\n            execute: ({ name, options }: { name: string, options?: { preserveFocus?: boolean } }) => {\n                if (name) {\n                    const preserveFocus = options && options.preserveFocus || false;\n                    this.outputChannelManager.getChannel(name).show({ preserveFocus });\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.HIDE, {\n            execute: ({ name }: { name: string }) => {\n                if (name) {\n                    this.outputChannelManager.getChannel(name).hide();\n                }\n            }\n        });\n\n        registry.registerCommand(OutputCommands.CLEAR__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: 'Clear output channel.',\n                    channels: this.outputChannelManager.getChannels().slice()\n                });\n                if (channel) {\n                    channel.clear();\n                }\n            },\n            isEnabled: () => !!this.outputChannelManager.getChannels().length,\n            isVisible: () => !!this.outputChannelManager.getChannels().length\n        });\n        registry.registerCommand(OutputCommands.SHOW__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: 'Show output channel.',\n                    channels: this.outputChannelManager.getChannels().slice()\n                });\n                if (channel) {\n                    const { name } = channel;\n                    registry.executeCommand(OutputCommands.SHOW.id, { name, options: { preserveFocus: false } });\n                }\n            },\n            isEnabled: () => !!this.outputChannelManager.getChannels().length,\n            isVisible: () => !!this.outputChannelManager.getChannels().length\n        });\n        registry.registerCommand(OutputCommands.HIDE__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: 'Hide output channel.',\n                    channels: this.outputChannelManager.getVisibleChannels().slice()\n                });\n                if (channel) {\n                    const { name } = channel;\n                    registry.executeCommand(OutputCommands.HIDE.id, { name });\n                }\n            },\n            isEnabled: () => !!this.outputChannelManager.getVisibleChannels().length,\n            isVisible: () => !!this.outputChannelManager.getVisibleChannels().length\n        });\n        registry.registerCommand(OutputCommands.DISPOSE__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: 'Close output channel.',\n                    channels: this.outputChannelManager.getChannels().slice()\n                });\n                if (channel) {\n                    const { name } = channel;\n                    registry.executeCommand(OutputCommands.DISPOSE.id, { name });\n                }\n            },\n            isEnabled: () => !!this.outputChannelManager.getChannels().length,\n            isVisible: () => !!this.outputChannelManager.getChannels().length\n        });\n    }\n\n    registerMenus(registry: MenuModelRegistry): void {\n        super.registerMenus(registry);\n        registry.registerMenuAction(OutputContextMenu.TEXT_EDIT_GROUP, {\n            commandId: CommonCommands.COPY.id\n        });\n        registry.registerMenuAction(OutputContextMenu.TEXT_EDIT_GROUP, {\n            commandId: OutputCommands.COPY_ALL.id,\n            label: 'Copy All'\n        });\n        registry.registerMenuAction(OutputContextMenu.COMMAND_GROUP, {\n            commandId: quickCommand.id,\n            label: 'Find Command...'\n        });\n        registry.registerMenuAction(OutputContextMenu.WIDGET_GROUP, {\n            commandId: OutputCommands.CLEAR__WIDGET.id,\n            label: 'Clear Output'\n        });\n    }\n\n    canHandle(uri: URI): MaybePromise<number> {\n        return OutputUri.is(uri) ? 200 : 0;\n    }\n\n    async open(uri: URI, options?: OpenerOptions): Promise<OutputWidget> {\n        if (!OutputUri.is(uri)) {\n            throw new Error(`Expected '${OutputUri.SCHEME}' URI scheme. Got: ${uri} instead.`);\n        }\n        const widget = await this.openView(options);\n        return widget;\n    }\n\n    protected withWidget(\n        widget: Widget | undefined = this.tryGetWidget(),\n        predicate: (output: OutputWidget) => boolean = () => true\n    ): boolean | false {\n        return widget instanceof OutputWidget ? predicate(widget) : false;\n    }\n\n    protected async pick({ channels, placeholder }: { channels: OutputChannel[], placeholder: string }): Promise<OutputChannel | undefined> {\n        const items: QuickPickItem<OutputChannel>[] = [];\n        for (let i = 0; i < channels.length; i++) {\n            const channel = channels[i];\n            if (i === 0) {\n                items.push({ label: channel.isVisible ? 'Output Channels' : 'Hidden Channels', type: 'separator' });\n            } else if (!channel.isVisible && channels[i - 1].isVisible) {\n                items.push({ label: 'Hidden Channels', type: 'separator' });\n            }\n            items.push({ label: channel.name, value: channel });\n        }\n        return this.quickPickService.show(items, { placeholder });\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { MonacoEditorFactory } from '@theia/monaco/lib/browser/monaco-editor-provider';\nimport { MonacoContextMenuService } from '@theia/monaco/lib/browser/monaco-context-menu';\nimport { MonacoEditor, MonacoEditorServices } from '@theia/monaco/lib/browser/monaco-editor';\nimport { OutputUri } from '../common/output-uri';\nimport { OutputContextMenuService } from './output-context-menu';\n\n@injectable()\nexport class OutputEditorFactory implements MonacoEditorFactory {\n\n    @inject(MonacoEditorServices)\n    protected readonly services: MonacoEditorServices;\n\n    @inject(OutputContextMenuService)\n    protected readonly contextMenuService: MonacoContextMenuService;\n\n    readonly scheme: string = OutputUri.SCHEME;\n\n    create(model: MonacoEditorModel, defaultsOptions: MonacoEditor.IOptions, defaultOverrides: monaco.editor.IEditorOverrideServices): MonacoEditor {\n        const uri = new URI(model.uri);\n        const options = this.createOptions(model, defaultsOptions);\n        const overrides = this.createOverrides(model, defaultOverrides);\n        return new MonacoEditor(uri, model, document.createElement('div'), this.services, options, overrides);\n    }\n\n    protected createOptions(model: MonacoEditorModel, defaultOptions: MonacoEditor.IOptions): MonacoEditor.IOptions {\n        return {\n            ...defaultOptions,\n            overviewRulerLanes: 3,\n            lineNumbersMinChars: 3,\n            fixedOverflowWidgets: true,\n            wordWrap: 'off',\n            lineNumbers: 'off',\n            glyphMargin: false,\n            lineDecorationsWidth: 20,\n            rulers: [],\n            folding: false,\n            scrollBeyondLastLine: false,\n            readOnly: true,\n            renderLineHighlight: 'none',\n            minimap: { enabled: false },\n            matchBrackets: 'never'\n        };\n    }\n\n    protected createOverrides(model: MonacoEditorModel, defaultOverrides: monaco.editor.IEditorOverrideServices): monaco.editor.IEditorOverrideServices {\n        const contextMenuService = this.contextMenuService;\n        return {\n            ...defaultOverrides,\n            contextMenuService\n        };\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Resource } from '@theia/core/lib/common/resource';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { OutputUri } from '../common/output-uri';\nimport { MonacoEditorModelFactory } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { MonacoToProtocolConverter } from '@theia/monaco/lib/browser/monaco-to-protocol-converter';\nimport { ProtocolToMonacoConverter } from '@theia/monaco/lib/browser/protocol-to-monaco-converter';\n\n@injectable()\nexport class OutputEditorModelFactory implements MonacoEditorModelFactory {\n\n    @inject(MonacoToProtocolConverter)\n    protected readonly m2p: MonacoToProtocolConverter;\n\n    @inject(ProtocolToMonacoConverter)\n    protected readonly p2m: ProtocolToMonacoConverter;\n\n    readonly scheme: string = OutputUri.SCHEME;\n\n    createModel(\n        resource: Resource\n    ): MonacoEditorModel {\n        return new OutputEditorModel(resource, this.m2p, this.p2m);\n    }\n\n}\n\nexport class OutputEditorModel extends MonacoEditorModel {\n\n    get readOnly(): boolean {\n        return true;\n    }\n\n    protected setDirty(dirty: boolean): void {\n        // NOOP\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { OutputWidget, OUTPUT_WIDGET_KIND } from './output-widget';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { ResourceResolver } from '@theia/core/lib/common';\nimport { WidgetFactory, bindViewContribution, OpenHandler } from '@theia/core/lib/browser';\nimport { OutputChannelManager } from '../common/output-channel';\nimport { bindOutputPreferences } from '../common/output-preferences';\nimport { OutputToolbarContribution } from './output-toolbar-contribution';\nimport { OutputContribution } from './output-contribution';\nimport { MonacoEditorFactory } from '@theia/monaco/lib/browser/monaco-editor-provider';\nimport { OutputContextMenuService } from './output-context-menu';\nimport { OutputEditorFactory } from './output-editor-factory';\nimport { MonacoEditorModelFactory } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { OutputEditorModelFactory } from './output-editor-model-factory';\n\nexport default new ContainerModule(bind => {\n    bind(OutputChannelManager).toSelf().inSingletonScope();\n    bind(ResourceResolver).toService(OutputChannelManager);\n    bind(MonacoEditorFactory).to(OutputEditorFactory).inSingletonScope();\n    bind(MonacoEditorModelFactory).to(OutputEditorModelFactory).inSingletonScope();\n    bind(OutputContextMenuService).toSelf().inSingletonScope();\n\n    bindOutputPreferences(bind);\n\n    bind(OutputWidget).toSelf();\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: OUTPUT_WIDGET_KIND,\n        createWidget: () => context.container.get<OutputWidget>(OutputWidget)\n    }));\n    bindViewContribution(bind, OutputContribution);\n    bind(OpenHandler).to(OutputContribution).inSingletonScope();\n\n    bind(OutputToolbarContribution).toSelf().inSingletonScope();\n    bind(TabBarToolbarContribution).toService(OutputToolbarContribution);\n});\n","/********************************************************************************\n * Copyright (C) 2019 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from '@theia/core/shared/react';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { OutputWidget } from './output-widget';\nimport { OutputCommands } from './output-commands';\nimport { OutputContribution } from './output-contribution';\nimport { OutputChannelManager } from '../common/output-channel';\n\n@injectable()\nexport class OutputToolbarContribution implements TabBarToolbarContribution {\n\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n\n    @inject(OutputContribution)\n    protected readonly outputContribution: OutputContribution;\n\n    protected readonly onOutputWidgetStateChangedEmitter = new Emitter<void>();\n    protected readonly onOutputWidgetStateChanged = this.onOutputWidgetStateChangedEmitter.event;\n\n    protected readonly onChannelsChangedEmitter = new Emitter<void>();\n    protected readonly onChannelsChanged = this.onChannelsChangedEmitter.event;\n\n    @postConstruct()\n    protected init(): void {\n        this.outputContribution.widget.then(widget => {\n            widget.onStateChanged(() => this.onOutputWidgetStateChangedEmitter.fire());\n        });\n        const fireChannelsChanged = () => this.onChannelsChangedEmitter.fire();\n        this.outputChannelManager.onSelectedChannelChanged(fireChannelsChanged);\n        this.outputChannelManager.onChannelAdded(fireChannelsChanged);\n        this.outputChannelManager.onChannelDeleted(fireChannelsChanged);\n        this.outputChannelManager.onChannelWasShown(fireChannelsChanged);\n        this.outputChannelManager.onChannelWasHidden(fireChannelsChanged);\n    }\n\n    registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): void {\n        toolbarRegistry.registerItem({\n            id: 'channels',\n            render: () => this.renderChannelSelector(),\n            isVisible: widget => widget instanceof OutputWidget,\n            onDidChange: this.onChannelsChanged\n        });\n        toolbarRegistry.registerItem({\n            id: OutputCommands.CLEAR__WIDGET.id,\n            command: OutputCommands.CLEAR__WIDGET.id,\n            tooltip: 'Clear Output',\n            priority: 1,\n        });\n        toolbarRegistry.registerItem({\n            id: OutputCommands.LOCK__WIDGET.id,\n            command: OutputCommands.LOCK__WIDGET.id,\n            tooltip: 'Turn Auto Scrolling Off',\n            onDidChange: this.onOutputWidgetStateChanged,\n            priority: 2\n        });\n        toolbarRegistry.registerItem({\n            id: OutputCommands.UNLOCK__WIDGET.id,\n            command: OutputCommands.UNLOCK__WIDGET.id,\n            tooltip: 'Turn Auto Scrolling On',\n            onDidChange: this.onOutputWidgetStateChanged,\n            priority: 2\n        });\n    }\n\n    protected readonly NONE = '<no channels>';\n\n    protected renderChannelSelector(): React.ReactNode {\n        const channelOptionElements: React.ReactNode[] = [];\n        this.outputChannelManager.getVisibleChannels().forEach(channel => {\n            channelOptionElements.push(<option value={channel.name} key={channel.name}>{channel.name}</option>);\n        });\n        if (channelOptionElements.length === 0) {\n            channelOptionElements.push(<option key={this.NONE} value={this.NONE}>{this.NONE}</option>);\n        }\n        return <select\n            className='theia-select'\n            id='outputChannelList'\n            key='outputChannelList'\n            value={this.outputChannelManager.selectedChannel ? this.outputChannelManager.selectedChannel.name : this.NONE}\n            onChange={this.changeChannel}\n        >\n            {channelOptionElements}\n        </select>;\n    }\n\n    protected changeChannel = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const channelName = event.target.value;\n        if (channelName !== this.NONE) {\n            this.outputChannelManager.getChannel(channelName).show();\n        }\n    };\n}\n"],"sourceRoot":""}