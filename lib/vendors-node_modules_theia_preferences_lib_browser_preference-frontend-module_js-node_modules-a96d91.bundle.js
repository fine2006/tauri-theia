(self["webpackChunktauri_theia"] = self["webpackChunktauri_theia"] || []).push([["vendors-node_modules_theia_preferences_lib_browser_preference-frontend-module_js-node_modules-a96d91"],{

/***/ "./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/index.css":
/*!********************************************************************************************************!*\
  !*** ./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/index.css ***!
  \********************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(/*! ../../../../../css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports
exports.i(__webpack_require__(/*! -!../../../../../css-loader/index.js!./preference-context-menu.css */ "./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/preference-context-menu.css"), "");
exports.i(__webpack_require__(/*! -!../../../../../css-loader/index.js!./preference-array.css */ "./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/preference-array.css"), "");
exports.i(__webpack_require__(/*! -!../../../../../css-loader/index.js!./preference-object.css */ "./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/preference-object.css"), "");
exports.i(__webpack_require__(/*! -!../../../../../css-loader/index.js!./search-input.css */ "./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/search-input.css"), "");

// module
exports.push([module.id, "/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n#preferences_container_widget .p-SplitPanel-handle {\n    border-right: var(--theia-border-width) solid var(--theia-editorGroup-border);\n}\n\n#preferences_container_widget .p-TabBar-tabIcon {\n    align-items: center;\n    display: flex;\n    line-height: var(--theia-content-line-height) !important;\n}\n\n/* UI View */\n\n.theia-settings-container {\n    max-width: 1000px;\n    padding-top: 11px;\n    display: grid;\n    grid-template-areas:\n        \"header header\"\n        \"tabbar tabbar\"\n        \"navbar editor\";\n    grid-template-columns: minmax(150px, 280px) 1fr;\n    grid-template-rows: 45px 45px 1fr;\n}\n\n.theia-settings-container .settings-main:not(.no-results) .settings-no-results-announcement {\n    display: none;\n}\n\n.theia-settings-container .settings-main .hidden {\n    display: none;\n}\n\n.theia-settings-container .settings-no-results-announcement {\n    font-weight: bold;\n    font-size: var(--theia-ui-font-size3);\n    padding-left: var(--theia-ui-padding);\n    margin: calc(2*var(--theia-ui-padding)) 0px;\n}\n\n.theia-settings-container .preferences-searchbar-widget {\n    grid-area: header;\n    margin: 3px 24px 0px 24px;\n}\n\n.theia-settings-container .preferences-tabbar-widget {\n    grid-area: tabbar;\n    margin: 3px 24px 0px 24px;\n}\n\n.theia-settings-container .preferences-tabbar-widget.with-shadow {\n    box-shadow: 0px 6px 5px -5px var(--theia-widget-shadow);\n}\n\n.theia-settings-container .preferences-tabbar-widget .preferences-scope-tab .p-TabBar-tabIcon:not(.preferences-folder-dropdown-icon) {\n    display: none;\n}\n\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab {\n    background: var(--theia-editor-background);\n    border-right: unset;\n    border-bottom: var(--theia-border-width) solid var(--theia-tab-unfocusedInactiveForeground);\n}\n\n#theia-main-content-panel .theia-settings-container .tabbar-underline {\n    width: 100%;\n    position: absolute;\n    top: calc(var(--theia-private-horizontal-tab-height) + var(--theia-private-horizontal-tab-scrollbar-rail-height) / 2 - 1px);\n    border-top: 1px solid var(--theia-tab-unfocusedInactiveForeground);\n    z-index: -1;\n}\n\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.p-mod-current {\n    color: var(--theia-panelTitle-activeForeground);\n    border-bottom: var(--theia-border-width) solid var(--theia-panelTitle-activeBorder);\n}\n\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.p-mod-current:not(.theia-mod-active) {\n    border-top: unset;\n}\n\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.preferences-folder-tab .p-TabBar-tabLabel::after {\n    content: 'Folder';\n    padding-left: 4px;\n    font-size: 0.8em;\n    color: var(--theia-tab-inactiveForeground);\n}\n\n#theia-main-content-panel .theia-settings-container #preferences-scope-tab-bar .preferences-scope-tab.preferences-folder-dropdown {\n    position: relative;\n    padding-right: 23px;\n}\n\n.preferences-folder-dropdown-icon {\n    background: var(--theia-icon-chevron-right) center center no-repeat;\n    transform: rotate(90deg);\n    width: 15px;\n    height: 15px;\n    position: absolute;\n    right: var(--theia-ui-padding);\n}\n\n.theia-settings-container .preferences-editor-widget {\n    grid-area: editor;\n}\n\n.theia-settings-container .preferences-editor-widget.full-pane {\n    grid-column-start: 1;\n    grid-column-end: 3;\n}\n\n.theia-settings-container .preferences-tree-widget {\n    grid-area: navbar;\n    padding-left: 31px;\n}\n\n.theia-settings-container .preferences-tree-widget .theia-mod-selected {\n    font-weight: bold;\n}\n\n.theia-settings-container .preferences-tree-widget .theia-TreeNodeSegment {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    max-width: 90%;\n}\n\n.theia-settings-container .settings-main {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.theia-settings-container .settings-main-scroll-container {\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    padding: 0 24px;\n    flex: 1 1 auto;\n}\n\n.theia-settings-container .settings-main-sticky-misc {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex: 0 1 50px;\n}\n\n.theia-settings-container .settings-main-sticky-misc .json-button>i {\n    display: inline-block;\n    background: var(--theia-icon-open-json) no-repeat;\n    background-position-y: 1px;\n    -webkit-filter: invert(1);\n    filter: invert(1);\n    height: var(--theia-icon-size);\n    width: var(--theia-icon-size);\n}\n\n.theia-settings-container .settings-scope>label {\n    margin-right: 12px;\n}\n\n.theia-settings-container .settings-section {\n    padding-left: 0;\n    padding-top: var(--theia-ui-padding);\n    margin-top: calc(var(--theia-ui-padding) * -1);\n}\n\n.theia-settings-container .settings-section a {\n    border: none;\n    color: var(--theia-foreground);\n    font-weight: 500;\n    outline: 0;\n    text-decoration: none;\n}\n\n.theia-settings-container .settings-section a:hover {\n    text-decoration: underline;\n}\n\n.theia-settings-container .settings-section-category-title {\n    font-weight: bold;\n    font-size: var(--theia-ui-font-size3);\n    padding-left: calc(2 * var(--theia-ui-padding));\n}\n\n.theia-settings-container .settings-section-subcategory-title {\n    font-weight: bold;\n    font-size: var(--theia-ui-font-size2);\n    padding-left: calc(2 * var(--theia-ui-padding));\n}\n\n.theia-settings-container .settings-section>li {\n    list-style-type: none;\n    margin: var(--theia-ui-padding) 0px;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n    justify-content: space-between;\n    -webkit-box-align: start;\n    -ms-flex-align: start;\n    align-items: start;\n}\n\n.theia-settings-container li.single-pref {\n    list-style-type: none;\n    margin: 12px 0 18px 0;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    box-sizing: border-box;\n    padding-left: calc(2 * var(--theia-ui-padding));\n    position: relative;\n}\n\n.theia-settings-container li.single-pref .pref-context-gutter {\n    position: absolute;\n    height: 100%;\n    left: -16px;\n    padding-right: 4px;\n    border-right: 2px hidden;\n}\n\n.theia-settings-container .settings-context-menu-btn {\n    opacity: 0;\n    transition: opacity .5s;\n}\n\n.theia-settings-container .single-pref:focus-within .pref-context-gutter .settings-context-menu-btn,\n.theia-settings-container .pref-name:hover+.pref-context-gutter .settings-context-menu-btn,\n.theia-settings-container .pref-context-gutter:hover .settings-context-menu-btn,\n.theia-settings-container .pref-context-gutter.show-cog .settings-context-menu-btn {\n    opacity: 1;\n}\n\n.theia-settings-container li.single-pref .pref-context-gutter.theia-mod-item-modified {\n    border-right: 2px solid var(--theia-settings-modifiedItemIndicator);\n}\n\n.theia-settings-container li.single-pref input[type=\"text\"] {\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}\n\n.theia-settings-container .settings-main {\n    margin: 0;\n}\n\n.theia-settings-container .settings-main-sticky {\n    top: 0;\n    padding-top: calc(var(--theia-ui-padding));\n    margin-top: calc(var(--theia-ui-padding) * -1);\n    background-color: var(--theia-editor-background);\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    z-index: 1000;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n}\n\n.theia-settings-container .pref-name {\n    padding: 0;\n    font-weight: bold;\n}\n\n.theia-settings-container .preference-leaf-headline-prefix {\n    color: var(--theia-descriptionForeground);\n}\n\n.preferences-tree-spacer {\n    padding-left: calc(var(--theia-ui-padding)/2);\n    padding-right: calc(var(--theia-ui-padding)/2);\n    min-width: var(--theia-icon-size);\n    min-height: var(--theia-icon-size);\n}\n\n.theia-settings-container .pref-description {\n    padding: var(--theia-ui-padding) 0;\n    color: var(--theia-descriptionForeground);\n    line-height: 18px;\n}\n\n.theia-settings-container .theia-select:focus {\n    outline-width: 1px;\n    outline-style: solid;\n    outline-offset: -1px;\n    opacity: 1 !important;\n    outline-color: var(--theia-focusBorder);\n}\n\n.theia-settings-container .theia-input[type=\"text\"] {\n    border: 1px solid var(--theia-dropdown-border);\n}\n\n.theia-settings-container .theia-input[type=\"checkbox\"]:focus,\n.theia-settings-container .theia-input[type=\"number\"]:focus {\n    outline-width: 2px;\n}\n\n.theia-settings-container .theia-input[type=\"checkbox\"] {\n    margin-left: 0;\n}\n\n/* Remove the spinners from input[type = number] on Firefox. */\n.theia-settings-container .theia-input[type=\"number\"] {\n    -webkit-appearance: textfield;\n    border: 1px solid var(--theia-dropdown-border);\n}\n\n/* Remove the webkit spinners from input[type = number] on all browsers except Firefox. */\n.theia-settings-container input::-webkit-outer-spin-button,\n.theia-settings-container input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n\n.theia-settings-container .pref-content-container .pref-input .pref-input-container .pref-error-notification {\n    border-style: solid;\n    border-color: var(--theia-inputValidation-errorBorder);\n    background-color: var(--theia-inputValidation-errorBackground);\n    width: 100%;\n    box-sizing: border-box;\n    padding: var(--theia-ui-padding);\n}\n\n.theia-settings-container .pref-content-container .pref-input .pref-input-container {\n    display: flex;\n    flex-direction: column;\n}\n\n.theia-settings-container .pref-content-container a.theia-json-input {\n    text-decoration: underline;\n    color: var(--theia-titleBar-activeForeground)\n}\n\n.theia-settings-container .pref-content-container a.theia-json-input:hover {\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.theia-settings-container .pref-content-container {\n    width: 100%;\n}\n\n.theia-settings-container .pref-content-container .pref-input {\n    padding: var(--theia-ui-padding) 0;\n    width: 100%;\n    max-width: 320px;\n}\n\n.theia-settings-container .pref-content-container .pref-input>select,\n.theia-settings-container .pref-content-container .pref-input>input:not([type=\"checkbox\"]) {\n    width: 100%;\n}\n\n\n/* These specifications for the boolean class ensure that the\n    checkbox is rendered to the left of the description.\n*/\n.theia-settings-container .pref-content-container.boolean {\n    display: grid;\n    grid-template-columns: 20px 1fr;\n}\n\n.theia-settings-container .pref-content-container.boolean .pref-description {\n    grid-column-start: 2;\n    grid-row-start: 1;\n}\n\n.theia-settings-container .pref-content-container.boolean .pref-input {\n    grid-column-start: 1;\n    grid-row-start: 1;\n    margin: 0;\n}\n\n.theia-settings-container .settings-section>li:last-child {\n    margin-bottom: 20px;\n}\n\n.theia-settings-container .preference-leaf-headline-suffix {\n    font-weight: normal;\n    color: var(--theia-descriptionForeground);\n}\n\n.theia-settings-container .preference-leaf-headline-suffix::before {\n    content: ' (';\n}\n\n.theia-settings-container .preference-leaf-headline-suffix::after {\n    content: ')';\n}\n\n.theia-settings-container .preference-scope-underlined {\n    text-decoration: underline;\n    cursor: pointer;\n}\n\n.theia-settings-container .preference-modified-scope-wrapper:not(:last-child)::after {\n    content: ', ';\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/preference-array.css":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/preference-array.css ***!
  \*******************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(/*! ../../../../../css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.id, "/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-settings-container .preference-array {\n  list-style: none;\n  padding   : 0;\n}\n\n.theia-settings-container .preference-array-element {\n  display          : -webkit-box;\n  display          : -ms-flexbox;\n  display          : flex;\n  -webkit-box-pack : justify;\n  -ms-flex-pack    : justify;\n  justify-content  : space-between;\n  -webkit-box-align: center;\n  -ms-flex-align   : center;\n  align-items      : center;\n  padding          : calc(var(--theia-ui-padding) / 2) var(--theia-ui-padding);\n  border-bottom    : var(--theia-panel-border) 2px solid;\n}\n\n.theia-settings-container .pref-input li:nth-last-child(2) {\n  border-bottom: none;\n}\n\n.theia-settings-container .pref-input li:last-child {\n  display          : -webkit-box;\n  display          : -ms-flexbox;\n  display          : flex;\n  -webkit-box-align: center;\n  -ms-flex-align   : center;\n  align-items      : center;\n}\n\n.theia-settings-container .preference-array-element:hover {\n  background-color: rgba(50%, 50%, 50%, 0.1);\n}\n\n.theia-settings-container .preference-array-element-btn {\n  width            : 1.5em;\n  height           : 1.5em;\n  display          : -webkit-box;\n  display          : -ms-flexbox;\n  display          : flex;\n  -webkit-box-pack : center;\n  -ms-flex-pack    : center;\n  justify-content  : center;\n  -webkit-box-align: center;\n  -ms-flex-align   : center;\n  align-items      : center;\n}\n\n.theia-settings-container .preference-array-element .preference-array-element-btn {\n  opacity: 0;\n}\n\n.theia-settings-container .preference-array-element:hover .preference-array-element-btn {\n  opacity: 1;\n}\n\n.theia-settings-container .preference-array-element-btn:hover {\n  background-color: rgba(50%, 50%, 50%, 0.1);\n  cursor          : pointer;\n}\n\n.theia-settings-container .preference-array .add-btn {\n  margin-left : calc((var(--theia-icon-size) + 4px) * -1);\n  margin-right: 4px;\n  width       : var(--theia-icon-size);\n  height      : var(--theia-icon-size);\n}\n\n.theia-settings-container .preference-array-clear-item {\n  background: var(--theia-icon-close) no-repeat;\n  width     : var(--theia-icon-size);\n  height    : var(--theia-icon-size);\n}\n\n.theia-settings-container .preference-array-input {\n  padding-right: calc(var(--theia-icon-size) + var(--theia-ui-padding));\n  width        : 100%;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/preference-context-menu.css":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/preference-context-menu.css ***!
  \**************************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(/*! ../../../../../css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.id, "/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-settings-container .settings-context-menu-container {\n  position: relative;\n  padding-left: var(--theia-ui-padding);\n}\n\n.theia-settings-container .settings-context-menu-btn {\n  cursor: pointer;\n}\n\n.theia-settings-container .settings-context-menu {\n  position: absolute;\n  width: var(--theia-settingsSidebar-width);\n  list-style: none;\n  padding: var(--theia-ui-padding);\n  bottom: calc(100% + 10px);\n  left: -10px;\n  z-index: 9999;\n  background-color: var(--theia-menu-background);\n}\n\n.theia-settings-container .settings-context-menu:before {\n  content: \"\";\n  position: absolute;\n  left: 10px;\n  bottom: -10px;\n  width: 0;\n  height: 0;\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  border-top: 10px solid var(--theia-menu-background);\n}\n\n.theia-settings-container .settings-context-menu li {\n  padding: var(--theia-ui-padding);\n}\n\n.theia-settings-container .settings-context-menu li:hover {\n  background-color: var(--theia-menu-selectionBackground);\n}\n\n.theia-settings-container .settings-context-menu i {\n  padding-right: var(--theia-ui-padding);\n  width: var(--theia-icon-size);\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-pack: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n}\n\n.theia-settings-container .pref-context-menu-btn {\n  margin-left: 5px;\n}\n\n.theia-settings-container .pref-context-menu-btn:hover {\n  background-color: rgba(50%, 50%, 50%, 0.1);\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/preference-object.css":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/preference-object.css ***!
  \********************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(/*! ../../../../../css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.id, "/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-settings-container .object-preference-input-container {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: justify;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n}\n\n.theia-settings-container .object-preference-input {\n  width: 100%;\n  max-height: 250px;\n  resize: none;\n  color: var(--theia-settings-textInputForeground);\n  background-color: var(--theia-settings-textInputBackground);\n  border-color: var(--theia-panel-border);\n  font-size: var(--theia-code-font-size);\n  margin-bottom: 10px;\n}\n\n.theia-settings-container .object-preference-input-btn-toggle {\n  padding: 0 calc(var(--theia-ui-padding) / 2);\n}\n\n.theia-settings-container .object-preference-input-btn-toggle-icon {\n  display: inline-block;\n  background: var(--theia-icon-open-json) no-repeat;\n  background-position-y: 1px;\n  height: var(--theia-icon-size);\n  width: var(--theia-icon-size);\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/search-input.css":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/search-input.css ***!
  \***************************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(/*! ../../../../../css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.id, "/********************************************************************************\n * Copyright (C) 2020 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-settings-container .settings-search-container {\n  display: flex;\n  align-items: center;\n}\n\n.theia-settings-container .settings-search-container .settings-search-input {\n  flex: 1;\n  text-indent: 8px;\n  padding: calc(var(--theia-ui-padding) / 2) 0;\n  box-sizing: border-box;\n  border: 1px solid var(--theia-dropdown-border);\n}\n\n.theia-settings-container .settings-search-container .option-buttons {\n  height: 23px;\n  align-items: center;\n  position: absolute;\n  z-index: 999;\n  right: 5px;\n  display: flex;\n}\n\n.theia-settings-container .settings-search-container .clear-all {\n  background: var(--theia-icon-clear);\n}\n\n.theia-settings-container .settings-search-container .results-found {\n  background-color: var(--theia-badge-background);\n  border-radius: 2px;\n  color: var(--theia-badge-foreground);\n  padding: calc(var(--theia-ui-padding) / 5) calc(var(--theia-ui-padding) / 2);\n}\n\n.theia-settings-container .settings-search-container .option {\n  width: 21px;\n  height: 21px;\n  margin: 0 1px;\n  display: inline-block;\n  box-sizing: border-box;\n  user-select: none;\n  background-repeat: no-repeat;\n  background-position: center;\n  border: var(--theia-border-width) solid transparent;\n  opacity: 0.7;\n  cursor: pointer;\n}\n\n.theia-settings-container .settings-search-container .enabled {\n  opacity: 1.0;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/@theia/core/shared/fuzzy.js":
/*!**************************************************!*\
  !*** ./node_modules/@theia/core/shared/fuzzy.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! fuzzy */ "./node_modules/fuzzy/lib/fuzzy.js");


/***/ }),

/***/ "./node_modules/@theia/core/shared/lodash.debounce.js":
/*!************************************************************!*\
  !*** ./node_modules/@theia/core/shared/lodash.debounce.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! lodash.debounce */ "./node_modules/lodash.debounce/index.js");


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/preference-frontend-module.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/preference-frontend-module.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (C) 2018 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bindPreferences = void 0;
__webpack_require__(/*! ../../src/browser/style/index.css */ "./node_modules/@theia/preferences/src/browser/style/index.css");
__webpack_require__(/*! ./preferences-monaco-contribution */ "./node_modules/@theia/preferences/lib/browser/preferences-monaco-contribution.js");
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var tab_bar_toolbar_1 = __webpack_require__(/*! @theia/core/lib/browser/shell/tab-bar-toolbar */ "./node_modules/@theia/core/lib/browser/shell/tab-bar-toolbar.js");
var preference_tree_generator_1 = __webpack_require__(/*! ./util/preference-tree-generator */ "./node_modules/@theia/preferences/lib/browser/util/preference-tree-generator.js");
var preference_bindings_1 = __webpack_require__(/*! ./preference-bindings */ "./node_modules/@theia/preferences/lib/browser/preference-bindings.js");
var preference_widget_bindings_1 = __webpack_require__(/*! ./views/preference-widget-bindings */ "./node_modules/@theia/preferences/lib/browser/views/preference-widget-bindings.js");
var preferences_contribution_1 = __webpack_require__(/*! ./preferences-contribution */ "./node_modules/@theia/preferences/lib/browser/preferences-contribution.js");
var preference_scope_command_manager_1 = __webpack_require__(/*! ./util/preference-scope-command-manager */ "./node_modules/@theia/preferences/lib/browser/util/preference-scope-command-manager.js");
var json_schema_store_1 = __webpack_require__(/*! @theia/core/lib/browser/json-schema-store */ "./node_modules/@theia/core/lib/browser/json-schema-store.js");
var preferences_json_schema_contribution_1 = __webpack_require__(/*! ./preferences-json-schema-contribution */ "./node_modules/@theia/preferences/lib/browser/preferences-json-schema-contribution.js");
function bindPreferences(bind, unbind) {
    preference_bindings_1.bindPreferenceProviders(bind, unbind);
    preference_widget_bindings_1.bindPreferencesWidgets(bind);
    bind(preference_tree_generator_1.PreferenceTreeGenerator).toSelf().inSingletonScope();
    browser_1.bindViewContribution(bind, preferences_contribution_1.PreferencesContribution);
    bind(preference_scope_command_manager_1.PreferenceScopeCommandManager).toSelf().inSingletonScope();
    bind(tab_bar_toolbar_1.TabBarToolbarContribution).toService(preferences_contribution_1.PreferencesContribution);
    bind(preferences_json_schema_contribution_1.PreferencesJsonSchemaContribution).toSelf().inSingletonScope();
    bind(json_schema_store_1.JsonSchemaContribution).toService(preferences_json_schema_contribution_1.PreferencesJsonSchemaContribution);
}
exports.bindPreferences = bindPreferences;
exports.default = new inversify_1.ContainerModule(function (bind, unbind, isBound, rebind) {
    bindPreferences(bind, unbind);
});


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/preference-tree-model.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/preference-tree-model.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2020 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferenceTreeModel = exports.PreferenceFilterChangeSource = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
var preference_searchbar_widget_1 = __webpack_require__(/*! ./views/preference-searchbar-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-searchbar-widget.js");
var preference_tree_generator_1 = __webpack_require__(/*! ./util/preference-tree-generator */ "./node_modules/@theia/preferences/lib/browser/util/preference-tree-generator.js");
var fuzzy = __webpack_require__(/*! @theia/core/shared/fuzzy */ "./node_modules/@theia/core/shared/fuzzy.js");
var preference_scope_tabbar_widget_1 = __webpack_require__(/*! ./views/preference-scope-tabbar-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-scope-tabbar-widget.js");
var preference_types_1 = __webpack_require__(/*! ./util/preference-types */ "./node_modules/@theia/preferences/lib/browser/util/preference-types.js");
var PreferenceFilterChangeSource;
(function (PreferenceFilterChangeSource) {
    PreferenceFilterChangeSource[PreferenceFilterChangeSource["Schema"] = 0] = "Schema";
    PreferenceFilterChangeSource[PreferenceFilterChangeSource["Search"] = 1] = "Search";
    PreferenceFilterChangeSource[PreferenceFilterChangeSource["Scope"] = 2] = "Scope";
})(PreferenceFilterChangeSource = exports.PreferenceFilterChangeSource || (exports.PreferenceFilterChangeSource = {}));
var PreferenceTreeModel = /** @class */ (function (_super) {
    __extends(PreferenceTreeModel, _super);
    function PreferenceTreeModel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onTreeFilterChangedEmitter = new core_1.Emitter();
        _this.onFilterChanged = _this.onTreeFilterChangedEmitter.event;
        _this.lastSearchedFuzzy = '';
        _this.lastSearchedLiteral = '';
        _this._currentScope = Number(preference_types_1.Preference.DEFAULT_SCOPE.scope);
        _this._isFiltered = false;
        _this._currentRows = new Map();
        _this._totalVisibleLeaves = 0;
        return _this;
    }
    Object.defineProperty(PreferenceTreeModel.prototype, "currentRows", {
        get: function () {
            return this._currentRows;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PreferenceTreeModel.prototype, "totalVisibleLeaves", {
        get: function () {
            return this._totalVisibleLeaves;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PreferenceTreeModel.prototype, "isFiltered", {
        get: function () {
            return this._isFiltered;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PreferenceTreeModel.prototype, "propertyList", {
        get: function () {
            return this.schemaProvider.getCombinedSchema().properties;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PreferenceTreeModel.prototype, "currentScope", {
        get: function () {
            return this.scopeTracker.currentScope;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PreferenceTreeModel.prototype, "onSchemaChanged", {
        get: function () {
            return this.treeGenerator.onSchemaChanged;
        },
        enumerable: false,
        configurable: true
    });
    PreferenceTreeModel.prototype.init = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _super.prototype.init.call(this);
                        this.toDispose.pushAll([
                            this.treeGenerator.onSchemaChanged(function (newTree) { return _this.handleNewSchema(newTree); }),
                            this.scopeTracker.onScopeChanged(function (scopeDetails) {
                                _this._currentScope = scopeDetails.scope;
                                _this.updateFilteredRows(PreferenceFilterChangeSource.Scope);
                            }),
                            this.filterInput.onFilterChanged(function (newSearchTerm) {
                                _this.lastSearchedLiteral = newSearchTerm;
                                _this.lastSearchedFuzzy = newSearchTerm.replace(/\s/g, '');
                                _this._isFiltered = newSearchTerm.length > 2;
                                if (_this.isFiltered) {
                                    _this.expandAll();
                                }
                                else if (browser_1.CompositeTreeNode.is(_this.root)) {
                                    _this.collapseAll(_this.root);
                                }
                                _this.updateFilteredRows(PreferenceFilterChangeSource.Search);
                            }),
                            this.onFilterChanged(function () {
                                _this.filterInput.updateResultsCount(_this._totalVisibleLeaves);
                            }),
                            this.onTreeFilterChangedEmitter,
                        ]);
                        return [4 /*yield*/, this.preferenceService.ready];
                    case 1:
                        _a.sent();
                        this.handleNewSchema(this.treeGenerator.root);
                        return [2 /*return*/];
                }
            });
        });
    };
    PreferenceTreeModel.prototype.handleNewSchema = function (newRoot) {
        this.root = newRoot;
        if (this.isFiltered) {
            this.expandAll();
        }
        this.updateFilteredRows(PreferenceFilterChangeSource.Schema);
    };
    PreferenceTreeModel.prototype.updateRows = function () {
        var e_1, _a;
        var root = this.root;
        this._currentRows = new Map();
        if (root) {
            this._totalVisibleLeaves = 0;
            var index = 0;
            try {
                for (var _b = __values(new browser_1.TopDownTreeIterator(root, {
                    pruneCollapsed: false,
                    pruneSiblings: true
                })), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var node = _c.value;
                    if (browser_1.TreeNode.isVisible(node) && preference_types_1.Preference.TreeNode.is(node)) {
                        var id = preference_types_1.Preference.TreeNode.getGroupAndIdFromNodeId(node.id).id;
                        if (browser_1.CompositeTreeNode.is(node) || this.passesCurrentFilters(node, id)) {
                            this.updateVisibleChildren(node);
                            this._currentRows.set(node.id, {
                                index: index++,
                                node: node,
                                depth: node.depth,
                                visibleChildren: 0,
                            });
                        }
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    PreferenceTreeModel.prototype.updateFilteredRows = function (source) {
        this.updateRows();
        this.onTreeFilterChangedEmitter.fire({ source: source });
    };
    PreferenceTreeModel.prototype.passesCurrentFilters = function (node, prefID) {
        var _a;
        if (!this.schemaProvider.isValidInScope(prefID, this._currentScope)) {
            return false;
        }
        if (!this._isFiltered) {
            return true;
        }
        // When filtering, VSCode will render an item that is present in the commonly used section only once but render both its possible parents in the left-hand tree.
        // E.g. searching for editor.renderWhitespace will show one item in the main panel, but both 'Commonly Used' and 'Text Editor' in the left tree.
        // That seems counterintuitive and introduces a number of special cases, so I prefer to remove the commonly used section entirely when the user searches.
        if (node.id.startsWith(preference_tree_generator_1.COMMONLY_USED_SECTION_PREFIX)) {
            return false;
        }
        return fuzzy.test(this.lastSearchedFuzzy, prefID) // search matches preference name.
            // search matches description. Fuzzy isn't ideal here because the score depends on the order of discovery.
            || ((_a = node.preference.data.description) !== null && _a !== void 0 ? _a : '').includes(this.lastSearchedLiteral);
    };
    PreferenceTreeModel.prototype.isVisibleSelectableNode = function (node) {
        var _a;
        return browser_1.CompositeTreeNode.is(node) && !!((_a = this._currentRows.get(node.id)) === null || _a === void 0 ? void 0 : _a.visibleChildren);
    };
    PreferenceTreeModel.prototype.updateVisibleChildren = function (node) {
        var _a, _b, _c, _d;
        if (!browser_1.CompositeTreeNode.is(node)) {
            this._totalVisibleLeaves++;
            var nextParent = ((_a = node.parent) === null || _a === void 0 ? void 0 : _a.id) && this._currentRows.get((_b = node.parent) === null || _b === void 0 ? void 0 : _b.id);
            while (nextParent && nextParent.node !== this.root) {
                if (nextParent) {
                    nextParent.visibleChildren += 1;
                }
                nextParent = ((_c = nextParent.node.parent) === null || _c === void 0 ? void 0 : _c.id) && this._currentRows.get((_d = nextParent.node.parent) === null || _d === void 0 ? void 0 : _d.id);
                if (nextParent) {
                    nextParent.isExpansible = true;
                }
            }
        }
    };
    PreferenceTreeModel.prototype.collapseAllExcept = function (openNode) {
        var _this = this;
        if (browser_1.ExpandableTreeNode.is(openNode)) {
            this.expandNode(openNode);
        }
        if (browser_1.CompositeTreeNode.is(this.root)) {
            this.root.children.forEach(function (child) {
                if (child !== openNode && browser_1.ExpandableTreeNode.is(child)) {
                    _this.collapseNode(child);
                }
            });
        }
    };
    PreferenceTreeModel.prototype.expandAll = function () {
        var _this = this;
        if (browser_1.CompositeTreeNode.is(this.root)) {
            this.root.children.forEach(function (child) {
                if (browser_1.ExpandableTreeNode.is(child)) {
                    _this.expandNode(child);
                }
            });
        }
    };
    /**
     * @returns true if selection changed, false otherwise
     */
    PreferenceTreeModel.prototype.selectIfNotSelected = function (node) {
        var currentlySelected = this.selectedNodes[0];
        if (node !== currentlySelected) {
            this.selectNode(node);
            return true;
        }
        return false;
    };
    __decorate([
        inversify_1.inject(browser_1.PreferenceSchemaProvider),
        __metadata("design:type", browser_1.PreferenceSchemaProvider)
    ], PreferenceTreeModel.prototype, "schemaProvider", void 0);
    __decorate([
        inversify_1.inject(preference_searchbar_widget_1.PreferencesSearchbarWidget),
        __metadata("design:type", preference_searchbar_widget_1.PreferencesSearchbarWidget)
    ], PreferenceTreeModel.prototype, "filterInput", void 0);
    __decorate([
        inversify_1.inject(preference_tree_generator_1.PreferenceTreeGenerator),
        __metadata("design:type", preference_tree_generator_1.PreferenceTreeGenerator)
    ], PreferenceTreeModel.prototype, "treeGenerator", void 0);
    __decorate([
        inversify_1.inject(preference_scope_tabbar_widget_1.PreferencesScopeTabBar),
        __metadata("design:type", preference_scope_tabbar_widget_1.PreferencesScopeTabBar)
    ], PreferenceTreeModel.prototype, "scopeTracker", void 0);
    __decorate([
        inversify_1.inject(browser_1.PreferenceService),
        __metadata("design:type", Object)
    ], PreferenceTreeModel.prototype, "preferenceService", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], PreferenceTreeModel.prototype, "init", null);
    PreferenceTreeModel = __decorate([
        inversify_1.injectable()
    ], PreferenceTreeModel);
    return PreferenceTreeModel;
}(browser_1.TreeModelImpl));
exports.PreferenceTreeModel = PreferenceTreeModel;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/preferences-contribution.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/preferences-contribution.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2018 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferencesContribution = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var browser_2 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var os_1 = __webpack_require__(/*! @theia/core/lib/common/os */ "./node_modules/@theia/core/lib/common/os.js");
var browser_3 = __webpack_require__(/*! @theia/editor/lib/browser */ "./node_modules/@theia/editor/lib/browser/index.js");
var preference_widget_1 = __webpack_require__(/*! ./views/preference-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-widget.js");
var workspace_preference_provider_1 = __webpack_require__(/*! ./workspace-preference-provider */ "./node_modules/@theia/preferences/lib/browser/workspace-preference-provider.js");
var preference_types_1 = __webpack_require__(/*! ./util/preference-types */ "./node_modules/@theia/preferences/lib/browser/util/preference-types.js");
var clipboard_service_1 = __webpack_require__(/*! @theia/core/lib/browser/clipboard-service */ "./node_modules/@theia/core/lib/browser/clipboard-service.js");
var file_service_1 = __webpack_require__(/*! @theia/filesystem/lib/browser/file-service */ "./node_modules/@theia/filesystem/lib/browser/file-service.js");
var PreferencesContribution = /** @class */ (function (_super) {
    __extends(PreferencesContribution, _super);
    function PreferencesContribution() {
        return _super.call(this, {
            widgetId: preference_widget_1.PreferencesWidget.ID,
            widgetName: preference_widget_1.PreferencesWidget.LABEL,
            defaultWidgetOptions: {
                area: 'main',
            },
        }) || this;
    }
    PreferencesContribution.prototype.registerCommands = function (commands) {
        var _this = this;
        commands.registerCommand(browser_1.CommonCommands.OPEN_PREFERENCES, {
            execute: function () { return _this.openView({ activate: true }); },
        });
        commands.registerCommand(preference_types_1.PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR, {
            isEnabled: function () { return true; },
            isVisible: function (w) { return _this.withWidget(w, function () { return true; }); },
            execute: function (preferenceId) {
                _this.openPreferencesJSON(preferenceId);
            }
        });
        commands.registerCommand(preference_types_1.PreferencesCommands.COPY_JSON_NAME, {
            isEnabled: preference_types_1.Preference.EditorCommandArgs.is,
            isVisible: preference_types_1.Preference.EditorCommandArgs.is,
            execute: function (_a) {
                var id = _a.id, value = _a.value;
                _this.clipboardService.writeText(id);
            }
        });
        commands.registerCommand(preference_types_1.PreferencesCommands.COPY_JSON_VALUE, {
            isEnabled: preference_types_1.Preference.EditorCommandArgs.is,
            isVisible: preference_types_1.Preference.EditorCommandArgs.is,
            execute: function (_a) {
                var id = _a.id, value = _a.value;
                var jsonString = "\"" + id + "\": " + JSON.stringify(value);
                _this.clipboardService.writeText(jsonString);
            }
        });
        commands.registerCommand(preference_types_1.PreferencesCommands.RESET_PREFERENCE, {
            isEnabled: preference_types_1.Preference.EditorCommandArgs.is,
            isVisible: preference_types_1.Preference.EditorCommandArgs.is,
            execute: function (_a) {
                var id = _a.id;
                _this.preferenceService.set(id, undefined, Number(_this.scopeTracker.currentScope.scope), _this.scopeTracker.currentScope.uri);
            }
        });
    };
    PreferencesContribution.prototype.registerMenus = function (menus) {
        menus.registerMenuAction(browser_1.CommonMenus.FILE_SETTINGS_SUBMENU_OPEN, {
            commandId: browser_1.CommonCommands.OPEN_PREFERENCES.id,
            label: browser_1.CommonCommands.OPEN_PREFERENCES.label,
            order: 'a10',
        });
        menus.registerMenuAction(browser_1.CommonMenus.SETTINGS_OPEN, {
            commandId: browser_1.CommonCommands.OPEN_PREFERENCES.id,
            label: browser_1.CommonCommands.OPEN_PREFERENCES.label,
            order: 'a10',
        });
        menus.registerMenuAction(preference_types_1.PreferenceMenus.PREFERENCE_EDITOR_CONTEXT_MENU, {
            commandId: preference_types_1.PreferencesCommands.RESET_PREFERENCE.id,
            label: preference_types_1.PreferencesCommands.RESET_PREFERENCE.label,
            order: 'a'
        });
        menus.registerMenuAction(preference_types_1.PreferenceMenus.PREFERENCE_EDITOR_COPY_ACTIONS, {
            commandId: preference_types_1.PreferencesCommands.COPY_JSON_VALUE.id,
            label: preference_types_1.PreferencesCommands.COPY_JSON_VALUE.label,
            order: 'b'
        });
        menus.registerMenuAction(preference_types_1.PreferenceMenus.PREFERENCE_EDITOR_COPY_ACTIONS, {
            commandId: preference_types_1.PreferencesCommands.COPY_JSON_NAME.id,
            label: preference_types_1.PreferencesCommands.COPY_JSON_NAME.label,
            order: 'c'
        });
    };
    PreferencesContribution.prototype.registerKeybindings = function (keybindings) {
        keybindings.registerKeybinding({
            command: browser_1.CommonCommands.OPEN_PREFERENCES.id,
            keybinding: (os_1.isOSX && !browser_2.isFirefox) ? 'cmd+,' : 'ctrl+,'
        });
    };
    PreferencesContribution.prototype.registerToolbarItems = function (toolbar) {
        toolbar.registerItem({
            id: preference_types_1.PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id,
            command: preference_types_1.PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id,
            tooltip: 'Open Preferences in JSON',
            priority: 0,
        });
    };
    PreferencesContribution.prototype.openPreferencesJSON = function (opener) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var _b, scope, activeScopeIsFolder, uri, scopeID, preferenceId, currentPreferenceValue, valueInCurrentScope, jsonEditorWidget, jsonUriToOpen, text, index, numReturns;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _b = this.scopeTracker.currentScope, scope = _b.scope, activeScopeIsFolder = _b.activeScopeIsFolder, uri = _b.uri;
                        scopeID = Number(scope);
                        preferenceId = '';
                        if (typeof opener === 'string') {
                            preferenceId = opener;
                            currentPreferenceValue = this.preferenceService.inspect(preferenceId, uri);
                            valueInCurrentScope = (_a = preference_types_1.Preference.getValueInScope(currentPreferenceValue, scopeID)) !== null && _a !== void 0 ? _a : currentPreferenceValue === null || currentPreferenceValue === void 0 ? void 0 : currentPreferenceValue.defaultValue;
                            this.preferenceService.set(preferenceId, valueInCurrentScope, scopeID, uri);
                        }
                        return [4 /*yield*/, this.obtainConfigUri(scopeID, activeScopeIsFolder, uri)];
                    case 1:
                        jsonUriToOpen = _c.sent();
                        if (!jsonUriToOpen) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.editorManager.open(jsonUriToOpen)];
                    case 2:
                        jsonEditorWidget = _c.sent();
                        if (preferenceId) {
                            text = jsonEditorWidget.editor.document.getText();
                            if (preferenceId) {
                                index = text.match(preferenceId).index;
                                numReturns = text.slice(0, index).match(new RegExp('\n', 'g')).length;
                                jsonEditorWidget.editor.cursor = { line: numReturns, character: 4 + preferenceId.length + 4 };
                            }
                        }
                        _c.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    PreferencesContribution.prototype.obtainConfigUri = function (serializedScope, activeScopeIsFolder, resource) {
        return __awaiter(this, void 0, void 0, function () {
            var scope, resourceUri, configUri, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        scope = serializedScope;
                        if (activeScopeIsFolder) {
                            scope = browser_1.PreferenceScope.Folder;
                        }
                        resourceUri = !!resource ? resource : undefined;
                        configUri = this.preferenceService.getConfigUri(scope, resourceUri);
                        if (!configUri) {
                            return [2 /*return*/, undefined];
                        }
                        _a = configUri;
                        if (!_a) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.fileService.exists(configUri)];
                    case 1:
                        _a = !(_b.sent());
                        _b.label = 2;
                    case 2:
                        if (!_a) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.fileService.create(configUri)];
                    case 3:
                        _b.sent();
                        _b.label = 4;
                    case 4: return [2 /*return*/, configUri];
                }
            });
        });
    };
    /**
     * Determine if the current widget is the PreferencesWidget.
     */
    PreferencesContribution.prototype.withWidget = function (widget, fn) {
        if (widget === void 0) { widget = this.tryGetWidget(); }
        if (widget instanceof preference_widget_1.PreferencesWidget && widget.id === preference_widget_1.PreferencesWidget.ID) {
            return fn(widget);
        }
        return false;
    };
    __decorate([
        inversify_1.inject(file_service_1.FileService),
        __metadata("design:type", file_service_1.FileService)
    ], PreferencesContribution.prototype, "fileService", void 0);
    __decorate([
        inversify_1.inject(browser_1.PreferenceProvider),
        inversify_1.named(browser_1.PreferenceScope.Workspace),
        __metadata("design:type", workspace_preference_provider_1.WorkspacePreferenceProvider)
    ], PreferencesContribution.prototype, "workspacePreferenceProvider", void 0);
    __decorate([
        inversify_1.inject(browser_3.EditorManager),
        __metadata("design:type", browser_3.EditorManager)
    ], PreferencesContribution.prototype, "editorManager", void 0);
    __decorate([
        inversify_1.inject(browser_1.PreferenceService),
        __metadata("design:type", Object)
    ], PreferencesContribution.prototype, "preferenceService", void 0);
    __decorate([
        inversify_1.inject(clipboard_service_1.ClipboardService),
        __metadata("design:type", Object)
    ], PreferencesContribution.prototype, "clipboardService", void 0);
    __decorate([
        inversify_1.inject(preference_widget_1.PreferencesWidget),
        __metadata("design:type", preference_widget_1.PreferencesWidget)
    ], PreferencesContribution.prototype, "scopeTracker", void 0);
    PreferencesContribution = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [])
    ], PreferencesContribution);
    return PreferencesContribution;
}(browser_1.AbstractViewContribution));
exports.PreferencesContribution = PreferencesContribution;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/preferences-json-schema-contribution.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/preferences-json-schema-contribution.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferencesJsonSchemaContribution = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var uri_1 = __webpack_require__(/*! @theia/core/lib/common/uri */ "./node_modules/@theia/core/lib/common/uri.js");
var core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
var preference_contribution_1 = __webpack_require__(/*! @theia/core/lib/browser/preferences/preference-contribution */ "./node_modules/@theia/core/lib/browser/preferences/preference-contribution.js");
var preference_configurations_1 = __webpack_require__(/*! @theia/core/lib/browser/preferences/preference-configurations */ "./node_modules/@theia/core/lib/browser/preferences/preference-configurations.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var browser_2 = __webpack_require__(/*! @theia/workspace/lib/browser */ "./node_modules/@theia/workspace/lib/browser/index.js");
var PREFERENCE_URI_PREFIX = 'vscode://schemas/settings/';
var USER_STORAGE_PREFIX = 'user-storage:/';
var PreferencesJsonSchemaContribution = /** @class */ (function () {
    function PreferencesJsonSchemaContribution() {
        var _this = this;
        this.serializeSchema = function (scope) { return JSON.stringify(_this.schemaProvider.getSchema(scope)); };
    }
    PreferencesJsonSchemaContribution.prototype.registerSchemas = function (context) {
        var _this = this;
        this.registerSchema(browser_1.PreferenceScope.Default, context);
        this.registerSchema(browser_1.PreferenceScope.User, context);
        this.registerSchema(browser_1.PreferenceScope.Workspace, context);
        this.registerSchema(browser_1.PreferenceScope.Folder, context);
        this.workspaceService.updateSchema('settings', { $ref: this.getSchemaURIForScope(browser_1.PreferenceScope.Workspace).toString() });
        this.schemaProvider.onDidPreferenceSchemaChanged(function () { return _this.updateInMemoryResources(); });
    };
    PreferencesJsonSchemaContribution.prototype.registerSchema = function (scope, context) {
        var scopeStr = browser_1.PreferenceScope[scope].toLowerCase();
        var uri = new uri_1.default(PREFERENCE_URI_PREFIX + scopeStr);
        this.inmemoryResources.add(uri, this.serializeSchema(scope));
        context.registerSchema({
            fileMatch: this.getFileMatch(scopeStr),
            url: uri.toString()
        });
    };
    PreferencesJsonSchemaContribution.prototype.updateInMemoryResources = function () {
        this.inmemoryResources.update(this.getSchemaURIForScope(browser_1.PreferenceScope.Default), this.serializeSchema(+browser_1.PreferenceScope.Default));
        this.inmemoryResources.update(this.getSchemaURIForScope(browser_1.PreferenceScope.User), this.serializeSchema(+browser_1.PreferenceScope.User));
        this.inmemoryResources.update(this.getSchemaURIForScope(browser_1.PreferenceScope.Workspace), this.serializeSchema(+browser_1.PreferenceScope.Workspace));
        this.inmemoryResources.update(this.getSchemaURIForScope(browser_1.PreferenceScope.Folder), this.serializeSchema(+browser_1.PreferenceScope.Folder));
    };
    PreferencesJsonSchemaContribution.prototype.getSchemaURIForScope = function (scope) {
        return new uri_1.default(PREFERENCE_URI_PREFIX + browser_1.PreferenceScope[scope].toLowerCase());
    };
    PreferencesJsonSchemaContribution.prototype.getFileMatch = function (scope) {
        var baseName = this.preferenceConfigurations.getConfigName() + '.json';
        return [baseName, new uri_1.default(USER_STORAGE_PREFIX + scope).resolve(baseName).toString()];
    };
    __decorate([
        inversify_1.inject(preference_contribution_1.PreferenceSchemaProvider),
        __metadata("design:type", preference_contribution_1.PreferenceSchemaProvider)
    ], PreferencesJsonSchemaContribution.prototype, "schemaProvider", void 0);
    __decorate([
        inversify_1.inject(core_1.InMemoryResources),
        __metadata("design:type", core_1.InMemoryResources)
    ], PreferencesJsonSchemaContribution.prototype, "inmemoryResources", void 0);
    __decorate([
        inversify_1.inject(preference_configurations_1.PreferenceConfigurations),
        __metadata("design:type", preference_configurations_1.PreferenceConfigurations)
    ], PreferencesJsonSchemaContribution.prototype, "preferenceConfigurations", void 0);
    __decorate([
        inversify_1.inject(browser_2.WorkspaceService),
        __metadata("design:type", browser_2.WorkspaceService)
    ], PreferencesJsonSchemaContribution.prototype, "workspaceService", void 0);
    PreferencesJsonSchemaContribution = __decorate([
        inversify_1.injectable()
    ], PreferencesJsonSchemaContribution);
    return PreferencesJsonSchemaContribution;
}());
exports.PreferencesJsonSchemaContribution = PreferencesJsonSchemaContribution;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/preferences-monaco-contribution.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/preferences-monaco-contribution.js ***!
  \****************************************************************************************/
/***/ (() => {

/********************************************************************************
 * Copyright (C) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
monaco.languages.register({
    id: 'jsonc',
    'aliases': [
        'JSON with Comments'
    ],
    'filenames': [
        'settings.json'
    ],
    'extensions': [
        '.theia-workspace'
    ]
});


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/util/preference-scope-command-manager.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/util/preference-scope-command-manager.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2018 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferenceScopeCommandManager = exports.FOLDER_SCOPE_MENU_PATH = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var common_1 = __webpack_require__(/*! @theia/core/lib/common */ "./node_modules/@theia/core/lib/common/index.js");
exports.FOLDER_SCOPE_MENU_PATH = ['preferences:scope.menu'];
var PreferenceScopeCommandManager = /** @class */ (function () {
    function PreferenceScopeCommandManager() {
        this.foldersAsCommands = [];
    }
    PreferenceScopeCommandManager.prototype.createFolderWorkspacesMenu = function (folderWorkspaces, currentFolderURI) {
        var _this = this;
        this.foldersAsCommands.forEach(function (folderCommand) {
            _this.menuModelRegistry.unregisterMenuAction(folderCommand, exports.FOLDER_SCOPE_MENU_PATH);
            _this.commandRegistry.unregisterCommand(folderCommand);
        });
        this.foldersAsCommands.length = 0;
        folderWorkspaces.forEach(function (folderWorkspace) {
            var folderLabel = _this.labelProvider.getName(folderWorkspace.resource);
            var iconClass = currentFolderURI === folderWorkspace.resource.toString() ? 'fa fa-check' : '';
            var newFolderAsCommand = {
                id: "preferenceScopeCommand:" + folderWorkspace.resource.toString(),
                label: folderLabel,
                iconClass: iconClass
            };
            _this.foldersAsCommands.push(newFolderAsCommand);
            _this.commandRegistry.registerCommand(newFolderAsCommand, {
                isVisible: function (callback, check) { return check === 'from-tabbar'; },
                isEnabled: function (callback, check) { return check === 'from-tabbar'; },
                execute: function (callback) {
                    callback({ scope: browser_1.PreferenceScope.Folder, uri: folderWorkspace.resource.toString(), activeScopeIsFolder: true });
                }
            });
            _this.menuModelRegistry.registerMenuAction(exports.FOLDER_SCOPE_MENU_PATH, {
                commandId: newFolderAsCommand.id,
                label: newFolderAsCommand.label
            });
        });
    };
    __decorate([
        inversify_1.inject(common_1.CommandRegistry),
        __metadata("design:type", common_1.CommandRegistry)
    ], PreferenceScopeCommandManager.prototype, "commandRegistry", void 0);
    __decorate([
        inversify_1.inject(common_1.MenuModelRegistry),
        __metadata("design:type", common_1.MenuModelRegistry)
    ], PreferenceScopeCommandManager.prototype, "menuModelRegistry", void 0);
    __decorate([
        inversify_1.inject(browser_1.LabelProvider),
        __metadata("design:type", browser_1.LabelProvider)
    ], PreferenceScopeCommandManager.prototype, "labelProvider", void 0);
    PreferenceScopeCommandManager = __decorate([
        inversify_1.injectable()
    ], PreferenceScopeCommandManager);
    return PreferenceScopeCommandManager;
}());
exports.PreferenceScopeCommandManager = PreferenceScopeCommandManager;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/util/preference-tree-generator.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/util/preference-tree-generator.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2020 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferenceTreeGenerator = exports.COMMONLY_USED_SECTION_PREFIX = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var preference_configurations_1 = __webpack_require__(/*! @theia/core/lib/browser/preferences/preference-configurations */ "./node_modules/@theia/core/lib/browser/preferences/preference-configurations.js");
var core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
var debounce = __webpack_require__(/*! @theia/core/shared/lodash.debounce */ "./node_modules/@theia/core/shared/lodash.debounce.js");
var preference_types_1 = __webpack_require__(/*! ./preference-types */ "./node_modules/@theia/preferences/lib/browser/util/preference-types.js");
exports.COMMONLY_USED_SECTION_PREFIX = 'commonly-used';
var PreferenceTreeGenerator = /** @class */ (function () {
    function PreferenceTreeGenerator() {
        this.onSchemaChangedEmitter = new core_1.Emitter();
        this.onSchemaChanged = this.onSchemaChangedEmitter.event;
        this.commonlyUsedPreferences = [
            'editor.autoSave', 'editor.autoSaveDelay', 'editor.fontSize',
            'editor.fontFamily', 'editor.tabSize', 'editor.renderWhitespace',
            'editor.cursorStyle', 'editor.multiCursorModifier', 'editor.insertSpaces',
            'editor.wordWrap', 'files.exclude', 'files.associations'
        ];
        this.topLevelCategories = new Map([
            [exports.COMMONLY_USED_SECTION_PREFIX, 'Commonly Used'],
            ['editor', 'Text Editor'],
            ['workbench', 'Workbench'],
            ['window', 'Window'],
            ['features', 'Features'],
            ['application', 'Application'],
            ['extensions', 'Extensions']
        ]);
        this.sectionAssignments = new Map([
            ['comments', 'features'],
            ['debug', 'features'],
            ['diffEditor', 'editor'],
            ['explorer', 'features'],
            ['extensions', 'features'],
            ['files', 'editor'],
            ['hosted-plugin', 'features'],
            ['keyboard', 'application'],
            ['output', 'features'],
            ['problems', 'features'],
            ['preview', 'features'],
            ['search', 'features'],
            ['task', 'features'],
            ['terminal', 'features'],
            ['webview', 'features'],
            ['workspace', 'application'],
        ]);
        this.defaultTopLevelCategory = 'extensions';
        this.handleChangedSchema = debounce(this.doHandleChangedSchema, 200);
    }
    Object.defineProperty(PreferenceTreeGenerator.prototype, "root", {
        get: function () {
            var _a;
            return (_a = this._root) !== null && _a !== void 0 ? _a : this.generateTree();
        },
        enumerable: false,
        configurable: true
    });
    PreferenceTreeGenerator.prototype.init = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.schemaProvider.ready];
                    case 1:
                        _a.sent();
                        this.schemaProvider.onDidPreferenceSchemaChanged(function () { return _this.handleChangedSchema(); });
                        this.handleChangedSchema();
                        return [2 /*return*/];
                }
            });
        });
    };
    PreferenceTreeGenerator.prototype.generateTree = function () {
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d;
        var preferencesSchema = this.schemaProvider.getCombinedSchema();
        var propertyNames = Object.keys(preferencesSchema.properties);
        var groups = new Map();
        var root = this.createRootNode();
        try {
            for (var _e = __values(this.topLevelCategories.keys()), _f = _e.next(); !_f.done; _f = _e.next()) {
                var id = _f.value;
                this.getOrCreatePreferencesGroup(id, id, root, groups);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var commonlyUsed = this.getOrCreatePreferencesGroup(exports.COMMONLY_USED_SECTION_PREFIX, exports.COMMONLY_USED_SECTION_PREFIX, root, groups);
        try {
            for (var _g = __values(this.commonlyUsedPreferences), _h = _g.next(); !_h.done; _h = _g.next()) {
                var preference = _h.value;
                if (preference in preferencesSchema.properties) {
                    this.createLeafNode(preference, commonlyUsed, preferencesSchema.properties[preference]);
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var propertyNames_1 = __values(propertyNames), propertyNames_1_1 = propertyNames_1.next(); !propertyNames_1_1.done; propertyNames_1_1 = propertyNames_1.next()) {
                var propertyName = propertyNames_1_1.value;
                if (!this.preferenceConfigs.isSectionName(propertyName) && !browser_1.OVERRIDE_PROPERTY_PATTERN.test(propertyName)) {
                    var labels = propertyName.split('.');
                    var groupID = this.getGroupName(labels);
                    var subgroupName = this.getSubgroupName(labels, groupID);
                    var subgroupID = [groupID, subgroupName].join('.');
                    var toplevelParent = this.getOrCreatePreferencesGroup(groupID, groupID, root, groups);
                    var immediateParent = subgroupName && this.getOrCreatePreferencesGroup(subgroupID, groupID, toplevelParent, groups);
                    this.createLeafNode(propertyName, immediateParent || toplevelParent, preferencesSchema.properties[propertyName]);
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (propertyNames_1_1 && !propertyNames_1_1.done && (_c = propertyNames_1.return)) _c.call(propertyNames_1);
            }
            finally { if (e_3) throw e_3.error; }
        }
        try {
            for (var _j = __values(groups.values()), _k = _j.next(); !_k.done; _k = _j.next()) {
                var group = _k.value;
                if (group.id !== exports.COMMONLY_USED_SECTION_PREFIX + "@" + exports.COMMONLY_USED_SECTION_PREFIX) {
                    group.children.sort(function (a, b) {
                        var aIsComposite = browser_1.CompositeTreeNode.is(a);
                        var bIsComposite = browser_1.CompositeTreeNode.is(b);
                        if (aIsComposite && !bIsComposite) {
                            return 1;
                        }
                        if (bIsComposite && !aIsComposite) {
                            return -1;
                        }
                        return a.id.localeCompare(b.id);
                    });
                }
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_k && !_k.done && (_d = _j.return)) _d.call(_j);
            }
            finally { if (e_4) throw e_4.error; }
        }
        this._root = root;
        return root;
    };
    ;
    PreferenceTreeGenerator.prototype.getGroupName = function (labels) {
        var defaultGroup = labels[0];
        if (this.topLevelCategories.has(defaultGroup)) {
            return defaultGroup;
        }
        var assignedGroup = this.sectionAssignments.get(defaultGroup);
        if (assignedGroup) {
            return assignedGroup;
        }
        return this.defaultTopLevelCategory;
    };
    PreferenceTreeGenerator.prototype.getSubgroupName = function (labels, computedGroupName) {
        if (computedGroupName !== labels[0]) {
            return labels[0];
        }
        else if (labels.length > 2) {
            return labels[1];
        }
    };
    PreferenceTreeGenerator.prototype.doHandleChangedSchema = function () {
        var newTree = this.generateTree();
        this.onSchemaChangedEmitter.fire(newTree);
    };
    PreferenceTreeGenerator.prototype.createRootNode = function () {
        return {
            id: 'root-node-id',
            name: '',
            parent: undefined,
            visible: true,
            children: []
        };
    };
    PreferenceTreeGenerator.prototype.createLeafNode = function (property, preferencesGroup, data) {
        var group = preference_types_1.Preference.TreeNode.getGroupAndIdFromNodeId(preferencesGroup.id).group;
        var newNode = {
            id: group + "@" + property,
            preferenceId: property,
            parent: preferencesGroup,
            visible: true,
            preference: { data: data },
            depth: preference_types_1.Preference.TreeNode.isTopLevel(preferencesGroup) ? 1 : 2,
        };
        browser_1.CompositeTreeNode.addChild(preferencesGroup, newNode);
        return newNode;
    };
    PreferenceTreeGenerator.prototype.createPreferencesGroup = function (id, group, root) {
        var newNode = {
            id: group + "@" + id,
            visible: true,
            parent: root,
            children: [],
            expanded: false,
            selected: false,
            depth: 0,
        };
        var isTopLevel = preference_types_1.Preference.TreeNode.isTopLevel(newNode);
        if (!isTopLevel) {
            delete newNode.expanded;
        }
        newNode.depth = isTopLevel ? 0 : 1;
        browser_1.CompositeTreeNode.addChild(root, newNode);
        return newNode;
    };
    PreferenceTreeGenerator.prototype.getCustomLabelFor = function (id) {
        return this.topLevelCategories.get(id);
    };
    PreferenceTreeGenerator.prototype.getOrCreatePreferencesGroup = function (id, group, root, groups) {
        var existingGroup = groups.get(id);
        if (existingGroup) {
            return existingGroup;
        }
        var newNode = this.createPreferencesGroup(id, group, root);
        groups.set(id, newNode);
        return newNode;
    };
    ;
    __decorate([
        inversify_1.inject(browser_1.PreferenceSchemaProvider),
        __metadata("design:type", browser_1.PreferenceSchemaProvider)
    ], PreferenceTreeGenerator.prototype, "schemaProvider", void 0);
    __decorate([
        inversify_1.inject(preference_configurations_1.PreferenceConfigurations),
        __metadata("design:type", preference_configurations_1.PreferenceConfigurations)
    ], PreferenceTreeGenerator.prototype, "preferenceConfigs", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], PreferenceTreeGenerator.prototype, "init", null);
    PreferenceTreeGenerator = __decorate([
        inversify_1.injectable()
    ], PreferenceTreeGenerator);
    return PreferenceTreeGenerator;
}());
exports.PreferenceTreeGenerator = PreferenceTreeGenerator;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/util/preference-tree-label-provider.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/util/preference-tree-label-provider.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2021 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferenceTreeLabelProvider = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var preference_types_1 = __webpack_require__(/*! ./preference-types */ "./node_modules/@theia/preferences/lib/browser/util/preference-types.js");
var preference_tree_generator_1 = __webpack_require__(/*! ./preference-tree-generator */ "./node_modules/@theia/preferences/lib/browser/util/preference-tree-generator.js");
var PreferenceTreeLabelProvider = /** @class */ (function () {
    function PreferenceTreeLabelProvider() {
    }
    PreferenceTreeLabelProvider.prototype.canHandle = function (element) {
        return browser_1.TreeNode.is(element) && preference_types_1.Preference.TreeNode.is(element) ? 150 : 0;
    };
    PreferenceTreeLabelProvider.prototype.getName = function (node) {
        var _a;
        var id = preference_types_1.Preference.TreeNode.getGroupAndIdFromNodeId(node.id).id;
        return this.formatString((_a = this.treeGenerator.getCustomLabelFor(id)) !== null && _a !== void 0 ? _a : id.split('.').pop());
    };
    PreferenceTreeLabelProvider.prototype.getPrefix = function (node, fullPath) {
        var e_1, _a;
        if (fullPath === void 0) { fullPath = false; }
        var depth = node.depth;
        var _b = preference_types_1.Preference.TreeNode.getGroupAndIdFromNodeId(node.id), id = _b.id, group = _b.group;
        var segments = id.split('.');
        var segmentsHandled = group === segments[0] ? depth : depth - 1;
        segments.pop(); // Ignore the leaf name.
        var prefixSegments = fullPath ? segments : segments.slice(segmentsHandled);
        if (prefixSegments.length) {
            var output = prefixSegments.length > 1 ? this.formatString(prefixSegments[0]) + " \u203A " : this.formatString(prefixSegments[0]) + ": ";
            try {
                for (var _c = __values(prefixSegments.slice(1)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var segment = _d.value;
                    output += this.formatString(segment) + ": ";
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_1) throw e_1.error; }
            }
            return output;
        }
    };
    PreferenceTreeLabelProvider.prototype.formatString = function (string) {
        var formatedString = string[0].toLocaleUpperCase();
        for (var i = 1; i < string.length; i++) {
            if (this.isUpperCase(string[i]) && !/\s/.test(string[i - 1]) && !this.isUpperCase(string[i - 1])) {
                formatedString += ' ';
            }
            formatedString += string[i];
        }
        return formatedString.trim();
    };
    PreferenceTreeLabelProvider.prototype.isUpperCase = function (char) {
        return char === char.toLocaleUpperCase() && char.toLocaleLowerCase() !== char.toLocaleUpperCase();
    };
    __decorate([
        inversify_1.inject(preference_tree_generator_1.PreferenceTreeGenerator),
        __metadata("design:type", preference_tree_generator_1.PreferenceTreeGenerator)
    ], PreferenceTreeLabelProvider.prototype, "treeGenerator", void 0);
    PreferenceTreeLabelProvider = __decorate([
        inversify_1.injectable()
    ], PreferenceTreeLabelProvider);
    return PreferenceTreeLabelProvider;
}());
exports.PreferenceTreeLabelProvider = PreferenceTreeLabelProvider;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/util/preference-types.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/util/preference-types.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2020 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferenceMenus = exports.PreferencesCommands = exports.Preference = void 0;
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var Preference;
(function (Preference) {
    var EditorCommandArgs;
    (function (EditorCommandArgs) {
        function is(prefObject) {
            return !!prefObject && 'id' in prefObject && 'value' in prefObject;
        }
        EditorCommandArgs.is = is;
    })(EditorCommandArgs = Preference.EditorCommandArgs || (Preference.EditorCommandArgs = {}));
    Preference.Node = Symbol('Preference.Node');
    var TreeNode;
    (function (TreeNode) {
        TreeNode.is = function (node) { return 'depth' in node; };
        TreeNode.isTopLevel = function (node) {
            var _a = TreeNode.getGroupAndIdFromNodeId(node.id), group = _a.group, id = _a.id;
            return group === id;
        };
        TreeNode.getGroupAndIdFromNodeId = function (nodeId) {
            var separator = nodeId.indexOf('@');
            var group = nodeId.substring(0, separator);
            var id = nodeId.substring(separator + 1, nodeId.length);
            return { group: group, id: id };
        };
    })(TreeNode = Preference.TreeNode || (Preference.TreeNode = {}));
    var LeafNode;
    (function (LeafNode) {
        LeafNode.is = function (node) { return 'preference' in node && !!node.preference.data; };
    })(LeafNode = Preference.LeafNode || (Preference.LeafNode = {}));
    Preference.getValueInScope = function (preferenceInfo, scope) {
        if (!preferenceInfo) {
            return undefined;
        }
        switch (scope) {
            case browser_1.PreferenceScope.User:
                return preferenceInfo.globalValue;
            case browser_1.PreferenceScope.Workspace:
                return preferenceInfo.workspaceValue;
            case browser_1.PreferenceScope.Folder:
                return preferenceInfo.workspaceFolderValue;
            default:
                return undefined;
        }
    };
    ;
    Preference.DEFAULT_SCOPE = {
        scope: browser_1.PreferenceScope.User,
        uri: undefined,
        activeScopeIsFolder: false
    };
})(Preference = exports.Preference || (exports.Preference = {}));
var PreferencesCommands;
(function (PreferencesCommands) {
    PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR = {
        id: 'preferences:openJson.toolbar',
        iconClass: 'codicon codicon-json'
    };
    PreferencesCommands.COPY_JSON_NAME = {
        id: 'preferences:copyJson.name',
        label: 'Copy Setting ID'
    };
    PreferencesCommands.RESET_PREFERENCE = {
        id: 'preferences:reset',
        label: 'Reset Setting'
    };
    PreferencesCommands.COPY_JSON_VALUE = {
        id: 'preferences:copyJson.value',
        label: 'Copy Setting as JSON',
    };
})(PreferencesCommands = exports.PreferencesCommands || (exports.PreferencesCommands = {}));
var PreferenceMenus;
(function (PreferenceMenus) {
    PreferenceMenus.PREFERENCE_EDITOR_CONTEXT_MENU = ['preferences:editor.contextMenu'];
    PreferenceMenus.PREFERENCE_EDITOR_COPY_ACTIONS = __spread(PreferenceMenus.PREFERENCE_EDITOR_CONTEXT_MENU, ['preferences:editor.contextMenu.copy']);
})(PreferenceMenus = exports.PreferenceMenus || (exports.PreferenceMenus = {}));


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/components/preference-array-input.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/components/preference-array-input.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2021 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferenceArrayInputRenderer = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var preference_node_renderer_1 = __webpack_require__(/*! ./preference-node-renderer */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-node-renderer.js");
var PreferenceArrayInputRenderer = /** @class */ (function (_super) {
    __extends(PreferenceArrayInputRenderer, _super);
    function PreferenceArrayInputRenderer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.existingValues = new Map();
        return _this;
    }
    PreferenceArrayInputRenderer.prototype.createInteractable = function (parent) {
        var e_1, _a;
        var wrapper = document.createElement('ul');
        wrapper.classList.add('preference-array');
        this.wrapper = wrapper;
        var currentValue = this.getValue();
        if (Array.isArray(currentValue)) {
            try {
                for (var _b = __values(currentValue.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var _d = __read(_c.value, 2), index = _d[0], value = _d[1];
                    var node = this.createExistingValue(value);
                    wrapper.appendChild(node);
                    this.existingValues.set(value, { node: node, index: index });
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        var inputWrapper = this.createInput();
        wrapper.appendChild(inputWrapper);
        parent.appendChild(wrapper);
    };
    PreferenceArrayInputRenderer.prototype.getFallbackValue = function () {
        return [];
    };
    PreferenceArrayInputRenderer.prototype.createExistingValue = function (value) {
        var existingValue = document.createElement('li');
        existingValue.classList.add('preference-array-element');
        var valueWrapper = document.createElement('span');
        valueWrapper.classList.add('preference-array-element-val');
        valueWrapper.textContent = value;
        existingValue.appendChild(valueWrapper);
        var iconWrapper = document.createElement('span');
        iconWrapper.classList.add('preference-array-element-btn', 'remove-btn');
        var handler = this.removeItem.bind(this, value);
        iconWrapper.onclick = handler;
        iconWrapper.onkeydown = handler;
        iconWrapper.setAttribute('role', 'button');
        iconWrapper.tabIndex = 0;
        existingValue.appendChild(iconWrapper);
        var icon = document.createElement('i');
        icon.classList.add('preference-array-clear-item');
        iconWrapper.appendChild(icon);
        return existingValue;
    };
    PreferenceArrayInputRenderer.prototype.createInput = function () {
        var inputWrapper = document.createElement('li');
        this.inputWrapper = inputWrapper;
        var input = document.createElement('input');
        inputWrapper.appendChild(input);
        this.interactable = input;
        input.classList.add('preference-array-input', 'theia-input');
        input.type = 'text';
        input.placeholder = 'Add Value...';
        input.onkeydown = this.handleEnter.bind(this);
        input.setAttribute('aria-label', 'Preference String Input');
        var iconWrapper = document.createElement('span');
        inputWrapper.appendChild(iconWrapper);
        iconWrapper.classList.add('preference-array-element-btn', 'add-btn');
        iconWrapper.setAttribute('role', 'button');
        var handler = this.addItem.bind(this);
        iconWrapper.onclick = handler;
        iconWrapper.onkeydown = handler;
        iconWrapper.tabIndex = 0;
        iconWrapper.setAttribute('aria-label', 'Submit Preference Input');
        var icon = document.createElement('i');
        icon.classList.add('fa', 'fa-plus');
        iconWrapper.appendChild(icon);
        return inputWrapper;
    };
    PreferenceArrayInputRenderer.prototype.doHandleValueChange = function () {
        var e_2, _a, e_3, _b;
        this.updateInspection();
        var values = this.getValue();
        var newValues = new (Set.bind.apply(Set, __spread([void 0], values)))();
        try {
            for (var _c = __values(this.existingValues.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {
                var _e = __read(_d.value, 2), value = _e[0], row = _e[1];
                if (!newValues.has(value)) {
                    row.node.remove();
                    this.existingValues.delete(value);
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var _f = __values(values.entries()), _g = _f.next(); !_g.done; _g = _f.next()) {
                var _h = __read(_g.value, 2), index = _h[0], value = _h[1];
                var row = this.existingValues.get(value);
                if (row) {
                    row.index = index;
                }
                else {
                    row = { node: this.createExistingValue(value), index: index };
                    this.existingValues.set(value, row);
                }
                if (this.wrapper.children[index] !== row.node) {
                    this.wrapper.children[index].insertAdjacentElement('beforebegin', row.node);
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_3) throw e_3.error; }
        }
        this.updateModificationStatus();
    };
    PreferenceArrayInputRenderer.prototype.removeItem = function (value) {
        var row = this.existingValues.get(value);
        if (row) {
            row.node.remove();
            this.existingValues.delete(value);
            this.setPreferenceImmediately(this.getOrderedValues());
        }
    };
    PreferenceArrayInputRenderer.prototype.handleEnter = function (e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            this.addItem();
        }
    };
    PreferenceArrayInputRenderer.prototype.addItem = function () {
        var newItem = this.interactable.value;
        if (newItem && !this.existingValues.has(newItem)) {
            var node = this.createExistingValue(newItem);
            this.inputWrapper.insertAdjacentElement('beforebegin', node);
            this.existingValues.set(newItem, { node: node, index: this.existingValues.size });
            this.setPreferenceImmediately(this.getOrderedValues());
        }
        this.interactable.value = '';
    };
    PreferenceArrayInputRenderer.prototype.getOrderedValues = function () {
        return Array.from(this.existingValues.entries())
            .sort(function (_a, _b) {
            var _c = __read(_a, 2), a = _c[1];
            var _d = __read(_b, 2), b = _d[1];
            return a.index - b.index;
        })
            .map(function (_a) {
            var _b = __read(_a, 1), value = _b[0];
            return value;
        });
    };
    PreferenceArrayInputRenderer.prototype.dispose = function () {
        this.existingValues.clear();
        _super.prototype.dispose.call(this);
    };
    PreferenceArrayInputRenderer = __decorate([
        inversify_1.injectable()
    ], PreferenceArrayInputRenderer);
    return PreferenceArrayInputRenderer;
}(preference_node_renderer_1.PreferenceLeafNodeRenderer));
exports.PreferenceArrayInputRenderer = PreferenceArrayInputRenderer;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/components/preference-boolean-input.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/components/preference-boolean-input.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2021 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferenceBooleanInputRenderer = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var preference_node_renderer_1 = __webpack_require__(/*! ./preference-node-renderer */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-node-renderer.js");
var PreferenceBooleanInputRenderer = /** @class */ (function (_super) {
    __extends(PreferenceBooleanInputRenderer, _super);
    function PreferenceBooleanInputRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PreferenceBooleanInputRenderer.prototype.createInteractable = function (parent) {
        var interactable = document.createElement('input');
        this.interactable = interactable;
        interactable.type = 'checkbox';
        interactable.classList.add('theia-input');
        interactable.defaultChecked = this.getValue();
        interactable.onchange = this.handleUserInteraction.bind(this);
        parent.appendChild(interactable);
    };
    PreferenceBooleanInputRenderer.prototype.getFallbackValue = function () {
        return false;
    };
    PreferenceBooleanInputRenderer.prototype.handleUserInteraction = function () {
        return this.setPreferenceImmediately(this.interactable.checked);
    };
    PreferenceBooleanInputRenderer.prototype.doHandleValueChange = function () {
        var currentValue = this.interactable.checked;
        this.updateInspection();
        var newValue = this.getValue();
        this.updateModificationStatus(newValue);
        if (newValue !== currentValue && document.activeElement !== this.interactable) {
            this.interactable.checked = newValue;
        }
    };
    PreferenceBooleanInputRenderer = __decorate([
        inversify_1.injectable()
    ], PreferenceBooleanInputRenderer);
    return PreferenceBooleanInputRenderer;
}(preference_node_renderer_1.PreferenceLeafNodeRenderer));
exports.PreferenceBooleanInputRenderer = PreferenceBooleanInputRenderer;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/components/preference-json-input.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/components/preference-json-input.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2021 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferenceJSONLinkRenderer = void 0;
var preference_node_renderer_1 = __webpack_require__(/*! ./preference-node-renderer */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-node-renderer.js");
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var common_1 = __webpack_require__(/*! @theia/core/lib/common */ "./node_modules/@theia/core/lib/common/index.js");
var preference_types_1 = __webpack_require__(/*! ../../util/preference-types */ "./node_modules/@theia/preferences/lib/browser/util/preference-types.js");
var PreferenceJSONLinkRenderer = /** @class */ (function (_super) {
    __extends(PreferenceJSONLinkRenderer, _super);
    function PreferenceJSONLinkRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PreferenceJSONLinkRenderer.prototype.createInteractable = function (parent) {
        var message = 'Edit in settings.json';
        var interactable = document.createElement('a');
        this.interactable = interactable;
        interactable.classList.add('theia-json-input');
        interactable.setAttribute('role', 'button');
        interactable.title = message;
        interactable.textContent = message;
        interactable.onclick = this.handleUserInteraction.bind(this);
        interactable.onkeydown = this.handleUserInteraction.bind(this);
        parent.appendChild(interactable);
    };
    PreferenceJSONLinkRenderer.prototype.getFallbackValue = function () {
        var node = this.preferenceNode;
        var type = Array.isArray(node.preference.data.type) ? node.preference.data.type[0] : node.preference.data.type;
        switch (type) {
            case 'object':
                return {};
            case 'array':
                return [];
            case 'null':
                return null; // eslint-disable-line no-null/no-null
            default: // Should all be handled by other input types.
                return '';
        }
    };
    PreferenceJSONLinkRenderer.prototype.doHandleValueChange = function () {
        this.updateInspection();
        this.updateModificationStatus();
    };
    PreferenceJSONLinkRenderer.prototype.handleUserInteraction = function () {
        this.commandService.executeCommand(preference_types_1.PreferencesCommands.OPEN_PREFERENCES_JSON_TOOLBAR.id, this.id);
    };
    __decorate([
        inversify_1.inject(common_1.CommandService),
        __metadata("design:type", Object)
    ], PreferenceJSONLinkRenderer.prototype, "commandService", void 0);
    PreferenceJSONLinkRenderer = __decorate([
        inversify_1.injectable()
    ], PreferenceJSONLinkRenderer);
    return PreferenceJSONLinkRenderer;
}(preference_node_renderer_1.PreferenceLeafNodeRenderer));
exports.PreferenceJSONLinkRenderer = PreferenceJSONLinkRenderer;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/components/preference-node-renderer.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/components/preference-node-renderer.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2020 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferenceLeafNodeRenderer = exports.PreferenceHeaderRenderer = exports.PreferenceNodeRenderer = exports.SUBHEADER_CLASS = exports.HEADER_CLASS = exports.PreferenceNodeRendererFactory = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var preference_types_1 = __webpack_require__(/*! ../../util/preference-types */ "./node_modules/@theia/preferences/lib/browser/util/preference-types.js");
var preference_tree_label_provider_1 = __webpack_require__(/*! ../../util/preference-tree-label-provider */ "./node_modules/@theia/preferences/lib/browser/util/preference-tree-label-provider.js");
var preference_scope_tabbar_widget_1 = __webpack_require__(/*! ../preference-scope-tabbar-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-scope-tabbar-widget.js");
var debounce = __webpack_require__(/*! @theia/core/shared/lodash.debounce */ "./node_modules/@theia/core/shared/lodash.debounce.js");
var preference_tree_model_1 = __webpack_require__(/*! ../../preference-tree-model */ "./node_modules/@theia/preferences/lib/browser/preference-tree-model.js");
var preference_searchbar_widget_1 = __webpack_require__(/*! ../preference-searchbar-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-searchbar-widget.js");
exports.PreferenceNodeRendererFactory = Symbol('PreferenceNodeRendererFactory');
exports.HEADER_CLASS = 'settings-section-category-title';
exports.SUBHEADER_CLASS = 'settings-section-subcategory-title';
var PreferenceNodeRenderer = /** @class */ (function () {
    function PreferenceNodeRenderer() {
        this.attached = false;
    }
    Object.defineProperty(PreferenceNodeRenderer.prototype, "node", {
        get: function () {
            return this.domNode;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PreferenceNodeRenderer.prototype, "nodeId", {
        get: function () {
            return this.preferenceNode.id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PreferenceNodeRenderer.prototype, "id", {
        get: function () {
            return this._id;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PreferenceNodeRenderer.prototype, "group", {
        get: function () {
            return this._group;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PreferenceNodeRenderer.prototype, "visible", {
        get: function () {
            return !this.node.classList.contains('hidden');
        },
        enumerable: false,
        configurable: true
    });
    PreferenceNodeRenderer.prototype.init = function () {
        this.setId();
        this.domNode = this.createDomNode();
    };
    PreferenceNodeRenderer.prototype.setId = function () {
        var _a;
        var _b = preference_types_1.Preference.TreeNode.getGroupAndIdFromNodeId(this.preferenceNode.id), id = _b.id, group = _b.group;
        var segments = id.split('.');
        this._id = id;
        this._group = group;
        this._subgroup = (_a = (group === segments[0] ? segments[1] : segments[0])) !== null && _a !== void 0 ? _a : '';
    };
    PreferenceNodeRenderer.prototype.insertBefore = function (nextSibling) {
        nextSibling.insertAdjacentElement('beforebegin', this.domNode);
        this.attached = true;
    };
    PreferenceNodeRenderer.prototype.insertAfter = function (previousSibling) {
        previousSibling.insertAdjacentElement('afterend', this.domNode);
    };
    PreferenceNodeRenderer.prototype.appendTo = function (parent) {
        parent.appendChild(this.domNode);
    };
    PreferenceNodeRenderer.prototype.prependTo = function (parent) {
        parent.prepend(this.domNode);
    };
    PreferenceNodeRenderer.prototype.hide = function () {
        this.domNode.classList.add('hidden');
    };
    PreferenceNodeRenderer.prototype.show = function () {
        this.domNode.classList.remove('hidden');
    };
    PreferenceNodeRenderer.prototype.dispose = function () {
        this.domNode.remove();
    };
    __decorate([
        inversify_1.inject(preference_types_1.Preference.Node),
        __metadata("design:type", Object)
    ], PreferenceNodeRenderer.prototype, "preferenceNode", void 0);
    __decorate([
        inversify_1.inject(preference_tree_label_provider_1.PreferenceTreeLabelProvider),
        __metadata("design:type", preference_tree_label_provider_1.PreferenceTreeLabelProvider)
    ], PreferenceNodeRenderer.prototype, "labelProvider", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], PreferenceNodeRenderer.prototype, "init", null);
    PreferenceNodeRenderer = __decorate([
        inversify_1.injectable()
    ], PreferenceNodeRenderer);
    return PreferenceNodeRenderer;
}());
exports.PreferenceNodeRenderer = PreferenceNodeRenderer;
var PreferenceHeaderRenderer = /** @class */ (function (_super) {
    __extends(PreferenceHeaderRenderer, _super);
    function PreferenceHeaderRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PreferenceHeaderRenderer.prototype.createDomNode = function () {
        var wrapper = document.createElement('ul');
        wrapper.className = 'settings-section';
        wrapper.id = this.preferenceNode.id + "-editor";
        var isCategory = preference_types_1.Preference.TreeNode.isTopLevel(this.preferenceNode);
        var hierarchyClassName = isCategory ? exports.HEADER_CLASS : exports.SUBHEADER_CLASS;
        var name = this.labelProvider.getName(this.preferenceNode);
        var label = document.createElement('li');
        label.classList.add('settings-section-title', hierarchyClassName);
        label.textContent = name;
        wrapper.appendChild(label);
        return wrapper;
    };
    return PreferenceHeaderRenderer;
}(PreferenceNodeRenderer));
exports.PreferenceHeaderRenderer = PreferenceHeaderRenderer;
var PreferenceLeafNodeRenderer = /** @class */ (function (_super) {
    __extends(PreferenceLeafNodeRenderer, _super);
    function PreferenceLeafNodeRenderer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isModifiedFromDefault = false;
        _this.setPreferenceWithDebounce = debounce(_this.setPreferenceImmediately.bind(_this), 500, { leading: false, trailing: true });
        return _this;
    }
    PreferenceLeafNodeRenderer.prototype.init = function () {
        this.setId();
        this.updateInspection();
        this.domNode = this.createDomNode();
        this.updateModificationStatus();
    };
    PreferenceLeafNodeRenderer.prototype.updateInspection = function () {
        this.inspection = this.preferenceService.inspect(this.id, this.scopeTracker.currentScope.uri);
    };
    PreferenceLeafNodeRenderer.prototype.createDomNode = function () {
        var wrapper = document.createElement('li');
        wrapper.classList.add('single-pref');
        wrapper.id = this.id + "-editor";
        wrapper.setAttribute('data-pref-id', this.id);
        wrapper.setAttribute('data-node-id', this.preferenceNode.id);
        var headlineWrapper = document.createElement('div');
        headlineWrapper.classList.add('pref-name');
        headlineWrapper.title = this.id;
        this.headlineWrapper = headlineWrapper;
        wrapper.appendChild(headlineWrapper);
        this.updateHeadline();
        var gutter = document.createElement('div');
        gutter.classList.add('pref-context-gutter');
        this.gutter = gutter;
        wrapper.appendChild(gutter);
        var cog = document.createElement('i');
        cog.className = 'codicon codicon-settings-gear settings-context-menu-btn';
        cog.setAttribute('aria-label', 'Open Context Menu');
        cog.setAttribute('role', 'button');
        cog.onclick = this.handleCogAction.bind(this);
        cog.onkeydown = this.handleCogAction.bind(this);
        cog.title = 'More actions...';
        gutter.appendChild(cog);
        var activeType = Array.isArray(this.preferenceNode.preference.data.type) ? this.preferenceNode.preference.data.type[0] : this.preferenceNode.preference.data.type;
        var contentWrapper = document.createElement('div');
        contentWrapper.classList.add('pref-content-container', activeType !== null && activeType !== void 0 ? activeType : 'open-json');
        wrapper.appendChild(contentWrapper);
        var _a = this.preferenceNode.preference.data, description = _a.description, markdownDescription = _a.markdownDescription;
        var descriptionToUse = markdownDescription || description;
        if (descriptionToUse) {
            var descriptionWrapper = document.createElement('div');
            descriptionWrapper.classList.add('pref-description');
            descriptionWrapper.textContent = descriptionToUse;
            contentWrapper.appendChild(descriptionWrapper);
        }
        var interactableWrapper = document.createElement('div');
        interactableWrapper.classList.add('pref-input');
        contentWrapper.appendChild(interactableWrapper);
        this.createInteractable(interactableWrapper);
        return wrapper;
    };
    PreferenceLeafNodeRenderer.prototype.handleCogAction = function (_a) {
        var _this = this;
        var _b, _c;
        var currentTarget = _a.currentTarget;
        var value = (_b = preference_types_1.Preference.getValueInScope(this.inspection, this.scopeTracker.currentScope.scope)) !== null && _b !== void 0 ? _b : (_c = this.inspection) === null || _c === void 0 ? void 0 : _c.defaultValue;
        var target = currentTarget;
        if (target && value !== undefined) {
            this.showCog();
            var domRect = target.getBoundingClientRect();
            this.menuRenderer.render({
                menuPath: preference_types_1.PreferenceMenus.PREFERENCE_EDITOR_CONTEXT_MENU,
                anchor: { x: domRect.left, y: domRect.bottom },
                args: [{ id: this.id, value: value }],
                onHide: function () { return _this.hideCog(); }
            });
        }
    };
    PreferenceLeafNodeRenderer.prototype.addModifiedMarking = function () {
        this.gutter.classList.add('theia-mod-item-modified');
    };
    PreferenceLeafNodeRenderer.prototype.removeModifiedMarking = function () {
        this.gutter.classList.remove('theia-mod-item-modified');
    };
    PreferenceLeafNodeRenderer.prototype.showCog = function () {
        this.gutter.classList.add('show-cog');
    };
    PreferenceLeafNodeRenderer.prototype.hideCog = function () {
        this.gutter.classList.remove('show-cog');
    };
    PreferenceLeafNodeRenderer.prototype.updateModificationStatus = function (knownCurrentValue) {
        var wasModified = this.isModifiedFromDefault;
        var inspection = this.inspection;
        var valueInCurrentScope = knownCurrentValue !== null && knownCurrentValue !== void 0 ? knownCurrentValue : preference_types_1.Preference.getValueInScope(inspection, this.scopeTracker.currentScope.scope);
        this.isModifiedFromDefault = valueInCurrentScope !== undefined && !browser_1.PreferenceProvider.deepEqual(valueInCurrentScope, inspection === null || inspection === void 0 ? void 0 : inspection.defaultValue);
        if (wasModified !== this.isModifiedFromDefault) {
            this.gutter.classList.toggle('theia-mod-item-modified', this.isModifiedFromDefault);
        }
    };
    PreferenceLeafNodeRenderer.prototype.updateHeadline = function (filtered) {
        if (filtered === void 0) { filtered = this.model.isFiltered; }
        var headlineWrapper = this.headlineWrapper;
        if (this.headlineWrapper.childElementCount === 0) {
            var name_1 = this.labelProvider.getName(this.preferenceNode);
            var nameWrapper = document.createElement('span');
            nameWrapper.classList.add('preference-leaf-headline-name');
            nameWrapper.textContent = name_1;
            headlineWrapper.appendChild(nameWrapper);
        }
        var prefix = this.labelProvider.getPrefix(this.preferenceNode, filtered);
        var currentFirstChild = headlineWrapper.children[0];
        var currentFirstChildIsPrefix = currentFirstChild.classList.contains('preference-leaf-headline-prefix');
        if (prefix) {
            var prefixWrapper = void 0;
            if (currentFirstChildIsPrefix) {
                prefixWrapper = currentFirstChild;
            }
            else {
                prefixWrapper = document.createElement('span');
                prefixWrapper.classList.add('preference-leaf-headline-prefix');
                headlineWrapper.insertBefore(prefixWrapper, currentFirstChild);
            }
            prefixWrapper.textContent = prefix;
        }
        else if (currentFirstChildIsPrefix) {
            headlineWrapper.removeChild(currentFirstChild);
        }
        var currentLastChild = headlineWrapper.lastChild;
        if (currentLastChild.classList.contains('preference-leaf-headline-suffix')) {
            this.compareOtherModifiedScopes(headlineWrapper, currentLastChild);
        }
        else {
            this.createOtherModifiedScopes(headlineWrapper);
        }
    };
    PreferenceLeafNodeRenderer.prototype.compareOtherModifiedScopes = function (headlineWrapper, currentSuffix) {
        var modifiedScopes = this.getModifiedScopesAsStrings();
        if (modifiedScopes.length === 0) {
            headlineWrapper.removeChild(currentSuffix);
        }
        else {
            var modifiedMessagePrefix = currentSuffix.children[0];
            var newMessagePrefix = this.getModifiedMessagePrefix();
            if (modifiedMessagePrefix.textContent !== newMessagePrefix) {
                modifiedMessagePrefix.textContent = newMessagePrefix;
            }
            var _a = __read(modifiedScopes, 2), firstModifiedScope = _a[0], secondModifiedScope = _a[1];
            var firstScopeMessage = currentSuffix.children[1];
            var secondScopeMessage = currentSuffix.children[2];
            firstScopeMessage.children[0].textContent = browser_1.PreferenceScope[firstModifiedScope];
            this.addEventHandlerToModifiedScope(firstModifiedScope, firstScopeMessage.children[0]);
            if (modifiedScopes.length === 1 && secondScopeMessage) {
                currentSuffix.removeChild(secondScopeMessage);
            }
            else if (modifiedScopes.length === 2 && !secondScopeMessage) {
                var newSecondMessage = this.createModifiedScopeMessage(secondModifiedScope);
                currentSuffix.appendChild(newSecondMessage);
            }
            // If both scopes are modified and both messages are present, do nothing.
        }
    };
    PreferenceLeafNodeRenderer.prototype.createOtherModifiedScopes = function (headlineWrapper) {
        var _this = this;
        var modifiedScopes = this.getModifiedScopesAsStrings();
        if (modifiedScopes.length !== 0) {
            var wrapper_1 = document.createElement('i');
            wrapper_1.classList.add('preference-leaf-headline-suffix');
            headlineWrapper.appendChild(wrapper_1);
            var messagePrefix = this.getModifiedMessagePrefix();
            var messageWrapper = document.createElement('span');
            messageWrapper.classList.add('preference-other-modified-scope-alert');
            messageWrapper.textContent = messagePrefix;
            wrapper_1.appendChild(messageWrapper);
            modifiedScopes.forEach(function (scopeName, i) {
                var scopeWrapper = _this.createModifiedScopeMessage(scopeName);
                wrapper_1.appendChild(scopeWrapper);
            });
        }
    };
    PreferenceLeafNodeRenderer.prototype.createModifiedScopeMessage = function (scope) {
        var scopeWrapper = document.createElement('span');
        scopeWrapper.classList.add('preference-modified-scope-wrapper');
        var scopeInteractable = document.createElement('span');
        scopeInteractable.classList.add('preference-scope-underlined');
        var scopeName = browser_1.PreferenceScope[scope];
        this.addEventHandlerToModifiedScope(scope, scopeInteractable);
        scopeInteractable.textContent = scopeName;
        scopeWrapper.appendChild(scopeInteractable);
        return scopeWrapper;
    };
    PreferenceLeafNodeRenderer.prototype.getModifiedMessagePrefix = function () {
        return this.isModifiedFromDefault ? 'Also modified in: ' : 'Modified in: ';
    };
    PreferenceLeafNodeRenderer.prototype.addEventHandlerToModifiedScope = function (scope, scopeWrapper) {
        var _this = this;
        if (scope === browser_1.PreferenceScope.User || scope === browser_1.PreferenceScope.Workspace) {
            var eventHandler = function () {
                _this.scopeTracker.setScope(scope);
                _this.searchbar.updateSearchTerm(_this.id);
            };
            scopeWrapper.onclick = eventHandler;
            scopeWrapper.onkeydown = eventHandler;
            scopeWrapper.tabIndex = 0;
        }
        else {
            scopeWrapper.onclick = null; // eslint-disable-line no-null/no-null
            scopeWrapper.onkeydown = null; // eslint-disable-line no-null/no-null
            scopeWrapper.tabIndex = -1;
        }
    };
    PreferenceLeafNodeRenderer.prototype.getModifiedScopesAsStrings = function () {
        var e_1, _a;
        var currentScopeInView = this.scopeTracker.currentScope.scope;
        var inspection = this.inspection;
        var modifiedScopes = [];
        if (inspection) {
            try {
                for (var _b = __values([browser_1.PreferenceScope.User, browser_1.PreferenceScope.Workspace]), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var otherScope = _c.value;
                    if (otherScope !== currentScopeInView) {
                        var valueInOtherScope = preference_types_1.Preference.getValueInScope(inspection, otherScope);
                        if (valueInOtherScope !== undefined && !browser_1.PreferenceProvider.deepEqual(valueInOtherScope, inspection.defaultValue)) {
                            modifiedScopes.push(otherScope);
                        }
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        return modifiedScopes;
    };
    PreferenceLeafNodeRenderer.prototype.getValue = function () {
        var _a;
        var currentValue = preference_types_1.Preference.getValueInScope(this.inspection, this.scopeTracker.currentScope.scope);
        if (currentValue === undefined) {
            currentValue = (_a = this.inspection) === null || _a === void 0 ? void 0 : _a.defaultValue;
        }
        return currentValue !== null && currentValue !== void 0 ? currentValue : this.getFallbackValue();
    };
    PreferenceLeafNodeRenderer.prototype.setPreferenceImmediately = function (value) {
        return this.preferenceService.set(this.id, value, this.scopeTracker.currentScope.scope, this.scopeTracker.currentScope.uri);
    };
    PreferenceLeafNodeRenderer.prototype.handleSearchChange = function (isFiltered) {
        if (isFiltered === void 0) { isFiltered = this.model.isFiltered; }
        this.updateHeadline(isFiltered);
    };
    PreferenceLeafNodeRenderer.prototype.handleScopeChange = function (isFiltered) {
        if (isFiltered === void 0) { isFiltered = this.model.isFiltered; }
        this.handleValueChange();
        this.updateHeadline(isFiltered);
    };
    PreferenceLeafNodeRenderer.prototype.handleValueChange = function () {
        this.doHandleValueChange();
        this.updateHeadline();
    };
    __decorate([
        inversify_1.inject(preference_types_1.Preference.Node),
        __metadata("design:type", Object)
    ], PreferenceLeafNodeRenderer.prototype, "preferenceNode", void 0);
    __decorate([
        inversify_1.inject(browser_1.PreferenceService),
        __metadata("design:type", Object)
    ], PreferenceLeafNodeRenderer.prototype, "preferenceService", void 0);
    __decorate([
        inversify_1.inject(browser_1.ContextMenuRenderer),
        __metadata("design:type", browser_1.ContextMenuRenderer)
    ], PreferenceLeafNodeRenderer.prototype, "menuRenderer", void 0);
    __decorate([
        inversify_1.inject(preference_scope_tabbar_widget_1.PreferencesScopeTabBar),
        __metadata("design:type", preference_scope_tabbar_widget_1.PreferencesScopeTabBar)
    ], PreferenceLeafNodeRenderer.prototype, "scopeTracker", void 0);
    __decorate([
        inversify_1.inject(preference_tree_model_1.PreferenceTreeModel),
        __metadata("design:type", preference_tree_model_1.PreferenceTreeModel)
    ], PreferenceLeafNodeRenderer.prototype, "model", void 0);
    __decorate([
        inversify_1.inject(preference_searchbar_widget_1.PreferencesSearchbarWidget),
        __metadata("design:type", preference_searchbar_widget_1.PreferencesSearchbarWidget)
    ], PreferenceLeafNodeRenderer.prototype, "searchbar", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], PreferenceLeafNodeRenderer.prototype, "init", null);
    PreferenceLeafNodeRenderer = __decorate([
        inversify_1.injectable()
    ], PreferenceLeafNodeRenderer);
    return PreferenceLeafNodeRenderer;
}(PreferenceNodeRenderer));
exports.PreferenceLeafNodeRenderer = PreferenceLeafNodeRenderer;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/components/preference-number-input.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/components/preference-number-input.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2021 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferenceNumberInputRenderer = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var preference_node_renderer_1 = __webpack_require__(/*! ./preference-node-renderer */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-node-renderer.js");
var PreferenceNumberInputRenderer = /** @class */ (function (_super) {
    __extends(PreferenceNumberInputRenderer, _super);
    function PreferenceNumberInputRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(PreferenceNumberInputRenderer.prototype, "errorMessage", {
        get: function () {
            if (!this._errorMessage) {
                var errorMessage = document.createElement('div');
                errorMessage.classList.add('pref-error-notification');
                this._errorMessage = errorMessage;
            }
            return this._errorMessage;
        },
        enumerable: false,
        configurable: true
    });
    PreferenceNumberInputRenderer.prototype.createInteractable = function (parent) {
        var interactableWrapper = document.createElement('div');
        this.interactableWrapper = interactableWrapper;
        interactableWrapper.classList.add('pref-input-container');
        var interactable = document.createElement('input');
        this.interactable = interactable;
        interactable.type = 'number';
        interactable.classList.add('theia-input');
        interactable.defaultValue = this.getValue().toString();
        interactable.oninput = this.handleUserInteraction.bind(this);
        interactable.onblur = this.handleBlur.bind(this);
        interactableWrapper.appendChild(interactable);
        parent.appendChild(interactableWrapper);
    };
    PreferenceNumberInputRenderer.prototype.getFallbackValue = function () {
        return 0;
    };
    PreferenceNumberInputRenderer.prototype.handleUserInteraction = function () {
        var _a = this.getInputValidation(this.interactable.value), value = _a.value, message = _a.message;
        if (isNaN(value)) {
            this.showErrorMessage(message);
        }
        else {
            this.hideErrorMessage();
            this.setPreferenceWithDebounce(value);
        }
    };
    PreferenceNumberInputRenderer.prototype.handleBlur = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.hideErrorMessage();
                        return [4 /*yield*/, this.setPreferenceWithDebounce.flush()];
                    case 1:
                        _a.sent();
                        this.handleValueChange();
                        return [2 /*return*/];
                }
            });
        });
    };
    PreferenceNumberInputRenderer.prototype.doHandleValueChange = function () {
        var value = this.interactable.value;
        var currentValue = value.length ? Number(value) : NaN;
        this.updateInspection();
        var newValue = this.getValue();
        this.updateModificationStatus(newValue);
        if (newValue !== currentValue) {
            if (document.activeElement !== this.interactable) {
                this.interactable.value = newValue.toString();
            }
            else {
                this.handleUserInteraction(); // give priority to the value of the input if it is focused.
            }
        }
    };
    PreferenceNumberInputRenderer.prototype.getInputValidation = function (input) {
        var data = this.preferenceNode.preference.data;
        var inputValue = Number(input);
        var errorMessages = [];
        if (input === '' || isNaN(inputValue)) {
            return { value: NaN, message: 'Value must be a number.' };
        }
        if (data.minimum && inputValue < data.minimum) {
            errorMessages.push("Value must be greater than or equal to " + data.minimum + ".");
        }
        ;
        if (data.maximum && inputValue > data.maximum) {
            errorMessages.push("Value must be less than or equal to " + data.maximum + ".");
        }
        ;
        if (data.type === 'integer' && !Number.isInteger(inputValue)) {
            errorMessages.push('Value must be an integer.');
        }
        return {
            value: errorMessages.length ? NaN : inputValue,
            message: errorMessages.join(' ')
        };
    };
    PreferenceNumberInputRenderer.prototype.showErrorMessage = function (message) {
        this.errorMessage.textContent = message;
        this.interactableWrapper.appendChild(this.errorMessage);
    };
    PreferenceNumberInputRenderer.prototype.hideErrorMessage = function () {
        this.errorMessage.remove();
    };
    PreferenceNumberInputRenderer = __decorate([
        inversify_1.injectable()
    ], PreferenceNumberInputRenderer);
    return PreferenceNumberInputRenderer;
}(preference_node_renderer_1.PreferenceLeafNodeRenderer));
exports.PreferenceNumberInputRenderer = PreferenceNumberInputRenderer;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/components/preference-select-input.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/components/preference-select-input.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2021 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferenceSelectInputRenderer = void 0;
var preference_node_renderer_1 = __webpack_require__(/*! ./preference-node-renderer */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-node-renderer.js");
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var PreferenceSelectInputRenderer = /** @class */ (function (_super) {
    __extends(PreferenceSelectInputRenderer, _super);
    function PreferenceSelectInputRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PreferenceSelectInputRenderer.prototype.createInteractable = function (parent) {
        var e_1, _a;
        var options = this.preferenceNode.preference.data.enum;
        var interactable = document.createElement('select');
        this.interactable = interactable;
        interactable.classList.add('theia-select');
        interactable.onchange = this.handleUserInteraction.bind(this);
        try {
            for (var options_1 = __values(options), options_1_1 = options_1.next(); !options_1_1.done; options_1_1 = options_1.next()) {
                var value = options_1_1.value;
                var option = document.createElement('option');
                option.value = value;
                option.textContent = value;
                interactable.appendChild(option);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (options_1_1 && !options_1_1.done && (_a = options_1.return)) _a.call(options_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        interactable.value = this.getValue();
        parent.appendChild(interactable);
    };
    PreferenceSelectInputRenderer.prototype.getFallbackValue = function () {
        return this.preferenceNode.preference.data.enum[0];
    };
    PreferenceSelectInputRenderer.prototype.doHandleValueChange = function () {
        var currentValue = this.interactable.value || undefined;
        this.updateInspection();
        var newValue = this.getValue();
        this.updateModificationStatus(newValue);
        if (newValue !== currentValue && document.activeElement !== this.interactable) {
            this.interactable.value = newValue;
        }
    };
    PreferenceSelectInputRenderer.prototype.handleUserInteraction = function () {
        this.setPreferenceImmediately(this.interactable.value || undefined);
    };
    PreferenceSelectInputRenderer = __decorate([
        inversify_1.injectable()
    ], PreferenceSelectInputRenderer);
    return PreferenceSelectInputRenderer;
}(preference_node_renderer_1.PreferenceLeafNodeRenderer));
exports.PreferenceSelectInputRenderer = PreferenceSelectInputRenderer;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/components/preference-string-input.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/components/preference-string-input.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2021 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferenceStringInputRenderer = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var preference_node_renderer_1 = __webpack_require__(/*! ./preference-node-renderer */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-node-renderer.js");
var PreferenceStringInputRenderer = /** @class */ (function (_super) {
    __extends(PreferenceStringInputRenderer, _super);
    function PreferenceStringInputRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PreferenceStringInputRenderer.prototype.createInteractable = function (parent) {
        var interactable = document.createElement('input');
        this.interactable = interactable;
        interactable.type = 'text';
        interactable.classList.add('theia-input');
        interactable.defaultValue = this.getValue();
        interactable.oninput = this.handleUserInteraction.bind(this);
        interactable.onblur = this.handleBlur.bind(this);
        parent.appendChild(interactable);
    };
    PreferenceStringInputRenderer.prototype.getFallbackValue = function () {
        return '';
    };
    PreferenceStringInputRenderer.prototype.doHandleValueChange = function () {
        var currentValue = this.interactable.value;
        this.updateInspection();
        var newValue = this.getValue();
        this.updateModificationStatus(newValue);
        if (newValue !== currentValue) {
            if (document.activeElement !== this.interactable) {
                this.interactable.value = newValue;
            }
            else {
                this.handleUserInteraction(); // give priority to the value of the input if it is focused.
            }
        }
    };
    PreferenceStringInputRenderer.prototype.handleUserInteraction = function () {
        this.setPreferenceWithDebounce(this.interactable.value);
    };
    PreferenceStringInputRenderer.prototype.handleBlur = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.setPreferenceWithDebounce.flush()];
                    case 1:
                        _a.sent();
                        this.handleValueChange();
                        return [2 /*return*/];
                }
            });
        });
    };
    PreferenceStringInputRenderer = __decorate([
        inversify_1.injectable()
    ], PreferenceStringInputRenderer);
    return PreferenceStringInputRenderer;
}(preference_node_renderer_1.PreferenceLeafNodeRenderer));
exports.PreferenceStringInputRenderer = PreferenceStringInputRenderer;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/preference-editor-widget.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/preference-editor-widget.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2020 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferencesEditorWidget = void 0;
/* eslint-disable @typescript-eslint/no-explicit-any */
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var throttle = __webpack_require__(/*! @theia/core/shared/lodash.throttle */ "./node_modules/@theia/core/shared/lodash.throttle.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var common_1 = __webpack_require__(/*! @theia/core/lib/common */ "./node_modules/@theia/core/lib/common/index.js");
var widget_1 = __webpack_require__(/*! @theia/core/lib/browser/widgets/widget */ "./node_modules/@theia/core/lib/browser/widgets/widget.js");
var preference_tree_model_1 = __webpack_require__(/*! ../preference-tree-model */ "./node_modules/@theia/preferences/lib/browser/preference-tree-model.js");
var preference_node_renderer_1 = __webpack_require__(/*! ./components/preference-node-renderer */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-node-renderer.js");
var preference_types_1 = __webpack_require__(/*! ../util/preference-types */ "./node_modules/@theia/preferences/lib/browser/util/preference-types.js");
var preference_tree_generator_1 = __webpack_require__(/*! ../util/preference-tree-generator */ "./node_modules/@theia/preferences/lib/browser/util/preference-tree-generator.js");
var preference_scope_tabbar_widget_1 = __webpack_require__(/*! ./preference-scope-tabbar-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-scope-tabbar-widget.js");
var PreferencesEditorWidget = /** @class */ (function (_super) {
    __extends(PreferencesEditorWidget, _super);
    function PreferencesEditorWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.scrollOptions = widget_1.DEFAULT_SCROLL_OPTIONS;
        /**
         * Guards against scroll events and selection events looping into each other. Set before this widget initiates a selection.
         */
        _this.currentModelSelectionId = '';
        /**
         * Permits the user to expand multiple nodes without each one being collapsed on a new selection.
         */
        _this.lastUserSelection = '';
        _this.isAtScrollTop = true;
        _this.firstVisibleChildID = '';
        _this.renderers = new Map();
        // The commonly used section will duplicate preference ID's, so we'll keep a separate list of them.
        _this.commonlyUsedRenderers = new Map();
        _this.onScroll = throttle(_this.doOnScroll.bind(_this), 50);
        return _this;
    }
    PreferencesEditorWidget_1 = PreferencesEditorWidget;
    PreferencesEditorWidget.prototype.init = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.id = PreferencesEditorWidget_1.ID;
                        this.title.label = PreferencesEditorWidget_1.LABEL;
                        this.addClass('settings-main');
                        this.toDispose.pushAll([
                            this.preferenceService.onPreferencesChanged(function (e) { return _this.handlePreferenceChanges(e); }),
                            this.model.onFilterChanged(function (e) { return _this.handleDisplayChange(e); }),
                            this.model.onSelectionChanged(function (e) { return _this.handleSelectionChange(e); }),
                        ]);
                        this.createContainers();
                        return [4 /*yield*/, this.preferenceService.ready];
                    case 1:
                        _a.sent();
                        this.handleDisplayChange({ source: preference_tree_model_1.PreferenceFilterChangeSource.Schema });
                        return [2 /*return*/];
                }
            });
        });
    };
    PreferencesEditorWidget.prototype.createContainers = function () {
        var innerWrapper = document.createElement('div');
        innerWrapper.classList.add('settings-main-scroll-container');
        this.scrollContainer = innerWrapper;
        innerWrapper.addEventListener('scroll', this.onScroll, { passive: true });
        this.node.appendChild(innerWrapper);
        var noLeavesMessage = document.createElement('div');
        noLeavesMessage.classList.add('settings-no-results-announcement');
        noLeavesMessage.textContent = 'That search query has returned no results.';
        this.node.appendChild(noLeavesMessage);
    };
    PreferencesEditorWidget.prototype.handleDisplayChange = function (e) {
        var isFiltered = this.model.isFiltered;
        var currentFirstVisible = this.firstVisibleChildID;
        var leavesAreVisible = this.areLeavesVisible();
        if (e.source === preference_tree_model_1.PreferenceFilterChangeSource.Search) {
            this.handleSearchChange(isFiltered, leavesAreVisible);
        }
        else if (e.source === preference_tree_model_1.PreferenceFilterChangeSource.Scope) {
            this.handleScopeChange(isFiltered);
        }
        else if (e.source === preference_tree_model_1.PreferenceFilterChangeSource.Schema) {
            this.handleSchemaChange(isFiltered);
        }
        else {
            common_1.unreachable(e.source, 'Not all PreferenceFilterChangeSource enum variants handled.');
        }
        this.resetScroll(currentFirstVisible, e.source === preference_tree_model_1.PreferenceFilterChangeSource.Search && !isFiltered);
    };
    PreferencesEditorWidget.prototype.handleSchemaChange = function (isFiltered) {
        var e_1, _a, e_2, _b;
        var _c;
        try {
            for (var _d = __values(this.allRenderers()), _e = _d.next(); !_e.done; _e = _d.next()) {
                var _f = __read(_e.value, 3), id = _f[0], renderer = _f[1], collection = _f[2];
                if (!this.model.getNode(renderer.nodeId)) {
                    renderer.dispose();
                    collection.delete(id);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (this.model.root) {
            var nodeIterator = Array.from(this.scrollContainer.children)[Symbol.iterator]();
            var nextNode = nodeIterator.next().value;
            try {
                for (var _g = __values(new browser_1.TopDownTreeIterator(this.model.root)), _h = _g.next(); !_h.done; _h = _g.next()) {
                    var node = _h.value;
                    if (preference_types_1.Preference.TreeNode.is(node)) {
                        var _j = this.analyzeIDAndGetRendererGroup(node.id), collection = _j.collection, id = _j.id;
                        var renderer = (_c = collection.get(id)) !== null && _c !== void 0 ? _c : this.rendererFactory(node);
                        if (!renderer.node.parentElement) { // If it hasn't been attached yet, it hasn't been checked for the current search.
                            this.hideIfFailsFilters(renderer, isFiltered);
                            collection.set(id, renderer);
                        }
                        if (nextNode !== renderer.node) {
                            if (nextNode) {
                                renderer.insertBefore(nextNode);
                            }
                            else {
                                renderer.appendTo(this.scrollContainer);
                            }
                        }
                        else {
                            nextNode = nodeIterator.next().value;
                        }
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    };
    PreferencesEditorWidget.prototype.handleScopeChange = function (isFiltered) {
        var e_3, _a;
        var _b;
        if (isFiltered === void 0) { isFiltered = this.model.isFiltered; }
        try {
            for (var _c = __values(this.allRenderers()), _d = _c.next(); !_d.done; _d = _c.next()) {
                var _e = __read(_d.value, 2), renderer = _e[1];
                var isHidden = this.hideIfFailsFilters(renderer, isFiltered);
                if (isFiltered || !isHidden) {
                    (_b = renderer.handleScopeChange) === null || _b === void 0 ? void 0 : _b.call(renderer, isFiltered);
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    PreferencesEditorWidget.prototype.handleSearchChange = function (isFiltered, leavesAreVisible) {
        var e_4, _a;
        var _b;
        if (leavesAreVisible) {
            try {
                for (var _c = __values(this.allRenderers()), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var _e = __read(_d.value, 2), renderer = _e[1];
                    var isHidden = this.hideIfFailsFilters(renderer, isFiltered);
                    if (!isHidden) {
                        (_b = renderer.handleSearchChange) === null || _b === void 0 ? void 0 : _b.call(renderer, isFiltered);
                    }
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
    };
    PreferencesEditorWidget.prototype.areLeavesVisible = function () {
        var leavesAreVisible = this.model.totalVisibleLeaves > 0;
        this.node.classList.toggle('no-results', !leavesAreVisible);
        this.scrollContainer.classList.toggle('hidden', !leavesAreVisible);
        return leavesAreVisible;
    };
    PreferencesEditorWidget.prototype.allRenderers = function () {
        var _a, _b, _c, id, renderer, e_5_1, _d, _e, _f, id, renderer, e_6_1;
        var e_5, _g, e_6, _h;
        return __generator(this, function (_j) {
            switch (_j.label) {
                case 0:
                    _j.trys.push([0, 5, 6, 7]);
                    _a = __values(this.commonlyUsedRenderers.entries()), _b = _a.next();
                    _j.label = 1;
                case 1:
                    if (!!_b.done) return [3 /*break*/, 4];
                    _c = __read(_b.value, 2), id = _c[0], renderer = _c[1];
                    return [4 /*yield*/, [id, renderer, this.commonlyUsedRenderers]];
                case 2:
                    _j.sent();
                    _j.label = 3;
                case 3:
                    _b = _a.next();
                    return [3 /*break*/, 1];
                case 4: return [3 /*break*/, 7];
                case 5:
                    e_5_1 = _j.sent();
                    e_5 = { error: e_5_1 };
                    return [3 /*break*/, 7];
                case 6:
                    try {
                        if (_b && !_b.done && (_g = _a.return)) _g.call(_a);
                    }
                    finally { if (e_5) throw e_5.error; }
                    return [7 /*endfinally*/];
                case 7:
                    _j.trys.push([7, 12, 13, 14]);
                    _d = __values(this.renderers.entries()), _e = _d.next();
                    _j.label = 8;
                case 8:
                    if (!!_e.done) return [3 /*break*/, 11];
                    _f = __read(_e.value, 2), id = _f[0], renderer = _f[1];
                    return [4 /*yield*/, [id, renderer, this.renderers]];
                case 9:
                    _j.sent();
                    _j.label = 10;
                case 10:
                    _e = _d.next();
                    return [3 /*break*/, 8];
                case 11: return [3 /*break*/, 14];
                case 12:
                    e_6_1 = _j.sent();
                    e_6 = { error: e_6_1 };
                    return [3 /*break*/, 14];
                case 13:
                    try {
                        if (_e && !_e.done && (_h = _d.return)) _h.call(_d);
                    }
                    finally { if (e_6) throw e_6.error; }
                    return [7 /*endfinally*/];
                case 14: return [2 /*return*/];
            }
        });
    };
    PreferencesEditorWidget.prototype.handlePreferenceChanges = function (e) {
        var e_7, _a;
        var _b, _c, _d, _e;
        try {
            for (var _f = __values(Object.keys(e)), _g = _f.next(); !_g.done; _g = _f.next()) {
                var id = _g.value;
                (_c = (_b = this.commonlyUsedRenderers.get(id)) === null || _b === void 0 ? void 0 : _b.handleValueChange) === null || _c === void 0 ? void 0 : _c.call(_b);
                (_e = (_d = this.renderers.get(id)) === null || _d === void 0 ? void 0 : _d.handleValueChange) === null || _e === void 0 ? void 0 : _e.call(_d);
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
            }
            finally { if (e_7) throw e_7.error; }
        }
    };
    /**
     * @returns true if the renderer is hidden, false otherwise.
     */
    PreferencesEditorWidget.prototype.hideIfFailsFilters = function (renderer, isFiltered) {
        var row = this.model.currentRows.get(renderer.nodeId);
        if (!row || (browser_1.CompositeTreeNode.is(row.node) && (isFiltered || row.visibleChildren === 0))) {
            renderer.hide();
            return true;
        }
        else {
            renderer.show();
            return false;
        }
    };
    PreferencesEditorWidget.prototype.resetScroll = function (nodeIDToScrollTo, filterWasCleared) {
        var _this = this;
        if (filterWasCleared === void 0) { filterWasCleared = false; }
        if (this.scrollBar) { // Absent on widget creation
            this.doResetScroll(nodeIDToScrollTo, filterWasCleared);
        }
        else {
            var interval_1 = setInterval(function () {
                if (_this.scrollBar) {
                    clearInterval(interval_1);
                    _this.doResetScroll(nodeIDToScrollTo, filterWasCleared);
                }
            }, 500);
        }
    };
    PreferencesEditorWidget.prototype.doResetScroll = function (nodeIDToScrollTo, filterWasCleared) {
        var _this = this;
        if (filterWasCleared === void 0) { filterWasCleared = false; }
        requestAnimationFrame(function () {
            var _a;
            (_a = _this.scrollBar) === null || _a === void 0 ? void 0 : _a.update();
            if (!filterWasCleared && nodeIDToScrollTo) {
                var _b = _this.analyzeIDAndGetRendererGroup(nodeIDToScrollTo), id = _b.id, collection = _b.collection;
                var renderer = collection.get(id);
                if (renderer === null || renderer === void 0 ? void 0 : renderer.visible) {
                    renderer.node.scrollIntoView();
                    return;
                }
            }
            _this.scrollContainer.scrollTop = 0;
        });
    };
    ;
    PreferencesEditorWidget.prototype.doOnScroll = function () {
        var scrollContainer = this.scrollContainer;
        var firstVisibleChildID = this.findFirstVisibleChildID();
        this.setFirstVisibleChildID(firstVisibleChildID);
        if (this.isAtScrollTop && scrollContainer.scrollTop !== 0) {
            this.isAtScrollTop = false;
            this.tabbar.toggleShadow(true);
        }
        else if (!this.isAtScrollTop && scrollContainer.scrollTop === 0) {
            this.isAtScrollTop = true;
            this.tabbar.toggleShadow(false);
        }
    };
    ;
    PreferencesEditorWidget.prototype.findFirstVisibleChildID = function () {
        var e_8, _a;
        var scrollTop = this.scrollContainer.scrollTop;
        try {
            for (var _b = __values(this.allRenderers()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = __read(_c.value, 2), renderer = _d[1];
                var _e = renderer.node, offsetTop = _e.offsetTop, offsetHeight = _e.offsetHeight;
                if (Math.abs(offsetTop - scrollTop) <= offsetHeight / 2) {
                    return renderer.nodeId;
                }
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_8) throw e_8.error; }
        }
    };
    PreferencesEditorWidget.prototype.setFirstVisibleChildID = function (id) {
        if (id && id !== this.firstVisibleChildID) {
            this.firstVisibleChildID = id;
            var currentNode = this.model.getNode(id);
            var expansionAncestor = void 0;
            var selectionAncestor = void 0;
            while (currentNode && (!expansionAncestor || !selectionAncestor)) {
                if (!selectionAncestor && browser_1.SelectableTreeNode.is(currentNode)) {
                    selectionAncestor = currentNode;
                }
                if (!expansionAncestor && browser_1.ExpandableTreeNode.is(currentNode)) {
                    expansionAncestor = currentNode;
                }
                currentNode = currentNode.parent;
            }
            if (selectionAncestor) {
                this.currentModelSelectionId = selectionAncestor.id;
                expansionAncestor = expansionAncestor !== null && expansionAncestor !== void 0 ? expansionAncestor : selectionAncestor;
                this.model.selectIfNotSelected(selectionAncestor);
                if (!this.model.isFiltered && id !== this.lastUserSelection) {
                    this.lastUserSelection = '';
                    this.model.collapseAllExcept(expansionAncestor);
                }
            }
        }
    };
    PreferencesEditorWidget.prototype.handleSelectionChange = function (selectionEvent) {
        var e_9, _a;
        var node = selectionEvent[0];
        if (node && node.id !== this.currentModelSelectionId) {
            this.currentModelSelectionId = node.id;
            this.lastUserSelection = node.id;
            if (this.model.isFiltered && browser_1.CompositeTreeNode.is(node)) {
                try {
                    for (var _b = __values(new browser_1.TopDownTreeIterator(node, { pruneSiblings: true })), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var candidate = _c.value;
                        var _d = this.analyzeIDAndGetRendererGroup(candidate.id), id = _d.id, collection = _d.collection;
                        var renderer = collection.get(id);
                        if (renderer === null || renderer === void 0 ? void 0 : renderer.visible) {
                            // When filtered, treat the first visible child as the selected node, since it will be the one scrolled to.
                            this.lastUserSelection = renderer.nodeId;
                            renderer.node.scrollIntoView();
                            return;
                        }
                    }
                }
                catch (e_9_1) { e_9 = { error: e_9_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_9) throw e_9.error; }
                }
            }
            else {
                var _e = this.analyzeIDAndGetRendererGroup(node.id), id = _e.id, collection = _e.collection;
                var renderer = collection.get(id);
                renderer === null || renderer === void 0 ? void 0 : renderer.node.scrollIntoView();
            }
        }
    };
    PreferencesEditorWidget.prototype.analyzeIDAndGetRendererGroup = function (nodeID) {
        var _a = preference_types_1.Preference.TreeNode.getGroupAndIdFromNodeId(nodeID), id = _a.id, group = _a.group;
        var collection = group === preference_tree_generator_1.COMMONLY_USED_SECTION_PREFIX ? this.commonlyUsedRenderers : this.renderers;
        return { id: id, group: group, collection: collection };
    };
    PreferencesEditorWidget.prototype.getScrollContainer = function () {
        return this.scrollContainer;
    };
    PreferencesEditorWidget.prototype.storeState = function () {
        return {
            firstVisibleChildID: this.firstVisibleChildID,
        };
    };
    PreferencesEditorWidget.prototype.restoreState = function (oldState) {
        this.firstVisibleChildID = oldState.firstVisibleChildID;
        this.resetScroll(this.firstVisibleChildID);
    };
    var PreferencesEditorWidget_1;
    PreferencesEditorWidget.ID = 'settings.editor';
    PreferencesEditorWidget.LABEL = 'Settings Editor';
    __decorate([
        inversify_1.inject(browser_1.PreferenceService),
        __metadata("design:type", Object)
    ], PreferencesEditorWidget.prototype, "preferenceService", void 0);
    __decorate([
        inversify_1.inject(preference_tree_model_1.PreferenceTreeModel),
        __metadata("design:type", preference_tree_model_1.PreferenceTreeModel)
    ], PreferencesEditorWidget.prototype, "model", void 0);
    __decorate([
        inversify_1.inject(preference_node_renderer_1.PreferenceNodeRendererFactory),
        __metadata("design:type", Function)
    ], PreferencesEditorWidget.prototype, "rendererFactory", void 0);
    __decorate([
        inversify_1.inject(preference_scope_tabbar_widget_1.PreferencesScopeTabBar),
        __metadata("design:type", preference_scope_tabbar_widget_1.PreferencesScopeTabBar)
    ], PreferencesEditorWidget.prototype, "tabbar", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], PreferencesEditorWidget.prototype, "init", null);
    PreferencesEditorWidget = PreferencesEditorWidget_1 = __decorate([
        inversify_1.injectable()
    ], PreferencesEditorWidget);
    return PreferencesEditorWidget;
}(widget_1.BaseWidget));
exports.PreferencesEditorWidget = PreferencesEditorWidget;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/preference-scope-tabbar-widget.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/preference-scope-tabbar-widget.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2020 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferencesScopeTabBar = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var widgets_1 = __webpack_require__(/*! @theia/core/shared/@phosphor/widgets */ "./node_modules/@theia/core/shared/@phosphor/widgets.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var workspace_service_1 = __webpack_require__(/*! @theia/workspace/lib/browser/workspace-service */ "./node_modules/@theia/workspace/lib/browser/workspace-service.js");
var uri_1 = __webpack_require__(/*! @theia/core/lib/common/uri */ "./node_modules/@theia/core/lib/common/uri.js");
var preference_scope_command_manager_1 = __webpack_require__(/*! ../util/preference-scope-command-manager */ "./node_modules/@theia/preferences/lib/browser/util/preference-scope-command-manager.js");
var preference_types_1 = __webpack_require__(/*! ../util/preference-types */ "./node_modules/@theia/preferences/lib/browser/util/preference-types.js");
var core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
var USER_TAB_LABEL = 'User';
var USER_TAB_INDEX = browser_1.PreferenceScope[USER_TAB_LABEL];
var WORKSPACE_TAB_LABEL = 'Workspace';
var WORKSPACE_TAB_INDEX = browser_1.PreferenceScope[WORKSPACE_TAB_LABEL];
var FOLDER_TAB_LABEL = 'Folder';
var FOLDER_TAB_INDEX = browser_1.PreferenceScope[FOLDER_TAB_LABEL];
var PREFERENCE_TAB_CLASSNAME = 'preferences-scope-tab';
var GENERAL_FOLDER_TAB_CLASSNAME = 'preference-folder';
var LABELED_FOLDER_TAB_CLASSNAME = 'preferences-folder-tab';
var FOLDER_DROPDOWN_CLASSNAME = 'preferences-folder-dropdown';
var FOLDER_DROPDOWN_ICON_CLASSNAME = 'preferences-folder-dropdown-icon';
var TABBAR_UNDERLINE_CLASSNAME = 'tabbar-underline';
var SINGLE_FOLDER_TAB_CLASSNAME = PREFERENCE_TAB_CLASSNAME + " " + GENERAL_FOLDER_TAB_CLASSNAME + " " + LABELED_FOLDER_TAB_CLASSNAME;
var UNSELECTED_FOLDER_DROPDOWN_CLASSNAME = PREFERENCE_TAB_CLASSNAME + " " + GENERAL_FOLDER_TAB_CLASSNAME + " " + FOLDER_DROPDOWN_CLASSNAME;
var SELECTED_FOLDER_DROPDOWN_CLASSNAME = PREFERENCE_TAB_CLASSNAME + " " + GENERAL_FOLDER_TAB_CLASSNAME + " " + LABELED_FOLDER_TAB_CLASSNAME + " " + FOLDER_DROPDOWN_CLASSNAME;
var SHADOW_CLASSNAME = 'with-shadow';
var PreferencesScopeTabBar = /** @class */ (function (_super) {
    __extends(PreferencesScopeTabBar, _super);
    function PreferencesScopeTabBar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onScopeChangedEmitter = new core_1.Emitter();
        _this.onScopeChanged = _this.onScopeChangedEmitter.event;
        _this.currentWorkspaceRoots = [];
        _this.currentSelection = preference_types_1.Preference.DEFAULT_SCOPE;
        _this.editorScrollAtTop = true;
        _this.folderSelectionCallback = function (newScope) { _this.setNewScopeSelection(newScope); };
        return _this;
    }
    PreferencesScopeTabBar_1 = PreferencesScopeTabBar;
    Object.defineProperty(PreferencesScopeTabBar.prototype, "currentScope", {
        get: function () {
            return this.currentSelection;
        },
        enumerable: false,
        configurable: true
    });
    PreferencesScopeTabBar.prototype.setNewScopeSelection = function (newSelection) {
        var stringifiedSelectionScope = newSelection.scope.toString();
        var newIndex = this.titles.findIndex(function (title) { return title.dataset.scope === stringifiedSelectionScope; });
        if (newIndex !== -1) {
            this.currentSelection = newSelection;
            this.currentIndex = newIndex;
            if (newSelection.scope === browser_1.PreferenceScope.Folder) {
                this.addOrUpdateFolderTab();
            }
            this.emitNewScope();
        }
    };
    PreferencesScopeTabBar.prototype.init = function () {
        var _this = this;
        this.id = PreferencesScopeTabBar_1.ID;
        this.setupInitialDisplay();
        this.tabActivateRequested.connect(function (sender, args) {
            var scopeDetails = _this.toScopeDetails(args.title);
            if (scopeDetails) {
                _this.setNewScopeSelection(scopeDetails);
            }
        });
        this.workspaceService.onWorkspaceChanged(function (newRoots) {
            _this.doUpdateDisplay(newRoots);
        });
        this.workspaceService.onWorkspaceLocationChanged(function () { return _this.updateWorkspaceTab(); });
        var tabUnderline = document.createElement('div');
        tabUnderline.className = TABBAR_UNDERLINE_CLASSNAME;
        this.node.append(tabUnderline);
    };
    PreferencesScopeTabBar.prototype.toScopeDetails = function (title) {
        if (title) {
            var source = 'dataset' in title ? title.dataset : title;
            var scope = source.scope, uri = source.uri, activeScopeIsFolder = source.activeScopeIsFolder;
            return {
                scope: Number(scope),
                uri: uri || undefined,
                activeScopeIsFolder: activeScopeIsFolder === 'true' || activeScopeIsFolder === true,
            };
        }
    };
    PreferencesScopeTabBar.prototype.toDataSet = function (scopeDetails) {
        var scope = scopeDetails.scope, uri = scopeDetails.uri, activeScopeIsFolder = scopeDetails.activeScopeIsFolder;
        return {
            scope: scope.toString(),
            uri: uri !== null && uri !== void 0 ? uri : '',
            activeScopeIsFolder: activeScopeIsFolder.toString()
        };
    };
    PreferencesScopeTabBar.prototype.setupInitialDisplay = function () {
        this.addUserTab();
        if (this.workspaceService.workspace) {
            this.addWorkspaceTab(this.workspaceService.workspace);
        }
        this.addOrUpdateFolderTab();
    };
    PreferencesScopeTabBar.prototype.onUpdateRequest = function (msg) {
        _super.prototype.onUpdateRequest.call(this, msg);
        this.addTabIndexToTabs();
    };
    PreferencesScopeTabBar.prototype.addTabIndexToTabs = function () {
        var _this = this;
        this.node.querySelectorAll('li').forEach(function (tab, index) {
            tab.tabIndex = 0;
            var handler = function () {
                if (tab.className.includes(GENERAL_FOLDER_TAB_CLASSNAME) && _this.currentWorkspaceRoots.length > 1) {
                    var tabRect = tab.getBoundingClientRect();
                    _this.openContextMenu(tabRect, tab, 'keypress');
                }
                else {
                    var details = _this.toScopeDetails(_this.titles[index]);
                    if (details) {
                        _this.setNewScopeSelection(details);
                    }
                }
            };
            tab.onkeydown = handler;
            tab.onclick = handler;
        });
    };
    PreferencesScopeTabBar.prototype.addUserTab = function () {
        this.addTab(new widgets_1.Title({
            dataset: { uri: '', scope: USER_TAB_INDEX.toString() },
            label: USER_TAB_LABEL,
            owner: this,
            className: PREFERENCE_TAB_CLASSNAME
        }));
    };
    PreferencesScopeTabBar.prototype.addWorkspaceTab = function (currentWorkspace) {
        var scopeDetails = this.getWorkspaceDataset(currentWorkspace);
        var workspaceTabTitle = new widgets_1.Title({
            dataset: this.toDataSet(scopeDetails),
            label: WORKSPACE_TAB_LABEL,
            owner: this,
            className: PREFERENCE_TAB_CLASSNAME,
        });
        this.addTab(workspaceTabTitle);
        return workspaceTabTitle;
    };
    PreferencesScopeTabBar.prototype.getWorkspaceDataset = function (currentWorkspace) {
        var resource = currentWorkspace.resource, isDirectory = currentWorkspace.isDirectory;
        var scope = WORKSPACE_TAB_INDEX;
        return { uri: resource.toString(), activeScopeIsFolder: isDirectory, scope: scope };
    };
    PreferencesScopeTabBar.prototype.addOrUpdateFolderTab = function () {
        if (!!this.workspaceService.workspace) {
            this.currentWorkspaceRoots = this.workspaceService.tryGetRoots();
            var multipleFolderRootsAreAvailable = this.currentWorkspaceRoots && this.currentWorkspaceRoots.length > 1;
            var noFolderRootsAreAvailable = this.currentWorkspaceRoots.length === 0;
            var shouldShowFoldersSeparately = this.workspaceService.saved;
            if (!noFolderRootsAreAvailable) {
                if (!this.folderTitle) {
                    this.folderTitle = new widgets_1.Title({
                        label: '',
                        caption: FOLDER_TAB_LABEL,
                        owner: this,
                    });
                }
                this.setFolderTitleProperties(multipleFolderRootsAreAvailable);
                this.getFolderContextMenu(this.currentWorkspaceRoots);
                if (multipleFolderRootsAreAvailable || shouldShowFoldersSeparately) {
                    this.addTab(this.folderTitle);
                }
            }
            else {
                var folderTabIndex = this.titles.findIndex(function (title) { return title.caption === FOLDER_TAB_LABEL; });
                if (folderTabIndex > -1) {
                    this.removeTabAt(folderTabIndex);
                }
            }
        }
    };
    PreferencesScopeTabBar.prototype.setFolderTitleProperties = function (multipleFolderRootsAreAvailable) {
        this.folderTitle.iconClass = multipleFolderRootsAreAvailable ? FOLDER_DROPDOWN_ICON_CLASSNAME : '';
        if (this.currentSelection.scope === FOLDER_TAB_INDEX) {
            this.folderTitle.label = this.labelProvider.getName(new uri_1.default(this.currentSelection.uri));
            this.folderTitle.dataset = this.toDataSet(this.currentSelection);
            this.folderTitle.className = multipleFolderRootsAreAvailable ? SELECTED_FOLDER_DROPDOWN_CLASSNAME : SINGLE_FOLDER_TAB_CLASSNAME;
        }
        else {
            var singleFolderRoot = this.currentWorkspaceRoots[0].resource;
            var singleFolderLabel = this.labelProvider.getName(singleFolderRoot);
            var defaultURI = multipleFolderRootsAreAvailable ? '' : singleFolderRoot.toString();
            this.folderTitle.label = multipleFolderRootsAreAvailable ? FOLDER_TAB_LABEL : singleFolderLabel;
            this.folderTitle.className = multipleFolderRootsAreAvailable ? UNSELECTED_FOLDER_DROPDOWN_CLASSNAME : SINGLE_FOLDER_TAB_CLASSNAME;
            this.folderTitle.dataset = { folderTitle: 'true', scope: FOLDER_TAB_INDEX.toString(), uri: defaultURI };
        }
    };
    PreferencesScopeTabBar.prototype.getFolderContextMenu = function (workspaceRoots) {
        if (workspaceRoots === void 0) { workspaceRoots = this.workspaceService.tryGetRoots(); }
        this.preferencesMenuFactory.createFolderWorkspacesMenu(workspaceRoots, this.currentSelection.uri);
    };
    PreferencesScopeTabBar.prototype.handleEvent = function () {
        // Don't - the handlers are defined in PreferenceScopeTabbarWidget.addTabIndexToTabs()
    };
    PreferencesScopeTabBar.prototype.openContextMenu = function (tabRect, folderTabNode, source) {
        this.contextMenuRenderer.render({
            menuPath: preference_scope_command_manager_1.FOLDER_SCOPE_MENU_PATH,
            anchor: { x: tabRect.left, y: tabRect.bottom },
            args: [this.folderSelectionCallback, 'from-tabbar'],
            onHide: function () {
                if (source === 'click') {
                    folderTabNode.blur();
                }
            }
        });
    };
    PreferencesScopeTabBar.prototype.doUpdateDisplay = function (newRoots) {
        var _this = this;
        var folderWasRemoved = newRoots.length < this.currentWorkspaceRoots.length;
        this.currentWorkspaceRoots = newRoots;
        if (folderWasRemoved) {
            var removedFolderWasSelectedScope = !this.currentWorkspaceRoots.some(function (root) { return root.resource.toString() === _this.currentSelection.uri; });
            if (removedFolderWasSelectedScope) {
                this.setNewScopeSelection(preference_types_1.Preference.DEFAULT_SCOPE);
            }
        }
        this.updateWorkspaceTab();
        this.addOrUpdateFolderTab();
    };
    PreferencesScopeTabBar.prototype.updateWorkspaceTab = function () {
        var _a;
        var currentWorkspace = this.workspaceService.workspace;
        if (currentWorkspace) {
            var workspaceTitle = (_a = this.titles.find(function (title) { return title.label === WORKSPACE_TAB_LABEL; })) !== null && _a !== void 0 ? _a : this.addWorkspaceTab(currentWorkspace);
            var scopeDetails = this.getWorkspaceDataset(currentWorkspace);
            workspaceTitle.dataset = this.toDataSet(scopeDetails);
            if (this.currentSelection.scope === browser_1.PreferenceScope.Workspace) {
                this.setNewScopeSelection(scopeDetails);
            }
        }
    };
    PreferencesScopeTabBar.prototype.emitNewScope = function () {
        this.onScopeChangedEmitter.fire(this.currentSelection);
    };
    PreferencesScopeTabBar.prototype.setScope = function (scope) {
        var stringifiedSelectionScope = scope.toString();
        var correspondingTitle = this.titles.find(function (title) { return title.dataset.scope === stringifiedSelectionScope; });
        var details = this.toScopeDetails(correspondingTitle);
        if (details) {
            this.setNewScopeSelection(details);
        }
    };
    PreferencesScopeTabBar.prototype.storeState = function () {
        return {
            scopeDetails: this.currentScope
        };
    };
    PreferencesScopeTabBar.prototype.restoreState = function (oldState) {
        var scopeDetails = this.toScopeDetails(oldState.scopeDetails);
        if (scopeDetails) {
            this.setNewScopeSelection(scopeDetails);
        }
    };
    PreferencesScopeTabBar.prototype.toggleShadow = function (showShadow) {
        this.toggleClass(SHADOW_CLASSNAME, showShadow);
    };
    var PreferencesScopeTabBar_1;
    PreferencesScopeTabBar.ID = 'preferences-scope-tab-bar';
    __decorate([
        inversify_1.inject(workspace_service_1.WorkspaceService),
        __metadata("design:type", workspace_service_1.WorkspaceService)
    ], PreferencesScopeTabBar.prototype, "workspaceService", void 0);
    __decorate([
        inversify_1.inject(preference_scope_command_manager_1.PreferenceScopeCommandManager),
        __metadata("design:type", preference_scope_command_manager_1.PreferenceScopeCommandManager)
    ], PreferencesScopeTabBar.prototype, "preferencesMenuFactory", void 0);
    __decorate([
        inversify_1.inject(browser_1.ContextMenuRenderer),
        __metadata("design:type", browser_1.ContextMenuRenderer)
    ], PreferencesScopeTabBar.prototype, "contextMenuRenderer", void 0);
    __decorate([
        inversify_1.inject(browser_1.LabelProvider),
        __metadata("design:type", browser_1.LabelProvider)
    ], PreferencesScopeTabBar.prototype, "labelProvider", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], PreferencesScopeTabBar.prototype, "init", null);
    PreferencesScopeTabBar = PreferencesScopeTabBar_1 = __decorate([
        inversify_1.injectable()
    ], PreferencesScopeTabBar);
    return PreferencesScopeTabBar;
}(widgets_1.TabBar));
exports.PreferencesScopeTabBar = PreferencesScopeTabBar;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/preference-searchbar-widget.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/preference-searchbar-widget.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2020 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferencesSearchbarWidget = void 0;
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var React = __webpack_require__(/*! @theia/core/shared/react */ "./node_modules/@theia/core/shared/react.js");
var debounce = __webpack_require__(/*! @theia/core/shared/lodash.debounce */ "./node_modules/@theia/core/shared/lodash.debounce.js");
var core_1 = __webpack_require__(/*! @theia/core */ "./node_modules/@theia/core/lib/common/index.js");
var PreferencesSearchbarWidget = /** @class */ (function (_super) {
    __extends(PreferencesSearchbarWidget, _super);
    function PreferencesSearchbarWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onFilterStringChangedEmitter = new core_1.Emitter();
        _this.onFilterChanged = _this.onFilterStringChangedEmitter.event;
        _this.searchbarRef = React.createRef();
        _this.resultsCount = 0;
        _this.handleSearch = function (e) {
            _this.search(e.target.value);
        };
        _this.search = debounce(function (value) {
            _this.onFilterStringChangedEmitter.fire(value);
            _this.update();
        }, 200);
        /**
         * Clears the search input and all search results.
         * @param e on-click mouse event.
         */
        _this.clearSearchResults = function (e) {
            var search = document.getElementById(PreferencesSearchbarWidget_1.SEARCHBAR_ID);
            if (search) {
                search.value = '';
                _this.search(search.value);
                _this.update();
            }
        };
        return _this;
    }
    PreferencesSearchbarWidget_1 = PreferencesSearchbarWidget;
    PreferencesSearchbarWidget.prototype.init = function () {
        var _this = this;
        this.onRender.push(core_1.Disposable.create(function () { return _this.focus(); }));
        this.id = PreferencesSearchbarWidget_1.ID;
        this.title.label = PreferencesSearchbarWidget_1.LABEL;
        this.update();
    };
    PreferencesSearchbarWidget.prototype.focus = function () {
        if (this.searchbarRef.current) {
            this.searchbarRef.current.focus();
        }
    };
    /**
     * Renders all search bar options.
     */
    PreferencesSearchbarWidget.prototype.renderOptionContainer = function () {
        var resultsCount = this.renderResultsCountOption();
        var clearAllOption = this.renderClearAllOption();
        return React.createElement("div", { className: "option-buttons" },
            " ",
            resultsCount,
            " ",
            clearAllOption,
            " ");
    };
    /**
     * Renders a badge displaying search results count.
     */
    PreferencesSearchbarWidget.prototype.renderResultsCountOption = function () {
        var resultsFound = (this.resultsCount === 0 ? 'No' : this.resultsCount) + " " + (this.resultsCount === 1 ? 'Setting Found' : 'Settings Found');
        return this.searchTermExists() ?
            (React.createElement("span", { className: "results-found", title: resultsFound }, resultsFound))
            : '';
    };
    /**
     * Renders a clear all button.
     */
    PreferencesSearchbarWidget.prototype.renderClearAllOption = function () {
        return React.createElement("span", { className: "clear-all option " + (this.searchTermExists() ? 'enabled' : ''), title: "Clear Search Results", onClick: this.clearSearchResults });
    };
    /**
     * Determines whether the search input currently has a value.
     * @returns true, if the search input currently has a value; false, otherwise.
     */
    PreferencesSearchbarWidget.prototype.searchTermExists = function () {
        var _a;
        return !!((_a = this.searchbarRef.current) === null || _a === void 0 ? void 0 : _a.value);
    };
    PreferencesSearchbarWidget.prototype.getSearchTerm = function () {
        var search = document.getElementById(PreferencesSearchbarWidget_1.SEARCHBAR_ID);
        return search === null || search === void 0 ? void 0 : search.value;
    };
    PreferencesSearchbarWidget.prototype.updateSearchTerm = function (searchTerm) {
        var search = document.getElementById(PreferencesSearchbarWidget_1.SEARCHBAR_ID);
        if (!search) {
            return;
        }
        search.value = searchTerm;
        this.search(search.value);
        this.update();
    };
    PreferencesSearchbarWidget.prototype.render = function () {
        var optionContainer = this.renderOptionContainer();
        return (React.createElement("div", { className: 'settings-header' },
            React.createElement("div", { className: "settings-search-container" },
                React.createElement("input", { type: "text", id: PreferencesSearchbarWidget_1.SEARCHBAR_ID, spellCheck: false, placeholder: "Search Settings", className: "settings-search-input theia-input", onChange: this.handleSearch, ref: this.searchbarRef }),
                optionContainer)));
    };
    /**
     * Updates the search result count.
     * @param count the result count.
     */
    PreferencesSearchbarWidget.prototype.updateResultsCount = function (count) {
        this.resultsCount = count;
        this.update();
    };
    PreferencesSearchbarWidget.prototype.storeState = function () {
        return {
            searchTerm: this.getSearchTerm()
        };
    };
    PreferencesSearchbarWidget.prototype.restoreState = function (oldState) {
        var _this = this;
        var searchInputExists = this.onDidChangeVisibility(function () {
            _this.updateSearchTerm(oldState.searchTerm || '');
            searchInputExists.dispose();
        });
    };
    var PreferencesSearchbarWidget_1;
    PreferencesSearchbarWidget.ID = 'settings.header';
    PreferencesSearchbarWidget.LABEL = 'Settings Header';
    PreferencesSearchbarWidget.SEARCHBAR_ID = 'preference-searchbar';
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], PreferencesSearchbarWidget.prototype, "init", null);
    PreferencesSearchbarWidget = PreferencesSearchbarWidget_1 = __decorate([
        inversify_1.injectable()
    ], PreferencesSearchbarWidget);
    return PreferencesSearchbarWidget;
}(browser_1.ReactWidget));
exports.PreferencesSearchbarWidget = PreferencesSearchbarWidget;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/preference-tree-widget.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/preference-tree-widget.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2020 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferencesTreeWidget = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var React = __webpack_require__(/*! @theia/core/shared/react */ "./node_modules/@theia/core/shared/react.js");
var preference_tree_model_1 = __webpack_require__(/*! ../preference-tree-model */ "./node_modules/@theia/preferences/lib/browser/preference-tree-model.js");
var PreferencesTreeWidget = /** @class */ (function (_super) {
    __extends(PreferencesTreeWidget, _super);
    function PreferencesTreeWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.shouldFireSelectionEvents = true;
        return _this;
    }
    PreferencesTreeWidget_1 = PreferencesTreeWidget;
    PreferencesTreeWidget.prototype.init = function () {
        var _this = this;
        _super.prototype.init.call(this);
        this.id = PreferencesTreeWidget_1.ID;
        this.toDispose.pushAll([
            this.model.onFilterChanged(function () {
                _this.updateRows();
            }),
        ]);
    };
    PreferencesTreeWidget.prototype.doUpdateRows = function () {
        var e_1, _a;
        this.rows = new Map();
        var index = 0;
        try {
            for (var _b = __values(this.model.currentRows.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = __read(_c.value, 2), id = _d[0], nodeRow = _d[1];
                if (nodeRow.visibleChildren > 0 && (browser_1.ExpandableTreeNode.is(nodeRow.node) || browser_1.ExpandableTreeNode.isExpanded(nodeRow.node.parent))) {
                    this.rows.set(id, __assign(__assign({}, nodeRow), { index: index++ }));
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.updateScrollToRow();
    };
    PreferencesTreeWidget.prototype.doRenderNodeRow = function (_a) {
        var depth = _a.depth, visibleChildren = _a.visibleChildren, node = _a.node, isExpansible = _a.isExpansible;
        return this.renderNode(node, { depth: depth, visibleChildren: visibleChildren, isExpansible: isExpansible });
    };
    PreferencesTreeWidget.prototype.renderNode = function (node, props) {
        if (!browser_1.TreeNode.isVisible(node)) {
            return undefined;
        }
        var attributes = this.createNodeAttributes(node, props);
        var content = React.createElement("div", { className: browser_1.TREE_NODE_CONTENT_CLASS },
            this.renderExpansionToggle(node, props),
            this.renderCaption(node, props));
        return React.createElement('div', attributes, content);
    };
    PreferencesTreeWidget.prototype.renderExpansionToggle = function (node, props) {
        if (browser_1.ExpandableTreeNode.is(node) && !props.isExpansible) {
            return React.createElement("div", { className: 'preferences-tree-spacer' });
        }
        return _super.prototype.renderExpansionToggle.call(this, node, props);
    };
    PreferencesTreeWidget.prototype.toNodeName = function (node) {
        var _a;
        var visibleChildren = (_a = this.model.currentRows.get(node.id)) === null || _a === void 0 ? void 0 : _a.visibleChildren;
        var baseName = this.labelProvider.getName(node);
        var printedNameWithVisibleChildren = this.model.isFiltered && visibleChildren !== undefined
            ? baseName + " (" + visibleChildren + ")"
            : baseName;
        return printedNameWithVisibleChildren;
    };
    var PreferencesTreeWidget_1;
    PreferencesTreeWidget.ID = 'preferences.tree';
    __decorate([
        inversify_1.inject(preference_tree_model_1.PreferenceTreeModel),
        __metadata("design:type", preference_tree_model_1.PreferenceTreeModel)
    ], PreferencesTreeWidget.prototype, "model", void 0);
    __decorate([
        inversify_1.inject(browser_1.TreeProps),
        __metadata("design:type", Object)
    ], PreferencesTreeWidget.prototype, "treeProps", void 0);
    __decorate([
        inversify_1.inject(browser_1.ContextMenuRenderer),
        __metadata("design:type", browser_1.ContextMenuRenderer)
    ], PreferencesTreeWidget.prototype, "contextMenuRenderer", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], PreferencesTreeWidget.prototype, "init", null);
    PreferencesTreeWidget = PreferencesTreeWidget_1 = __decorate([
        inversify_1.injectable()
    ], PreferencesTreeWidget);
    return PreferencesTreeWidget;
}(browser_1.TreeWidget));
exports.PreferencesTreeWidget = PreferencesTreeWidget;


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/preference-widget-bindings.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/preference-widget-bindings.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bindPreferencesWidgets = void 0;
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var preference_node_renderer_1 = __webpack_require__(/*! ./components/preference-node-renderer */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-node-renderer.js");
var preference_widget_1 = __webpack_require__(/*! ./preference-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-widget.js");
var preference_tree_widget_1 = __webpack_require__(/*! ./preference-tree-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-tree-widget.js");
var preference_editor_widget_1 = __webpack_require__(/*! ./preference-editor-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-editor-widget.js");
var preference_searchbar_widget_1 = __webpack_require__(/*! ./preference-searchbar-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-searchbar-widget.js");
var preference_scope_tabbar_widget_1 = __webpack_require__(/*! ./preference-scope-tabbar-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-scope-tabbar-widget.js");
var preference_tree_model_1 = __webpack_require__(/*! ../preference-tree-model */ "./node_modules/@theia/preferences/lib/browser/preference-tree-model.js");
var preference_tree_label_provider_1 = __webpack_require__(/*! ../util/preference-tree-label-provider */ "./node_modules/@theia/preferences/lib/browser/util/preference-tree-label-provider.js");
var preference_types_1 = __webpack_require__(/*! ../util/preference-types */ "./node_modules/@theia/preferences/lib/browser/util/preference-types.js");
var preference_string_input_1 = __webpack_require__(/*! ./components/preference-string-input */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-string-input.js");
var preference_boolean_input_1 = __webpack_require__(/*! ./components/preference-boolean-input */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-boolean-input.js");
var preference_json_input_1 = __webpack_require__(/*! ./components/preference-json-input */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-json-input.js");
var preference_select_input_1 = __webpack_require__(/*! ./components/preference-select-input */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-select-input.js");
var preference_number_input_1 = __webpack_require__(/*! ./components/preference-number-input */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-number-input.js");
var preference_array_input_1 = __webpack_require__(/*! ./components/preference-array-input */ "./node_modules/@theia/preferences/lib/browser/views/components/preference-array-input.js");
function bindPreferencesWidgets(bind) {
    bind(preference_tree_label_provider_1.PreferenceTreeLabelProvider).toSelf().inSingletonScope();
    bind(browser_1.LabelProviderContribution).toService(preference_tree_label_provider_1.PreferenceTreeLabelProvider);
    bind(preference_widget_1.PreferencesWidget)
        .toDynamicValue(function (_a) {
        var container = _a.container;
        return createPreferencesWidgetContainer(container).get(preference_widget_1.PreferencesWidget);
    })
        .inSingletonScope();
    bind(browser_1.WidgetFactory).toDynamicValue(function (_a) {
        var container = _a.container;
        return ({
            id: preference_widget_1.PreferencesWidget.ID,
            createWidget: function () { return container.get(preference_widget_1.PreferencesWidget); }
        });
    }).inSingletonScope();
    bind(preference_select_input_1.PreferenceSelectInputRenderer).toSelf();
    bind(preference_array_input_1.PreferenceArrayInputRenderer).toSelf();
    bind(preference_string_input_1.PreferenceStringInputRenderer).toSelf();
    bind(preference_boolean_input_1.PreferenceBooleanInputRenderer).toSelf();
    bind(preference_number_input_1.PreferenceNumberInputRenderer).toSelf();
    bind(preference_json_input_1.PreferenceJSONLinkRenderer).toSelf();
    bind(preference_node_renderer_1.PreferenceHeaderRenderer).toSelf();
}
exports.bindPreferencesWidgets = bindPreferencesWidgets;
function createPreferencesWidgetContainer(parent) {
    var child = browser_1.createTreeContainer(parent);
    child.bind(preference_tree_model_1.PreferenceTreeModel).toSelf();
    child.rebind(browser_1.TreeModel).toService(preference_tree_model_1.PreferenceTreeModel);
    child.unbind(browser_1.TreeWidget);
    child.bind(preference_tree_widget_1.PreferencesTreeWidget).toSelf();
    child.rebind(browser_1.TreeProps).toConstantValue(__assign(__assign({}, browser_1.defaultTreeProps), { search: false }));
    child.bind(preference_editor_widget_1.PreferencesEditorWidget).toSelf();
    child.bind(preference_searchbar_widget_1.PreferencesSearchbarWidget).toSelf();
    child.bind(preference_scope_tabbar_widget_1.PreferencesScopeTabBar).toSelf();
    child.bind(preference_widget_1.PreferencesWidget).toSelf();
    child.bind(preference_node_renderer_1.PreferenceNodeRendererFactory).toFactory(function (_a) {
        var container = _a.container;
        return function (node) {
            var _a;
            var grandchild = container.createChild();
            grandchild.bind(preference_types_1.Preference.Node).toConstantValue(node);
            if (preference_types_1.Preference.LeafNode.is(node)) {
                if (node.preference.data.enum) {
                    return grandchild.get(preference_select_input_1.PreferenceSelectInputRenderer);
                }
                var type = Array.isArray(node.preference.data.type) ? node.preference.data.type[0] : node.preference.data.type;
                if (type === 'array' && ((_a = node.preference.data.items) === null || _a === void 0 ? void 0 : _a.type) === 'string') {
                    return grandchild.get(preference_array_input_1.PreferenceArrayInputRenderer);
                }
                switch (type) {
                    case 'string':
                        return grandchild.get(preference_string_input_1.PreferenceStringInputRenderer);
                    case 'boolean':
                        return grandchild.get(preference_boolean_input_1.PreferenceBooleanInputRenderer);
                    case 'number':
                    case 'integer':
                        return grandchild.get(preference_number_input_1.PreferenceNumberInputRenderer);
                    default:
                        return grandchild.get(preference_json_input_1.PreferenceJSONLinkRenderer);
                }
            }
            else {
                return grandchild.get(preference_node_renderer_1.PreferenceHeaderRenderer);
            }
        };
    });
    return child;
}


/***/ }),

/***/ "./node_modules/@theia/preferences/lib/browser/views/preference-widget.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@theia/preferences/lib/browser/views/preference-widget.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2020 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PreferencesWidget = void 0;
var inversify_1 = __webpack_require__(/*! @theia/core/shared/inversify */ "./node_modules/@theia/core/shared/inversify.js");
var browser_1 = __webpack_require__(/*! @theia/core/lib/browser */ "./node_modules/@theia/core/lib/browser/index.js");
var preference_editor_widget_1 = __webpack_require__(/*! ./preference-editor-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-editor-widget.js");
var preference_tree_widget_1 = __webpack_require__(/*! ./preference-tree-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-tree-widget.js");
var preference_searchbar_widget_1 = __webpack_require__(/*! ./preference-searchbar-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-searchbar-widget.js");
var preference_scope_tabbar_widget_1 = __webpack_require__(/*! ./preference-scope-tabbar-widget */ "./node_modules/@theia/preferences/lib/browser/views/preference-scope-tabbar-widget.js");
var PreferencesWidget = /** @class */ (function (_super) {
    __extends(PreferencesWidget, _super);
    function PreferencesWidget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PreferencesWidget_1 = PreferencesWidget;
    Object.defineProperty(PreferencesWidget.prototype, "currentScope", {
        get: function () {
            return this.tabBarWidget.currentScope;
        },
        enumerable: false,
        configurable: true
    });
    PreferencesWidget.prototype.onResize = function (msg) {
        _super.prototype.onResize.call(this, msg);
        if (msg.width < 600 && this.treeWidget && !this.treeWidget.isHidden) {
            this.treeWidget.hide();
            this.editorWidget.addClass('full-pane');
        }
        else if (msg.width >= 600 && this.treeWidget && this.treeWidget.isHidden) {
            this.treeWidget.show();
            this.editorWidget.removeClass('full-pane');
        }
    };
    PreferencesWidget.prototype.onActivateRequest = function (msg) {
        _super.prototype.onActivateRequest.call(this, msg);
        this.searchbarWidget.focus();
    };
    PreferencesWidget.prototype.init = function () {
        this.id = PreferencesWidget_1.ID;
        this.title.label = PreferencesWidget_1.LABEL;
        this.title.closable = true;
        this.addClass('theia-settings-container');
        this.title.iconClass = 'fa fa-sliders';
        this.searchbarWidget.addClass('preferences-searchbar-widget');
        this.addWidget(this.searchbarWidget);
        this.tabBarWidget.addClass('preferences-tabbar-widget');
        this.addWidget(this.tabBarWidget);
        this.treeWidget.addClass('preferences-tree-widget');
        this.addWidget(this.treeWidget);
        this.editorWidget.addClass('preferences-editor-widget');
        this.addWidget(this.editorWidget);
        this.update();
    };
    PreferencesWidget.prototype.storeState = function () {
        return {
            scopeTabBarState: this.tabBarWidget.storeState(),
            editorState: this.editorWidget.storeState(),
            searchbarWidgetState: this.searchbarWidget.storeState(),
        };
    };
    PreferencesWidget.prototype.restoreState = function (state) {
        this.tabBarWidget.restoreState(state.scopeTabBarState);
        this.editorWidget.restoreState(state.editorState);
        this.searchbarWidget.restoreState(state.searchbarWidgetState);
    };
    var PreferencesWidget_1;
    /**
     * The widget `id`.
     */
    PreferencesWidget.ID = 'settings_widget';
    /**
     * The widget `label` which is used for display purposes.
     */
    PreferencesWidget.LABEL = 'Preferences';
    __decorate([
        inversify_1.inject(preference_editor_widget_1.PreferencesEditorWidget),
        __metadata("design:type", preference_editor_widget_1.PreferencesEditorWidget)
    ], PreferencesWidget.prototype, "editorWidget", void 0);
    __decorate([
        inversify_1.inject(preference_tree_widget_1.PreferencesTreeWidget),
        __metadata("design:type", preference_tree_widget_1.PreferencesTreeWidget)
    ], PreferencesWidget.prototype, "treeWidget", void 0);
    __decorate([
        inversify_1.inject(preference_searchbar_widget_1.PreferencesSearchbarWidget),
        __metadata("design:type", preference_searchbar_widget_1.PreferencesSearchbarWidget)
    ], PreferencesWidget.prototype, "searchbarWidget", void 0);
    __decorate([
        inversify_1.inject(preference_scope_tabbar_widget_1.PreferencesScopeTabBar),
        __metadata("design:type", preference_scope_tabbar_widget_1.PreferencesScopeTabBar)
    ], PreferencesWidget.prototype, "tabBarWidget", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], PreferencesWidget.prototype, "init", null);
    PreferencesWidget = PreferencesWidget_1 = __decorate([
        inversify_1.injectable()
    ], PreferencesWidget);
    return PreferencesWidget;
}(browser_1.Panel));
exports.PreferencesWidget = PreferencesWidget;


/***/ }),

/***/ "./node_modules/@theia/userstorage/lib/browser/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@theia/userstorage/lib/browser/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2017 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./user-storage-uri */ "./node_modules/@theia/userstorage/lib/browser/user-storage-uri.js"), exports);
__exportStar(__webpack_require__(/*! ./user-storage-frontend-module */ "./node_modules/@theia/userstorage/lib/browser/user-storage-frontend-module.js"), exports);


/***/ }),

/***/ "./node_modules/@theia/workspace/lib/browser/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@theia/workspace/lib/browser/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (C) 2017 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./workspace-commands */ "./node_modules/@theia/workspace/lib/browser/workspace-commands.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-service */ "./node_modules/@theia/workspace/lib/browser/workspace-service.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-frontend-contribution */ "./node_modules/@theia/workspace/lib/browser/workspace-frontend-contribution.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-frontend-module */ "./node_modules/@theia/workspace/lib/browser/workspace-frontend-module.js"), exports);
__exportStar(__webpack_require__(/*! ./workspace-preferences */ "./node_modules/@theia/workspace/lib/browser/workspace-preferences.js"), exports);


/***/ }),

/***/ "./node_modules/@theia/preferences/src/browser/style/index.css":
/*!*********************************************************************!*\
  !*** ./node_modules/@theia/preferences/src/browser/style/index.css ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_index_js_index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../../css-loader/index.js!./index.css */ "./node_modules/css-loader/index.js!./node_modules/@theia/preferences/src/browser/style/index.css");
/* harmony import */ var _css_loader_index_js_index_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_index_js_index_css__WEBPACK_IMPORTED_MODULE_1__);

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()((_css_loader_index_js_index_css__WEBPACK_IMPORTED_MODULE_1___default()), options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((_css_loader_index_js_index_css__WEBPACK_IMPORTED_MODULE_1___default().locals) || {});

/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_theia_preferences_lib_browser_preference-frontend-module_js-node_modules-a96d91.bundle.js.map